<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Li Jie&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/chineselijie/"/>
  <updated>2019-11-04T15:35:26.037Z</updated>
  <id>https://github.com/chineselijie/</id>
  
  <author>
    <name>Li Jie</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《Git分布式版本控制详解手册》</title>
    <link href="https://github.com/chineselijie/2019/10/29/git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E8%AF%A6%E8%A7%A3%E6%89%8B%E5%86%8C/"/>
    <id>https://github.com/chineselijie/2019/10/29/git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E8%AF%A6%E8%A7%A3%E6%89%8B%E5%86%8C/</id>
    <published>2019-10-29T14:18:56.834Z</published>
    <updated>2019-11-04T15:35:26.037Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h2><blockquote><p><strong>学会使用Markdown进行编写文本文件<br>作为一名新时代的IT知识分子，熟悉Markdown语法至关重要<br>Markdown是一种轻量级标记语言，由于Markdown的轻量化、易读易写等特点<br>并且Markdown对于图片，图表、数学式都有支持<br>当前许多网站都在广泛地使用Markdown来撰写帮助文档或是用于论坛上发表消息<br>甚至Markdown都已经被用来撰写电子书<br>初学者可以使用Typora来写Markdown，进而提高自己的写作能力，熟悉语法之后，可尝试使用vim或者Visual Studio Code来进行编写</strong><br>这里附带一下Typora的下载链接，<a href="https://www.typora.io/#windows" target="_blank" rel="noopener">点击此处打开</a>,选择下载</p><p><strong>本篇手册就基于Markdown语法编写</strong></p></blockquote><h2 id="Git版本控制"><a href="#Git版本控制" class="headerlink" title="Git版本控制"></a>Git版本控制</h2><h3 id="1-Git版本控制的来历"><a href="#1-Git版本控制的来历" class="headerlink" title="1-Git版本控制的来历"></a>1-Git版本控制的来历</h3><p>  <strong>全称：Git分布式版本控制系统</strong><br>  在IT行业中，Linux系统无人不知无人不晓，在1991年linus创建了Linux并将它开源，早期的Linux就仅仅只是一个框架，就连我们熟知的vim也是后来开发者们不断开发出来的。</p><blockquote><p>在这里简要提示一下：vim最初是vi，vim第一个版本是由一个叫布莱姆荷兰人在1991年开发</p></blockquote><p>  由于Linux系统是开源，并吸引了世界各地的开发者为Linux提供代码服务，因此Linux系统不断的发展壮大，现绝大部分互联网公司服务器运用的都是Linux系统</p><p>  那么，linus是怎么管理这些代码呢，如何进行区分以及修改呢？</p><p>  早在2002年以前，世界各地的开发者们通过diff的方式将源代码发送给linus，然后由linus手工合并。</p><p>  到了2002年，Linux经过了10年的历程，其中的源代码早已经非常庞大了，代码库之大让linus很难再使用手工的方式管理了，于是呢，linus脑袋一转，选择了一个商业性的版本控制系统BitKeeper，这个控制系统的老东家BitMover公司处于人道主义，授权给Linux社区免费使用这个版本控制系统。</p><p>  不过好景不长，时隔三年，也就是在2005年的时候，一位叫Andrew(著名的samba服务由他开发而来)试图破解BitKeeper的协议，不料BitMover公司正是搞监控的，后来大家也应该能猜到，BitMover公司收回了Linux社区使用BitKeeper的版权。</p><p>  Linus完全可以出面和BitMover公司交谈一下，并管好自己社区的弟兄，但是linus没有，其实linus内心早就想写一个分布式控制系统来管理自己的代码仓库。</p><p>  Linus花了两周的时间，运用C语言写了一个分布式控制系统，Git由此而诞生，linus在一个月内，就将linux系统中的源码交接到Git中管理。</p><p>  Git迅速就成为了最流行的分布式版本控制系统，尤其是在2008年，GitHub网站(被国内称之为程序员社交网站)上线，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等。</p><h3 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2-安装Git"></a>2-安装Git</h3><blockquote><p>此章节主要所讲在Linux以及windows系统上怎么安装Git分布式版本控制</p></blockquote><p>Git是在linux上进行开发的，所以理所应当的用到Linux和unix上跑，不过，慢慢的有些大牛就将Git移植到windows上跑，现在Git不仅可以在Linux、unix、windows上跑，还来可以在mac系统上运行。</p><p><strong>在Linux上安装Git</strong></p><blockquote><p>这里就以RHEL 7版本举例</p></blockquote><h4 id="第一步：首先检查系统是否安装Git"><a href="#第一步：首先检查系统是否安装Git" class="headerlink" title="第一步：首先检查系统是否安装Git"></a>第一步：首先检查系统是否安装Git</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># git</span></span><br><span class="line">-bash: /usr/bin/git: 没有那个文件或目录</span><br></pre></td></tr></table></figure><blockquote><p>若您有信息，则跳过第二步骤，这个信息类似一个帮助文档</p></blockquote><h4 id="第二步：安装Git"><a href="#第二步：安装Git" class="headerlink" title="第二步：安装Git"></a>第二步：安装Git</h4><blockquote><p>首先清空本地所有yum源，并使用网易yum源</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># cd /etc/yum.repos.d/</span></span><br><span class="line">[root@client111 yum.repos.d]<span class="comment"># rm -rf *</span></span><br><span class="line">[root@client111 yum.repos.d]<span class="comment"># ls</span></span><br><span class="line">[root@client111 yum.repos.d]<span class="comment"># wget https://mirrors.163.com/.help/CentOS7-Base-163.repo</span></span><br><span class="line">[root@client111 yum.repos.d]<span class="comment"># ls</span></span><br><span class="line">CentOS7-Base-163.repo</span><br><span class="line">[root@client111 yum.repos.d]<span class="comment"># yum clean all</span></span><br><span class="line">[root@client111 yum.repos.d]<span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><blockquote><p>查询是否有Git软件包</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 yum.repos.d]<span class="comment"># cd</span></span><br><span class="line">[root@client111 ~]<span class="comment"># yum info yum</span></span><br><span class="line">已加载插件：fastestmirror, langpacks</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">已安装的软件包</span><br><span class="line">名称    ：yum</span><br><span class="line">架构    ：noarch</span><br><span class="line">版本    ：3.4.3</span><br><span class="line">···········</span><br></pre></td></tr></table></figure><blockquote><p>安装Git</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># yum install git -y</span></span><br><span class="line">············</span><br><span class="line">已安装:</span><br><span class="line">  git.x86_64 0:1.8.3.1-20.el7</span><br><span class="line">作为依赖被安装:</span><br><span class="line">  perl-Git.noarch 0:1.8.3.1-20.el7</span><br><span class="line">完毕！</span><br></pre></td></tr></table></figure><blockquote><p>查看是否安装成功</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># git</span></span><br><span class="line">··········</span><br><span class="line">最常用的 git 命令有：</span><br><span class="line">   add        添加文件内容至索引</span><br><span class="line">   bisect     通过二分查找定位引入 bug 的变更</span><br><span class="line">   branch     列出、创建或删除分支</span><br><span class="line">   checkout   检出一个分支或路径到工作区</span><br><span class="line">   <span class="built_in">clone</span>      克隆一个版本库到一个新目录</span><br><span class="line">   commit     记录变更到版本库</span><br><span class="line">   diff       显示提交之间、提交和工作区之间等的差异</span><br><span class="line">   fetch      从另外一个版本库下载对象和引用</span><br><span class="line">   grep       输出和模式匹配的行</span><br><span class="line">   init       创建一个空的 Git 版本库或重新初始化一个已存在的版本库</span><br><span class="line">   <span class="built_in">log</span>        显示提交日志</span><br><span class="line">   merge      合并两个或更多开发历史</span><br><span class="line">   mv         移动或重命名一个文件、目录或符号链接</span><br><span class="line">   pull       获取并合并另外的版本库或一个本地分支</span><br><span class="line">   push       更新远程引用和相关的对象</span><br><span class="line">   rebase     本地提交转移至更新后的上游分支中</span><br><span class="line">   reset      重置当前HEAD到指定状态</span><br><span class="line">   rm         从工作区和索引中删除文件</span><br><span class="line">   show       显示各种类型的对象</span><br><span class="line">   status     显示工作区状态</span><br><span class="line">   tag        创建、列出、删除或校验一个GPG签名的 tag 对象</span><br><span class="line"></span><br><span class="line">命令 <span class="string">'git help -a'</span> 和 <span class="string">'git help -g'</span> 显示可用的子命令和一些指南。参见</span><br><span class="line"><span class="string">'git help &lt;命令&gt;'</span> 或 <span class="string">'git help &lt;指南&gt;'</span> 来查看给定的子命令帮助或指南。</span><br></pre></td></tr></table></figure><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>如果您的系统是ubuntu或者Debian系统的话，请使用<code>sudo get install git -y</code>命令进行安装</li><li>如果还是不行，请使用<code>sudo apt-get install git -y</code>命令进行安装</li><li>最后还是不行，请移步至官网下载源码，用tar解压，然后编译安装，编译安装步骤：<code>./config</code>、<code>make</code>、<code>sudo make install</code>。<blockquote><p>如果你所装的系统比较先进，基本二三条是不用看的</p></blockquote></li></ul><p><strong>在windows上安装Git</strong></p><h4 id="第一步：移步官网下载最新版本"><a href="#第一步：移步官网下载最新版本" class="headerlink" title="第一步：移步官网下载最新版本"></a>第一步：移步官网下载最新版本</h4><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">点击此处访问Git官网下载界面</a><br>现在最新版本是2.23.0，于2019年8月16日发布</p><p>下载成功后请使用傻瓜式安装方法，安装地址自行输入，建议在C盘.</p><h4 id="使用Git"><a href="#使用Git" class="headerlink" title="使用Git"></a>使用Git</h4><p>安装完成之后，在桌面单机鼠标右键会多出两个选项<code>Git GUI Here</code>、<code>Git Bash Here</code>.</p><p>选择<code>Git Bash Here</code>点击，此时会蹦出一个界面</p><p>输入<code>git</code>，如果报出以下帮助文档便是安装正确</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git</span><br><span class="line">usage: git [--version] [--<span class="built_in">help</span>] [-C &lt;path&gt;] [-c &lt;name&gt;=&lt;value&gt;]</span><br><span class="line">           [--<span class="built_in">exec</span>-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</span><br><span class="line">           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]</span><br><span class="line">           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]</span><br><span class="line">           &lt;<span class="built_in">command</span>&gt; [&lt;args&gt;]</span><br><span class="line">···············</span><br><span class="line"><span class="string">'git help -a'</span> and <span class="string">'git help -g'</span> list available subcommands and some</span><br><span class="line">concept guides. See <span class="string">'git help &lt;command&gt;'</span> or <span class="string">'git help &lt;concept&gt;'</span></span><br><span class="line">to <span class="built_in">read</span> about a specific subcommand or concept.</span><br></pre></td></tr></table></figure><blockquote><p>以上就是介绍怎么安装Git，此详解手册仅仅介绍linu以及windows，其他系统安装方法也大致相同，具体可进Git官方网站阅读</p></blockquote><h3 id="3-创建账户"><a href="#3-创建账户" class="headerlink" title="3-创建账户"></a>3-创建账户</h3><h4 id="绑定用户名"><a href="#绑定用户名" class="headerlink" title="绑定用户名"></a>绑定用户名</h4><p>绑定用户在上传文件的时候就知道是谁上传的，起到一个表示作用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># git config --global user.name "Jack"</span></span><br><span class="line">[root@client111 ~]<span class="comment"># git config --global user.email "18371207979@139.com"</span></span><br><span class="line">[root@client111 ~]<span class="comment"># git config user.name</span></span><br><span class="line">Jack</span><br><span class="line">[root@client111 ~]<span class="comment"># git config user.email</span></span><br><span class="line">18371207979@139.com</span><br></pre></td></tr></table></figure><h4 id="创建一个目录"><a href="#创建一个目录" class="headerlink" title="创建一个目录"></a>创建一个目录</h4><blockquote><p>创建好一个目录，这个目录将作为一个版本仓库<br>[root@client111 ~]# cd<br>[root@client111 ~]# mkdir git-test<br>[root@client111 ~]# cd git-test/</p></blockquote><blockquote><p>使用Git管理此仓库<br>[root@client111 git-test]# git init<br>初始化空的 Git 版本库于 /root/git-test/.git/</p></blockquote><h3 id="4-连接进Github网站"><a href="#4-连接进Github网站" class="headerlink" title="4-连接进Github网站"></a>4-连接进Github网站</h3><h4 id="创建Github账号"><a href="#创建Github账号" class="headerlink" title="创建Github账号"></a>创建Github账号</h4><p><a href="https://github.com/">点击进入Github官方网站</a></p><p>Github网站挺有名，全球最大的源代码托管服务平台，2018年6月4日，微软宣布以75亿美元的股票收购GitHub。在21世纪互联网时代，我们IT人员应该理所应当地知道这个网站。</p><p>进入网站之后点击右上角注册账户,<a href="https://github.com/join?source=header-home">也可以直接点击此处开始注册</a>，注册之中，遵循能跳过则跳过，不能跳过则认真填的原则。</p><p>进入邮箱验证界面之后，无论界面怎么样，请点击左上角一个狸猫的图片，然后点击<strong>start a project</strong>，进入创建一个新的仓库界面。或者<a href="https://github.com/new">验证完成之后直接点击此处看能否跳转创建新的仓库界面</a></p><p><strong>Repository name</strong> 这是存储库的名称，随便命名就行，这里我命名为chinesejack<br><strong>Description</strong> 存储库的说明，可选输入，可输入，也可不输入<br><strong>Public</strong> 请选择此选项，任何人都可以看到此存储库。您选择谁可以提交<br><strong>Initialize this repository with a README</strong><br>使用自述文件初始化此存储库，勾选则生成README.md一个解释文件，也可以不用勾选，根据自生所需，建议勾选</p><p>最后直接鼠标单击<strong>create repository</strong>创建仓库</p><h4 id="ssh密钥链接进Github网站"><a href="#ssh密钥链接进Github网站" class="headerlink" title="ssh密钥链接进Github网站"></a>ssh密钥链接进Github网站</h4><blockquote><p>生成本机密钥</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认直接回车即可</span></span><br><span class="line">[root@client111 git-test]<span class="comment"># ssh-keygen</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa):</span><br><span class="line">Created directory <span class="string">'/root/.ssh'</span>.</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:bFQH+qf7m9/ruwsE2P5Ho3x0wzHbMN8YY+J24DXTo+M root@client111</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|          o..    |</span></span><br><span class="line"><span class="string">|         oo.   . |</span></span><br><span class="line"><span class="string">|        o. oo X+.|</span></span><br><span class="line"><span class="string">|       o ..o.=oXB|</span></span><br><span class="line"><span class="string">|        S ..=+oB=|</span></span><br><span class="line"><span class="string">|       .   +=.= +|</span></span><br><span class="line"><span class="string">|          .  E o |</span></span><br><span class="line"><span class="string">|           . .+. |</span></span><br><span class="line"><span class="string">|          ..+oo**|</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br><span class="line"><span class="string">[root@client111 git-test]# cd ~/.ssh/</span></span><br><span class="line"><span class="string">[root@client111 .ssh]# ls</span></span><br><span class="line"><span class="string">id_rsa  id_rsa.pub</span></span><br><span class="line"><span class="string">[root@client111 .ssh]# cat id_rsa.pub</span></span><br><span class="line"><span class="string">····································</span></span><br></pre></td></tr></table></figure><blockquote><p>将生成出来的密钥复制<br>进入Github网站，登陆自己刚注册的账号，右上角自己的头像旁边的扩展箭头点一下</p></blockquote><p>然后再点击<strong>Settings</strong>选项，然后再单击<strong>SSH and GPG keys</strong>选项</p><p>选择第一个<strong>New SSH key</strong>新建SSH keys密钥</p><p><strong>Title</strong>随意填写，这里我填写root@client111</p><p><strong>Key</strong>密钥将刚复制的密钥粘贴进去</p><blockquote><p> <strong>此时此刻便连接进你的GitHub仓库</strong></p></blockquote><h3 id="5-Git常用参数"><a href="#5-Git常用参数" class="headerlink" title="5- Git常用参数"></a>5- Git常用参数</h3><h4 id="clone-克隆"><a href="#clone-克隆" class="headerlink" title="clone-克隆"></a>clone-克隆</h4><p><strong>clone</strong><br>标准意为：克隆一个仓库到一个新目录<br>可以理解为：将远端的仓库克隆到本地<br>命令：git clone [链接]<br>举例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 git-test]<span class="comment"># git clone https://github.com/chineseJack/chinesejack</span></span><br><span class="line">正克隆到 <span class="string">'chinesejack'</span>...</span><br><span class="line">remote: Enumerating objects: 3, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (3/3), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), <span class="keyword">done</span>.</span><br><span class="line">[root@client111 git-test]<span class="comment"># ls</span></span><br><span class="line">chinesejack</span><br></pre></td></tr></table></figure><h4 id="add-添加"><a href="#add-添加" class="headerlink" title="add-添加"></a>add-添加</h4><p><strong>add</strong><br>标准意为：添加文件内容至索引<br>可以理解为：提交到暂缓区<br>命令：git add [文件]<br>举例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单个文件提交到暂存</span></span><br><span class="line">[root@client111 git-test]<span class="comment"># cd chinesejack/</span></span><br><span class="line">[root@client111 chinesejack]<span class="comment"># touch 123.txt</span></span><br><span class="line">[root@client111 chinesejack]<span class="comment"># git add 123.txt</span></span><br><span class="line"><span class="comment"># 多个文件提交到暂存区</span></span><br><span class="line">[root@client111 chinesejack]<span class="comment"># touch abc.txt 456.txt def.txt</span></span><br><span class="line">[root@client111 chinesejack]<span class="comment"># ls</span></span><br><span class="line">123.txt  456.txt  abc.txt  def.txt  README.md</span><br><span class="line">[root@client111 chinesejack]<span class="comment"># git add --all .</span></span><br><span class="line"><span class="comment"># .是代表当前目录</span></span><br></pre></td></tr></table></figure><h4 id="commit-提交"><a href="#commit-提交" class="headerlink" title="commit-提交"></a>commit-提交</h4><p><strong>commit</strong><br>标准意为：记录变更到仓库<br>可以理解为：将暂存区所有内容提交到当前分支<br>命令：git commit -m “填写所要描述的内容”<br>举例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 chinesejack]<span class="comment"># git commit -m "创建了4个txt文件"</span></span><br><span class="line">[master 38911e7] 创建了4个txt文件</span><br><span class="line"> 4 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 123.txt</span><br><span class="line"> create mode 100644 456.txt</span><br><span class="line"> create mode 100644 abc.txt</span><br><span class="line"> create mode 100644 def.txt</span><br></pre></td></tr></table></figure><h4 id="push-推"><a href="#push-推" class="headerlink" title="push-推"></a>push-推</h4><p><strong>push</strong><br>标准意为：更新远程引用和相关的对象<br>可以理解为：推，更新本地到远程仓库<br>命令：git push</p><blockquote><p>第一次推上去需要后面跟上项目链接，以后就可以不用输入链接<br>举例：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 chinesejack]<span class="comment"># git push https://github.com/chineseJack/chinesejack</span></span><br><span class="line">warning: push.default 未设置，它的默认值将会在 Git 2.0 由 <span class="string">'matching'</span></span><br><span class="line">修改为 <span class="string">'simple'</span>。若要不再显示本信息并在其默认值改变后维持当前使用习惯，</span><br><span class="line">进行如下设置：</span><br><span class="line"></span><br><span class="line">  git config --global push.default matching</span><br><span class="line"></span><br><span class="line">若要不再显示本信息并从现在开始采用新的使用习惯，设置：</span><br><span class="line"></span><br><span class="line">  git config --global push.default simple</span><br><span class="line"></span><br><span class="line">参见 <span class="string">'git help config'</span> 并查找 <span class="string">'push.default'</span> 以获取更多信息。</span><br><span class="line">（<span class="string">'simple'</span> 模式由 Git 1.7.11 版本引入。如果您有时要使用老版本的 Git，</span><br><span class="line">为保持兼容，请用 <span class="string">'current'</span> 代替 <span class="string">'simple'</span> 模式）</span><br><span class="line"></span><br><span class="line">Username <span class="keyword">for</span> <span class="string">'https://github.com'</span>: chineseJack <span class="comment"># 此处需要当时注册账户时候的账户名</span></span><br><span class="line">Password <span class="keyword">for</span> <span class="string">'https://chineseJack@github.com'</span>:  <span class="comment"># 此处需要填写当时注册账户时候的密码</span></span><br><span class="line">Counting objects: 4, <span class="keyword">done</span>.</span><br><span class="line">Compressing objects: 100% (2/2), <span class="keyword">done</span>.</span><br><span class="line">Writing objects: 100% (3/3), 312 bytes | 0 bytes/s, <span class="keyword">done</span>.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">To https://github.com/chineseJack/chinesejack</span><br><span class="line">   50fe4cf..38911e7  master -&gt; master</span><br></pre></td></tr></table></figure><h4 id="pull-拉"><a href="#pull-拉" class="headerlink" title="pull-拉"></a>pull-拉</h4><p><strong>pull</strong><br>标准意为：获取并整合另外的仓库或一个本地分支<br>可以理解为：拉，拉取远程仓库到本地<br>命令：git pull<br>举例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 手法如同push</span></span><br><span class="line">git pull https://github.com/chineseJack/chinesejack</span><br></pre></td></tr></table></figure><h4 id="show-查看内容"><a href="#show-查看内容" class="headerlink" title="show-查看内容"></a>show-查看内容</h4><p><strong>show</strong><br>标准意为：显示各种类型的对象<br>可以理解为：检查你所提交的版本的减少以及增加的内容<br>命令：git show<br>举例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 chinesejack]<span class="comment"># git show</span></span><br><span class="line">commit 38911e7c2226a033779fdcf7b2eef9c19cb477bf</span><br><span class="line">Author: Jack &lt;18371207979@139.com&gt;</span><br><span class="line">Date:   Tue Oct 29 20:58:34 2019 +0800</span><br><span class="line"></span><br><span class="line">    创建了4个txt文件</span><br><span class="line"></span><br><span class="line">diff --git a/123.txt b/123.txt</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..e69de29</span><br><span class="line">diff --git a/456.txt b/456.txt</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..e69de29</span><br><span class="line">diff --git a/abc.txt b/abc.txt</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..e69de29</span><br><span class="line">diff --git a/def.txt b/def.txt</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..e69de29</span><br></pre></td></tr></table></figure><blockquote><p>因为我四个文件里什么都没有，所以未显示内容</p></blockquote><h4 id="status-状态"><a href="#status-状态" class="headerlink" title="status-状态"></a>status-状态</h4><p><strong>status</strong><br>标准意为：显示工作区状态<br>可以理解为：显示状态，提醒你有没有没提交的<br>命令：git status<br>举例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 chinesejack]<span class="comment"># git status</span></span><br><span class="line"><span class="comment"># 位于分支 master</span></span><br><span class="line">无文件要提交，干净的工作区</span><br></pre></td></tr></table></figure><blockquote><p>这里改动一个文件，然后再看下状态</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 chinesejack]<span class="comment"># echo 123456789 &gt; 123.txt</span></span><br><span class="line">[root@client111 chinesejack]<span class="comment"># git status</span></span><br><span class="line"><span class="comment"># 位于分支 master</span></span><br><span class="line"><span class="comment"># 尚未暂存以备提交的变更：</span></span><br><span class="line"><span class="comment">#   （使用 "git add &lt;file&gt;..." 更新要提交的内容）</span></span><br><span class="line"><span class="comment">#   （使用 "git checkout -- &lt;file&gt;..." 丢弃工作区的改动）</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#       修改：      123.txt</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">修改尚未加入提交（使用 <span class="string">"git add"</span> 和/或 <span class="string">"git commit -a"</span>）</span><br></pre></td></tr></table></figure><blockquote><p>如果<code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容</p></blockquote><h4 id="diff-对比"><a href="#diff-对比" class="headerlink" title="diff-对比"></a>diff-对比</h4><p><strong>diff</strong><br>标准意为：显示提交之间、提交和工作区之间等的差异<br>可以理解为：你写的对比提交了的有哪些变化<br>命令：git diff</p><blockquote><p>后面还可以接版本号，与各个版本之间对比<br>举例：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 chinesejack]<span class="comment"># git diff</span></span><br><span class="line">diff --git a/123.txt b/123.txt</span><br><span class="line">index e69de29..28d1445 100644</span><br><span class="line">--- a/123.txt</span><br><span class="line">+++ b/123.txt</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+123456789</span><br></pre></td></tr></table></figure><h4 id="log-日志"><a href="#log-日志" class="headerlink" title="log-日志"></a>log-日志</h4><p><strong>log</strong><br>标准意为：显示提交日志<br>可以理解为：查看提交历史<br>命令：git log<br>举例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 chinesejack]<span class="comment"># git log</span></span><br><span class="line">commit fd6c7f54c502a2a575e4450429892ec4d1dc3e48</span><br><span class="line">Author: Jack &lt;18371207979@139.com&gt;</span><br><span class="line">Date:   Tue Oct 29 21:12:21 2019 +0800</span><br><span class="line"></span><br><span class="line">    不小心将全部文件删除</span><br><span class="line"></span><br><span class="line">commit 38911e7c2226a033779fdcf7b2eef9c19cb477bf</span><br><span class="line">Author: Jack &lt;18371207979@139.com&gt;</span><br><span class="line">Date:   Tue Oct 29 20:58:34 2019 +0800</span><br><span class="line"></span><br><span class="line">    创建了4个txt文件</span><br><span class="line"></span><br><span class="line">commit 50fe4cf75396b3e25d9ca51aa21c8a751f52ea6d</span><br><span class="line">Author: chineseJack &lt;57097857+chineseJack@users.noreply.github.com&gt;</span><br><span class="line">Date:   Mon Oct 28 20:51:58 2019 +0800</span><br><span class="line"></span><br><span class="line">    Initial commit</span><br><span class="line"></span><br><span class="line"><span class="comment"># commit：意为版本</span></span><br></pre></td></tr></table></figure><h4 id="reset-–hard-版本退回"><a href="#reset-–hard-版本退回" class="headerlink" title="reset –hard-版本退回"></a>reset –hard-版本退回</h4><p><strong>reset –hard</strong><br>标准意为：倒版本号<br>可以理解为：后面接版本编号，直接回到那个版本<br>命令：git reset –hard [版本号]<br>举例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 chinesejack]<span class="comment"># git reset --hard 38911e7</span></span><br><span class="line">HEAD 现在位于 38911e7 创建了4个txt文件</span><br><span class="line">[root@client111 chinesejack]<span class="comment"># ls</span></span><br><span class="line">123.txt  456.txt  abc.txt  def.txt  README.md</span><br></pre></td></tr></table></figure><h4 id="reflog-历史提交版本"><a href="#reflog-历史提交版本" class="headerlink" title="reflog-历史提交版本"></a>reflog-历史提交版本</h4><p><strong>reflog</strong><br>标准意为：查看命令历史<br>可以理解为：查看提交历史<br>命令：git reflog<br>举例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 chinesejack]<span class="comment"># git reflog</span></span><br><span class="line">38911e7 HEAD@&#123;0&#125;: reset: moving to 38911e7</span><br><span class="line">fd6c7f5 HEAD@&#123;1&#125;: commit: 不小心将全部文件删除</span><br><span class="line">38911e7 HEAD@&#123;2&#125;: commit: 创建了4个txt文件</span><br><span class="line">50fe4cf HEAD@&#123;3&#125;: <span class="built_in">clone</span>: from https://github.com/chineseJack/chinesejack</span><br></pre></td></tr></table></figure><blockquote><p>然后再使用<strong>reset –hard</strong>可回到’未来’版本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 chinesejack]<span class="comment"># git reset --hard fd6c7f5</span></span><br><span class="line">HEAD 现在位于 fd6c7f5 不小心将全部文件删除</span><br><span class="line">[root@client111 chinesejack]<span class="comment"># ls</span></span><br><span class="line">[root@client111 chinesejack]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="6-Git部分参数"><a href="#6-Git部分参数" class="headerlink" title="6- Git部分参数"></a>6- Git部分参数</h3><p><strong>git fetch</strong><br>从服务器下载数据库，并放到新分支，不跟自己的数据库合并</p><p><strong>git whatchanged</strong><br>查看两个分支的变化</p><p><strong>git branch</strong><br>创建分支，查看分支，删除分支</p><p><strong>git checkout</strong><br>切换分支</p><p><strong>git merge</strong><br>合并分支，把目标分支合并到当前分支</p><p><strong>git config</strong><br>配置相关信息，例如email 和name</p><p><strong>git tag</strong><br>标定版本号</p><p><strong>git mv</strong><br>重命名文件或者文件夹</p><p><strong>git rm</strong><br>删除文件或者文件夹</p><p><strong>git help</strong><br>查看帮助，还有几个无关紧要的命令，请自行查看帮助</p><h3 id="7-使用Github-Hexo搭建个人博客"><a href="#7-使用Github-Hexo搭建个人博客" class="headerlink" title="7-使用Github+Hexo搭建个人博客"></a>7-使用Github+Hexo搭建个人博客</h3><p><a href="https://chineselijie.github.io/" target="_blank" rel="noopener">效果可点击此处</a></p><blockquote><p>当您看到这里，我就默认你掌握了git的全部常用知识。如果还不是不懂，请返回到手册的开头，再看一遍。</p></blockquote><h4 id="创建个人仓库"><a href="#创建个人仓库" class="headerlink" title="创建个人仓库"></a>创建个人仓库</h4><ul><li><p>第一步 ssh进自己的GitHub账户<br>在前面第四章节的时候已经将本地ssh进github账户了，所以此处不再讲解。</p></li><li><p>第二步 主界面点击<strong>Start a project</strong><br>仓库命名请以<code>.github.io</code>结尾<br>Description 为可选择填写<br>勾选<strong>Public</strong><br>不勾选<strong>Initialize this repository with a README</strong><br>点击<strong>Create repository</strong></p></li></ul><blockquote><p>例如本文的仓库名:<strong>chineseJack.github.io</strong><br><strong>Descriptiont</strong>这里填写<strong>blog</strong></p></blockquote><p>之后就会跳转到创建好仓库，细心的查看，你的仓库会形成一个地址，同时它也可以切换ssh形式或者https形式，这里我们复制ssh形式的链接<br>例如本手册的创建出来的链接：<a href="mailto:git@github.com">git@github.com</a>:chineseJack/chineseJack.github.io.git</p><blockquote><p>在做下面一些步骤时，如果你是服务器，那么还好，如果你是在虚拟机上操作，那么建议将处理器的核数调到2核以上，最好4核，不然下面会渴望到放弃。</p></blockquote><h4 id="下载安装Node-js"><a href="#下载安装Node-js" class="headerlink" title="下载安装Node.js"></a>下载安装Node.js</h4><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">点击此处下载</a><br>下载Linux Binaries (x64)包，将包导入到root的家目录</p><p>或者用<strong>wget</strong>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># wget https://npm.taobao.org/mirrors/node/v10.16.0/node-v10.16.0-linux-x64.tar.xz</span></span><br><span class="line">[root@client111 ~]<span class="comment"># mv node-v10.16.0-linux-x64.tar.xz /usr/local/</span></span><br></pre></td></tr></table></figure><ul><li><p>安装node.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># cd /usr/local/</span></span><br><span class="line">[root@client111 <span class="built_in">local</span>]<span class="comment"># tar xf node-v10.16.0-linux-x64.tar.xz</span></span><br><span class="line">[root@client111 <span class="built_in">local</span>]<span class="comment"># ln -s node-v10.16.0-linux-x64 nodejs</span></span><br><span class="line">[root@client111 <span class="built_in">local</span>]<span class="comment"># cd nodejs/</span></span><br><span class="line">[root@client111 nodejs]<span class="comment"># ls</span></span><br><span class="line">bin  CHANGELOG.md  include  lib  LICENSE  README.md  share</span><br><span class="line">[root@client111 nodejs]<span class="comment"># cd bin/</span></span><br><span class="line">[root@client111 bin]<span class="comment"># ./node -v</span></span><br><span class="line">v10.16.0</span><br></pre></td></tr></table></figure></li><li><p>创建软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 bin]<span class="comment"># ls</span></span><br><span class="line">node  npm  npx</span><br><span class="line">[root@client111 bin]<span class="comment"># pwd</span></span><br><span class="line">/usr/<span class="built_in">local</span>/nodejs/bin</span><br><span class="line">[root@client111 bin]<span class="comment"># ln -s /usr/local/nodejs/bin/node /usr/local/bin/node</span></span><br><span class="line">[root@client111 bin]<span class="comment"># ln -s /usr/local/nodejs/bin/npm /usr/local/bin/npm</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="安装部署Hexo"><a href="#安装部署Hexo" class="headerlink" title="安装部署Hexo"></a>安装部署Hexo</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># npm install hexo-cli -g</span></span><br><span class="line">/usr/<span class="built_in">local</span>/node-v10.16.0-linux-x64/bin/hexo -&gt; /usr/<span class="built_in">local</span>/node-v10.16.0-linux-x6 4/lib/node_modules/hexo-cli/bin/hexo</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.1 (node_modules/hex o-cli/node_modules/fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@ 2.1.1: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"linux"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125; )</span><br><span class="line"></span><br><span class="line">+ hexo-cli@3.1.0</span><br><span class="line">added 66 packages from 313 contributors <span class="keyword">in</span> 85.809s</span><br></pre></td></tr></table></figure><blockquote><p>出现报错，不要慌张，依次往下<br>其实<a href="mailto:fsevents@2.1.1" target="_blank" rel="noopener">fsevents@2.1.1</a> 为mac系统中的，linux系统可以忽略</p></blockquote><ul><li><p>创建软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># cd /usr/local/nodejs/lib/node_modules/hexo-cli/bin/</span></span><br><span class="line">[root@client111 bin]<span class="comment"># pwd</span></span><br><span class="line">/usr/<span class="built_in">local</span>/nodejs/lib/node_modules/hexo-cli/bin</span><br><span class="line">[root@client111 bin]<span class="comment"># ln -s /usr/local/nodejs/lib/node_modules/hexo-cli/bin/hexo /usr/local/bin/hexo</span></span><br><span class="line">[root@client111 bin]<span class="comment"># cd</span></span><br><span class="line">[root@client111 ~]<span class="comment"># vim .bash_profile</span></span><br><span class="line"><span class="comment"># 将第十行改动如下</span></span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/bin:/usr/<span class="built_in">local</span>/bin</span><br><span class="line"><span class="comment"># 保存并退出</span></span><br><span class="line">[root@client111 ~]<span class="comment"># source /etc/profile</span></span><br><span class="line">[root@client111 ~]<span class="comment"># hexo</span></span><br><span class="line">Usage: hexo &lt;<span class="built_in">command</span>&gt;</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">·······</span><br><span class="line"><span class="comment"># 如果没有报错则表示hexo安装成功</span></span><br></pre></td></tr></table></figure></li><li><p>部署Hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># cd</span></span><br><span class="line">[root@client111 ~]<span class="comment"># mkdir hexo</span></span><br><span class="line">[root@client111 ~]<span class="comment"># cd hexo/</span></span><br><span class="line">[root@client111 blog]<span class="comment"># hexo init</span></span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line">正克隆到 <span class="string">'/root/hexo'</span>...</span><br><span class="line">remote: Enumerating objects: 22, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (22/22), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (17/17), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 153 (delta 8), reused 8 (delta 3), pack-reused 131</span><br><span class="line">接收对象中: 100% (153/153), 29.67 KiB | 5.00 KiB/s, <span class="keyword">done</span>.</span><br><span class="line">处理 delta 中: 100% (70/70), <span class="keyword">done</span>.</span><br><span class="line">子模组 <span class="string">'themes/landscape'</span> (https://github.com/hexojs/hexo-theme-landscape.git) 已为路径 <span class="string">'themes/landscape'</span> 注册</span><br><span class="line">正克隆到 <span class="string">'themes/landscape'</span>...</span><br><span class="line">remote: Enumerating objects: 32, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (32/32), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (25/25), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 1054 (delta 20), reused 10 (delta 7), pack-reused 1022</span><br><span class="line">接收对象中: 100% (1054/1054), 3.21 MiB | 3.00 KiB/s, <span class="keyword">done</span>.</span><br><span class="line">处理 delta 中: 100% (578/578), <span class="keyword">done</span>.</span><br><span class="line">子模组路径 <span class="string">'themes/landscape'</span>：检出 <span class="string">'73a23c51f8487cfcd7c6deec96ccc7543960d350'</span></span><br><span class="line">INFO  Install dependencies</span><br><span class="line">npm notice created a lockfile as package-lock.json. You should commit this file.</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules/nunjucks/node_modules/fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@1.2.9: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"linux"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.1 (node_modules/fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@2.1.1: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"linux"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span><br><span class="line"></span><br><span class="line">added 362 packages from 470 contributors and audited 2622 packages <span class="keyword">in</span> 211.34s</span><br><span class="line">found 0 vulnerabilities</span><br><span class="line"></span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>这里的警告依然如此不用理会，最后一句<strong>Start blogging with Hexo!</strong>我们就可以开始用Hexo博客！</p></blockquote><h4 id="生成测试页面"><a href="#生成测试页面" class="headerlink" title="生成测试页面"></a>生成测试页面</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 hexo]<span class="comment"># hexo g</span></span><br><span class="line">[root@client111 hexo]<span class="comment"># hexo s</span></span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><blockquote><p>此时先不用Ctrl+C，先访问<a href="http://localhost:4000看看" target="_blank" rel="noopener">http://localhost:4000看看</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># netstat -lntup | grep 'hexo'</span></span><br><span class="line">tcp6       0      0 :::4000                 :::*                    LISTEN      53413/hexo</span><br><span class="line">[root@client111 ~]<span class="comment"># yum install elinks.x86_64 -y</span></span><br><span class="line">[root@client111 ~]<span class="comment"># elinks http://localhost:4000</span></span><br><span class="line">   Link: [1]Hexo (alternate)</span><br><span class="line"></span><br><span class="line">                                    [2]Hexo</span><br><span class="line"></span><br><span class="line">   Home [3]Archives</span><br><span class="line">   [4]_____________________ [5]</span><br><span class="line">   [6]2019-11-04</span><br><span class="line"></span><br><span class="line">                                  Hello World</span><br><span class="line"></span><br><span class="line">   Welcome to [7]Hexo! This is your very first post. Check [8]documentation</span><br><span class="line">   <span class="keyword">for</span> more info. If you get any problems when using Hexo, you can find the</span><br><span class="line">   answer <span class="keyword">in</span> [9]troubleshooting or you can ask me on [10]GitHub.</span><br><span class="line"></span><br><span class="line">Quick Start</span><br><span class="line"></span><br><span class="line">  Create a new post</span><br><span class="line"></span><br><span class="line">   1 $ hexo new <span class="string">"My New Post"</span></span><br><span class="line"></span><br><span class="line">   More info: [11]Writing</span><br><span class="line"></span><br><span class="line">  Run server</span><br><span class="line"></span><br><span class="line">   1 $ hexo server</span><br><span class="line"></span><br><span class="line">   More info: [12]Server</span><br><span class="line"></span><br><span class="line">  Generate static files</span><br></pre></td></tr></table></figure><blockquote><p>如果能看到这些信息就表示成功，此时就可以Press Ctrl+C to stop。</p></blockquote><h4 id="生成博客页面"><a href="#生成博客页面" class="headerlink" title="生成博客页面"></a>生成博客页面</h4><ul><li>修改配置文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 hexo]<span class="comment"># ls</span></span><br><span class="line">_config.yml  node_modules  package-lock.json  scaffolds  themes</span><br><span class="line">db.json      package.json  public             <span class="built_in">source</span></span><br><span class="line">[root@client111 hexo]<span class="comment"># vim _config.yml</span></span><br><span class="line"><span class="comment"># 在最后一行添加：</span></span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:chineseJack/chineseJack.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>repo这里请使用上面创建仓库时所复制的链接</p></blockquote><ul><li>生成页面并部署<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 hexo]<span class="comment"># hexo c &amp;&amp; hexo g &amp;&amp; hexo d</span></span><br><span class="line">········</span><br><span class="line">INFO  28 files generated <span class="keyword">in</span> 410 ms</span><br><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>出现报错，不要惊慌<br>解决办法：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 hexo]<span class="comment"># npm install --save hexo-deployer-git</span></span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.1 (node_modules/fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@2.1.1: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"linux"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules/nunjucks/node_modules/fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@1.2.9: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"linux"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span><br><span class="line"></span><br><span class="line">+ hexo-deployer-git@2.0.0</span><br><span class="line">added 1 package from 1 contributor and audited 2697 packages <span class="keyword">in</span> 5.796s</span><br><span class="line">found 0 vulnerabilities</span><br></pre></td></tr></table></figure><blockquote><p>忽视前4行的报错</p></blockquote><p><strong>再进行一次部署</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 hexo]<span class="comment"># hexo c &amp;&amp; hexo g &amp;&amp; hexo d</span></span><br><span class="line">············</span><br><span class="line">Username <span class="keyword">for</span> <span class="string">'https://github.com'</span>: chineseJack <span class="comment"># 这里树妖验证你的github账户</span></span><br><span class="line">Password <span class="keyword">for</span> <span class="string">'https://chineseJack@github.com'</span>:   <span class="comment"># 这里需要验证你的GitHub账户密码</span></span><br><span class="line">·········</span><br><span class="line">To git@github.com:chineseJack/chineseJack.github.io.git</span><br><span class="line"> * [new branch]      HEAD -&gt; master</span><br><span class="line">分支 master 设置为跟踪来自 git@github.com:chineseJack/chineseJack.github.io.git 的远程分支 master。</span><br><span class="line">INFO  Deploy <span class="keyword">done</span>: git</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>至此，搭建个人博客已结束，浏览器访问仓库名称就是属于自己的个人博客<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 hexo]<span class="comment"># elinks chineseJack.github.io</span></span><br><span class="line">   Link: [1]Hexo (alternate)</span><br><span class="line"></span><br><span class="line">                                    [2]Hexo</span><br><span class="line"></span><br><span class="line">   Home [3]Archives</span><br><span class="line">   [4]_____________________ [5]</span><br><span class="line">   [6]2019-11-04</span><br><span class="line"></span><br><span class="line">                                  Hello World</span><br><span class="line"></span><br><span class="line">   Welcome to [7]Hexo! This is your very first post. Check [8]documentation</span><br><span class="line">   <span class="keyword">for</span> more info. If you get any problems when using Hexo, you can find the</span><br><span class="line">   answer <span class="keyword">in</span> [9]troubleshooting or you can ask me on [10]GitHub.</span><br><span class="line"></span><br><span class="line">Quick Start</span><br><span class="line"></span><br><span class="line">  Create a new post</span><br><span class="line"></span><br><span class="line">   1 $ hexo new <span class="string">"My New Post"</span></span><br><span class="line"></span><br><span class="line">   More info: [11]Writing</span><br><span class="line"></span><br><span class="line">  Run server</span><br></pre></td></tr></table></figure></li></ul><p><strong>下一章节将讲述个性化设置以及上传博客</strong></p><h3 id="8-个性化设置"><a href="#8-个性化设置" class="headerlink" title="8-个性化设置"></a>8-个性化设置</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;开篇&quot;&gt;&lt;a href=&quot;#开篇&quot; class=&quot;headerlink&quot; title=&quot;开篇&quot;&gt;&lt;/a&gt;开篇&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;学会使用Markdown进行编写文本文件&lt;br&gt;作为一名新时代的IT知识
      
    
    </summary>
    
    
      <category term="Git" scheme="https://github.com/chineselijie/categories/Git/"/>
    
    
      <category term="Git" scheme="https://github.com/chineselijie/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>python内置函数</title>
    <link href="https://github.com/chineselijie/2019/09/23/9.python%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/"/>
    <id>https://github.com/chineselijie/2019/09/23/9.python%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/</id>
    <published>2019-09-23T14:05:55.545Z</published>
    <updated>2019-09-23T14:05:22.949Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[TOC]</p><h2 id="数学运算函数："><a href="#数学运算函数：" class="headerlink" title="数学运算函数："></a>数学运算函数：</h2><p><code>abs()</code>   返回数字的绝对值<br><code>divmod()</code>    计算两个数的商和余数，用元组返回<br><code>pow()</code>   返回 xy（x的y次方） 的值<br><code>sum()</code>   求和计算<br><code>bin()</code>   返回一个整数 int 或者长整数 long int 的二进制表示<br><code>oct()</code>   将一个整数转换成8进制字符串<br><code>round()</code> 返回浮点数x的四舍五入值<br><code>long()</code>  将数字或字符串转换为一个长整型<br><code>hex()</code>   将10进制整数转换成16进制整数</p><h2 id="类型转换函数："><a href="#类型转换函数：" class="headerlink" title="类型转换函数："></a>类型转换函数：</h2><p><code>str()</code>   函数将对象转化为String的形式<br><code>int()</code>   函数用于将一个字符串会数字转换为整型<br><code>tuple()</code> 将列表转换为元组<br><code>bool()</code>  参数转换为布尔类型，如果没有参数，返回False<br><code>float()</code> 将整数和字符串转换成浮点数<br><code>list()</code>  将元组转换为列表</p><h2 id="序列操作函数："><a href="#序列操作函数：" class="headerlink" title="序列操作函数："></a>序列操作函数：</h2><p><code>min()</code>         返回给定参数的最小值，参数可以为序列<br><code>sorte()</code>     对所有可迭代的对象进行排序操作<br><code>len()</code>         返回对象（字符、列表、元组等）长度或项目个数<br><code>filter()</code>     用于过滤序列，过滤掉不符合条件的元素，返回由符合条件元素组成的新列表<br><code>set()</code>         创建一个无序不重复元素集，可进行关系测试，删除重复数据，还可以计算交集、差集、并集等。<br><code>zip()</code>         用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的列表。 如果各个迭代器的元素个数不一致，则返回列表长度与最短的对象相同，利用<code>*</code>号操作符，可以将元组解压为列表。<br><code>reversed()</code>     用于反向排序列表中元素<br><code>enumerate()</code>     将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在<code>for</code>循环当中</p><h2 id="输入输出函数："><a href="#输入输出函数：" class="headerlink" title="输入输出函数："></a>输入输出函数：</h2><p><code>input()</code>     用来获取控制台输入，输入的值必须是一个合法的python表达式<br><code>print()</code>     用于打印输出<br><code>open()</code>     打开一个文件，创建一个<code>file</code>对象<br><code>file()</code>     用于创建一个<code>file</code>对象，它有一个别名叫<code>open()</code><br><code>raw_input()</code>     接收控制台输入的内容，可接收所有的类型     </p><h2 id="创建函数："><a href="#创建函数：" class="headerlink" title="创建函数："></a>创建函数：</h2><p><code>iter()</code>        用来生成迭代器<br><code>range()</code>        创建一个整数列表，一般用在<code>for</code>循环中。<br><code>dict()</code>        用于创建一个字典<br><code>exec()</code>        执行储存在字符串或文件中的Python语句，相比于<code>eval</code>，<code>exec</code>可以执行更复杂的Python代码<br><code>bytearray()</code>    返回一个新字节数组。这个数组里的元素是可变的，并且每个元素的值范围:<code>0&lt;=x&lt;256</code><br><code>complex()</code>        创建一个值为<code>real+imag*j</code>的复数或者转化一个字符串或数为复数,如果第一个参数为字符串，则不需要指定第二个参数<br><code>xrange()</code>        用法与<code>range</code>完全相同，所不同的是生成的不是一个数组，而是一个生成器。</p><h2 id="获取函数："><a href="#获取函数：" class="headerlink" title="获取函数："></a>获取函数：</h2><p><code>id()</code>    用于获取对象的内存地址<br><code>getattr()</code>   返回一个对象属性值<br><code>help()</code>  用于查看函数或模块用途的详细说明<br><code>next()</code>  返回迭代器的下一个项目<br><code>memoryview()</code>    返回给定参数的内存查看对象(Momory view)<br><code>hash()</code>  用于获取取一个对象（字符串或者数值等）的哈希值<br><code>vars()</code>  返回对象object的属性和属性值的字典对象<br><code>globals()</code>   以字典类型返回当前位置的全部全局变量<br><code>max()</code>   返回给定参数的最大值，参数可以为序列<br><code>property()</code>  在新式类中返回属性值<br><code>ord()</code>   返回一个字符对应的ASCII或者Unicode值<br><code>staticmethod()</code>  返回函数的静态方法<br><code>frozenset()</code> 返回一个不可变的集合，不能再添加或删除任何元素<br><code>locals()</code>    以字典类型返回当前位置的全部局部变量<br><code>unichr()</code>    返回<code>unicode</code>字符<br><code>map()</code>   根据提供的函数对指定序列做映射。 第一个参数<code>function</code>以参数序列中的每一个元素调用<code>function</code>函数，返回包含每次<code>function</code>函数返回值的新列表<br><code>dir()</code>   函数不带参数时，返回当前范围内的变量、方法和定义的类型列表；带参数时，返回参数的属性、方法列表。如果参数包含方法<code>__dir__()</code>，该方法将被调用。如果参数不包含<code>__dir__()</code>，该方法将最大限度地收集参数信息</p><h2 id="判断函数："><a href="#判断函数：" class="headerlink" title="判断函数："></a>判断函数：</h2><p><code>issubclass()</code>    判断参数<code>class</code>是否是类型参数<code>classinfo</code>的子类<br><code>hasattr()</code>   用于判断对象是否包含对应的属性。<br><code>isinstance()</code>    判断一个对象是否是一个已知的类型，类似<code>type()</code><br><code>any()</code>   用于判断给定的可迭代参数<code>iterable</code>是否全部为空对象，如果都为空、0、false，则返回 False，如果不都为空、0、false，则返回True<br><code>all()</code>   函数用于判断给定的可迭代参数<code>iterable</code>中的所有元素是否不为 0、’’、False 或者<code>iterable</code>为空，如果是返回 True，否则返回 False<br><code>callable()</code>  检查一个对象是否是可调用的。如果返回True，<code>object</code>仍然可能调用失败；但如果返回False，调用对象<code>ojbect</code>绝对不会成功<br><code>cmp()</code>     用于比较2个对象，如果<code>x &lt; y</code>返回-1, 如果<code>x == y</code>返回 0, 如果<code>x &gt; y</code>返回 1</p><h2 id="操作函数："><a href="#操作函数：" class="headerlink" title="操作函数："></a>操作函数：</h2><p><code>delattr()</code>     用于删除属性。<br><code>setattr()</code>     对应函数<code>getatt()</code>，用于设置属性值，该属性必须存在。<br><code>slice()</code>     切片分割对象，用在切片操作函数里的参数传递。<br><code>repr()</code>     将对象转化为供解释器读取的形式。<br><code>compile()</code>     将一个字符串编译为字节代码。<br><code>eval()</code>     执行一个字符串表达式，并返回表达式的值<br><code>execfile()</code>     用来执行一个文件。<br><code>super()</code>     调用下一个父类(超类)并返回该父类实例的方法<br><code>reload()</code>     重新载入之前载入的模块<br><code>type()</code>     如果你只有第一个参数则返回对象的类型，三个参数返回新的类型对象。<br><code>format()</code>     格式化字符串的函数<code>str.format()</code>，它增强了字符串格式化的功能。<br><code>basestring()</code>     是<code>str</code>和<code>unicode</code>的超类（父类），也是抽象类，因此不能被调用和实例化，但可以被用来判断一个对象是否为<code>str</code>或者<code>unicode</code>的实例<br><code>classmethod()</code>     <code>classmethod</code>修饰符对应的函数不需要实例化，不需要<code>self</code>参数，但第一个参数需要是表示自身类的<code>cls</code>参数，可以来调用类的属性，类的方法，实例化对象等。<br><code>chr()</code>     用一个范围在<code>range (256)</code>内的就是(0～255)整数作参数，返回一个对应的字符<br><code>__import__()</code>     动态加载类和函数。 如果一个模块经常变化就可以使用 <code>__import__()</code> 来动态载入。<br><code>reduce()</code>     对参数序列中元素进行累积。 函数将一个数据集合（链表，元组等）中的所有数据进行下列操作：用传给<code>reduce</code>中的函数 <code>function</code>（有两个参数）先对集合中的第 1、2 个元素进行操作，得到的结果再与第三个数据用 <code>function</code> 函数运算，最后得到一个结果。</p><h2 id="函数的详细介绍"><a href="#函数的详细介绍" class="headerlink" title="函数的详细介绍:"></a>函数的详细介绍:</h2><h3 id="函数名：abs"><a href="#函数名：abs" class="headerlink" title="函数名：abs()"></a>函数名：abs()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">abs(x)</span><br><span class="line">参数：数值表达式</span><br><span class="line">返回值：函数返回x（数字）的绝对值。</span><br><span class="line">代码示例：</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"abs(-45) : "</span>, abs(<span class="number">-45</span>))</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"abs(100.12) : "</span>, abs(<span class="number">100.12</span>))</span><br></pre></td></tr></table></figure><h3 id="函数名：divmod"><a href="#函数名：divmod" class="headerlink" title="函数名：divmod()"></a>函数名：divmod()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">divmod(a, b)</span><br><span class="line">参数：a,b均为数值</span><br><span class="line">返回值：一个包含商和余数的元组 例如（<span class="number">3</span>，<span class="number">1</span>），其中<span class="number">3</span>是商，<span class="number">1</span>是余数</span><br><span class="line">代码示例：</span><br><span class="line">divmod(<span class="number">7</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：pow"><a href="#函数名：pow" class="headerlink" title="函数名：pow()"></a>函数名：pow()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">pow(x, y)</span><br><span class="line">参数：x,y均为数值</span><br><span class="line">返回值：返回结果值，为数值类型</span><br><span class="line">代码示例：</span><br><span class="line">pow(<span class="number">7</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：sum"><a href="#函数名：sum" class="headerlink" title="函数名：sum()"></a>函数名：sum()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">sum(a,b)</span><br><span class="line">参数：a为元素为数值的可迭代的对象， b为一个数值类型的参数，b可不写，不写时默认为<span class="number">0</span></span><br><span class="line">返回值：返回值为迭代对象相加的和加上第二个参数，为数值类型</span><br><span class="line">代码示例：</span><br><span class="line">a = sum((<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：bin"><a href="#函数名：bin" class="headerlink" title="函数名：bin()"></a>函数名：bin()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">bin(x)</span><br><span class="line">参数：x为数值类型</span><br><span class="line">返回值：返回值为二进制的表示，是字符串类型</span><br><span class="line">代码示例：</span><br><span class="line">bin(<span class="number">12</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：oct"><a href="#函数名：oct" class="headerlink" title="函数名：oct()"></a>函数名：oct()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">oct(x)</span><br><span class="line">参数：x为数值类型</span><br><span class="line">返回值：返回值为八进制表示，是字符串类型</span><br><span class="line">代码示例：</span><br><span class="line">oct(<span class="number">11</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：round"><a href="#函数名：round" class="headerlink" title="函数名：round()"></a>函数名：round()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">round(m,n)</span><br><span class="line">参数：m为要四舍五入的值，为数值类型，n是保留的位数，为int类型</span><br><span class="line">返回值：返回值为数值类型</span><br><span class="line">代码示例：</span><br><span class="line">round(<span class="number">10.265</span> ,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：long"><a href="#函数名：long" class="headerlink" title="函数名：long()"></a>函数名：long()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">long(x, y)</span><br><span class="line">参数：x为字符串或数值类型，b为进制数，默认<span class="number">10</span></span><br><span class="line">返回值：结果为数值类型</span><br><span class="line">代码示例：</span><br><span class="line">long(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：hex"><a href="#函数名：hex" class="headerlink" title="函数名：hex()"></a>函数名：hex()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">hex(x)</span><br><span class="line">参数：x为十进制数值</span><br><span class="line">返回值：十六进制的字符串</span><br><span class="line">代码示例：</span><br><span class="line">hex(<span class="number">11</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：str"><a href="#函数名：str" class="headerlink" title="函数名：str()"></a>函数名：str()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">str(x)</span><br><span class="line">参数：x为对象</span><br><span class="line">返回值：返回字符串</span><br><span class="line">代码示例：</span><br><span class="line">str(object)</span><br></pre></td></tr></table></figure><h3 id="函数名：int"><a href="#函数名：int" class="headerlink" title="函数名：int()"></a>函数名：int()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">int(x,y)</span><br><span class="line">参数：x为字符串类型</span><br><span class="line">返回值：数值类型</span><br><span class="line">代码示例：</span><br><span class="line">int(<span class="string">"111111"</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：tuple"><a href="#函数名：tuple" class="headerlink" title="函数名：tuple()"></a>函数名：tuple()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">tuple( seq )</span><br><span class="line">参数：seq为列表</span><br><span class="line">返回值：返回元组</span><br><span class="line">代码示例：</span><br><span class="line">tuple([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br></pre></td></tr></table></figure><h3 id="函数名：bool"><a href="#函数名：bool" class="headerlink" title="函数名：bool()"></a>函数名：bool()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">bool(x)</span><br><span class="line">参数：x为要转换的参数，可以是数值或者string</span><br><span class="line">返回值：返回值为boolean类型，当参数为<span class="number">0</span>或者空或者<span class="string">""</span>的时候，返回false</span><br><span class="line">代码示例：</span><br><span class="line">bool(<span class="string">""</span>)</span><br><span class="line">bool(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：float"><a href="#函数名：float" class="headerlink" title="函数名：float()"></a>函数名：float()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">float(x)</span><br><span class="line">参数：x为数值或者String</span><br><span class="line">返回值：返回值为浮点数</span><br><span class="line">代码示例：</span><br><span class="line">float(<span class="string">"1"</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：list"><a href="#函数名：list" class="headerlink" title="函数名：list()"></a>函数名：list()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">list( seq )</span><br><span class="line">参数：seq为元组</span><br><span class="line">返回值：返回数组</span><br><span class="line">代码示例：</span><br><span class="line">list((<span class="string">"12"</span>,<span class="string">"456"</span>,<span class="string">"789"</span>))</span><br></pre></td></tr></table></figure><h3 id="函数名：min"><a href="#函数名：min" class="headerlink" title="函数名：min()"></a>函数名：min()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">min( x, y, z, .... )</span><br><span class="line">参数：参数为序列或者集合</span><br><span class="line">返回值：返回最小值</span><br><span class="line">代码示例：</span><br><span class="line">min((<span class="string">"12"</span>,<span class="string">"456"</span>,<span class="string">"789"</span>))</span><br></pre></td></tr></table></figure><h3 id="函数名：sorted"><a href="#函数名：sorted" class="headerlink" title="函数名：sorted()"></a>函数名：sorted()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">sorted(iterable, cmp, key, reverse)</span><br><span class="line">参数：iterable为要排序的序列，cmp为比较函数，key为用来进行比较的元素，reverse为升序或者降序，默认为false降序</span><br><span class="line">返回值：返回排好序的序列</span><br><span class="line">代码示例：</span><br><span class="line"><span class="comment">#对元组进行排序</span></span><br><span class="line">sorted((<span class="number">12</span>,<span class="number">123</span>,<span class="number">56</span>),reverse = <span class="literal">True</span>)</span><br><span class="line"><span class="comment">#利用cmp函数排序</span></span><br><span class="line">sorted([(<span class="string">'b'</span>,<span class="number">2</span>),(<span class="string">'a'</span>,<span class="number">1</span>),(<span class="string">'c'</span>,<span class="number">3</span>),(<span class="string">'d'</span>,<span class="number">4</span>)], cmp=<span class="keyword">lambda</span> x,y:cmp(x[<span class="number">1</span>],y[<span class="number">1</span>]))</span><br><span class="line"><span class="comment">#利用key排序</span></span><br><span class="line">sorted([(<span class="string">'b'</span>,<span class="number">2</span>),(<span class="string">'a'</span>,<span class="number">1</span>),(<span class="string">'c'</span>,<span class="number">3</span>),(<span class="string">'d'</span>,<span class="number">4</span>)], key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="函数名：len"><a href="#函数名：len" class="headerlink" title="函数名：len()"></a>函数名：len()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">len( s )</span><br><span class="line">参数：s为字符、列表元组等</span><br><span class="line">返回值：返回数值类型</span><br><span class="line">代码示例：</span><br><span class="line">len(<span class="string">"xtyz"</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：filter"><a href="#函数名：filter" class="headerlink" title="函数名：filter()"></a>函数名：filter()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">filter(function, iterable)</span><br><span class="line">参数：第一个参数为函数，函数返回布尔类型， 第二个参数为可迭代对象</span><br><span class="line">返回值：返回过滤后的集合</span><br><span class="line">代码示例：</span><br><span class="line"><span class="function"><span class="keyword">def</span>  <span class="title">tt</span> <span class="params">(parm)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> parm &lt; <span class="number">7</span></span><br><span class="line"></span><br><span class="line">a = filter(tt, [<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>])</span><br><span class="line"> </span><br><span class="line">print(list(a))</span><br></pre></td></tr></table></figure><h3 id="函数名：set"><a href="#函数名：set" class="headerlink" title="函数名：set()"></a>函数名：set()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">set(x)</span><br><span class="line">参数：x为可迭代对象</span><br><span class="line">返回值：返回一个不重复的元素集合</span><br><span class="line">代码示例：</span><br><span class="line">a = set(<span class="string">"9876554321"</span>)</span><br><span class="line">print(a)</span><br><span class="line"><span class="comment">#可以用来计算交集，并集，差集等</span></span><br><span class="line">x = set(<span class="string">"987654"</span>)</span><br><span class="line">y = set(<span class="string">"654321"</span>)</span><br><span class="line"></span><br><span class="line">print(x&amp;y)<span class="comment">#交集</span></span><br><span class="line">print(x|y)<span class="comment">#并集</span></span><br><span class="line">print(x-y)<span class="comment">#差集</span></span><br></pre></td></tr></table></figure><h3 id="函数名：zip"><a href="#函数名：zip" class="headerlink" title="函数名：zip()"></a>函数名：zip()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">zip(a,b,c,d.....)</span><br><span class="line">参数：参数为多个可迭代对象</span><br><span class="line">返回值：返回打包好的元组集合,元素合数与长度最短的迭代对象相同</span><br><span class="line">代码示例：</span><br><span class="line">x = <span class="string">"987654"</span></span><br><span class="line">y = <span class="string">"654321"</span></span><br><span class="line">print(list(zip(x,y)))</span><br><span class="line"></span><br><span class="line">x = [<span class="number">1</span>,<span class="number">2.3</span>]</span><br><span class="line">y = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">print(list(zip(x,y)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">z = zip(x,y)</span><br><span class="line">print(zip(*z))</span><br></pre></td></tr></table></figure><h3 id="函数名：reverse"><a href="#函数名：reverse" class="headerlink" title="函数名：reverse()"></a>函数名：reverse()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">list.reverse()</span><br><span class="line">参数：没有参数</span><br><span class="line">返回值：没有返回值</span><br><span class="line">代码示例：</span><br><span class="line">x = (<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>)</span><br><span class="line">x.reverse()</span><br><span class="line">print(x)<span class="comment">#注意，是反向排列，不是按照大小排序</span></span><br></pre></td></tr></table></figure><h3 id="函数名：enumerate"><a href="#函数名：enumerate" class="headerlink" title="函数名：enumerate()"></a>函数名：enumerate()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">enumerate(sequence)</span><br><span class="line">参数：参数为可迭代对象</span><br><span class="line">返回值：返回 enumerate(枚举) 对象</span><br><span class="line">代码示例：</span><br><span class="line">seasons = [<span class="string">'Spring'</span>, <span class="string">'Summer'</span>, <span class="string">'Fall'</span>, <span class="string">'Winter'</span>]</span><br><span class="line">print(list(enumerate(seasons)))</span><br></pre></td></tr></table></figure><h3 id="函数名：input"><a href="#函数名：input" class="headerlink" title="函数名：input()"></a>函数名：input()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">input()</span><br><span class="line">参数：参数无</span><br><span class="line">返回值：返回输入值的类型（<span class="number">3</span> .x里 input() 默认接收到的是str 类型）</span><br><span class="line">代码示例：</span><br><span class="line">a = input(<span class="string">"输入"</span>)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><h3 id="函数名：print"><a href="#函数名：print" class="headerlink" title="函数名：print()"></a>函数名：print()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">print(*objects, sep=<span class="string">' '</span>, end=<span class="string">'\n'</span>, file=sys.stdout)</span><br><span class="line">参数：objects 为输出对象，可为多个，用，分隔； sep为间隔符，默认为<span class="string">" "</span>; end为结尾的符号。默认是换行符<span class="string">"\n"</span>;file为要写入的文件对象</span><br><span class="line">返回值：无</span><br><span class="line">代码示例：</span><br><span class="line">print(<span class="string">"111"</span>,<span class="string">"222"</span>,<span class="string">"333"</span>,sep =<span class="string">"==="</span>,end = <span class="string">"////////"</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：open"><a href="#函数名：open" class="headerlink" title="函数名：open()"></a>函数名：open()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">open(name, mode, buffering)</span><br><span class="line">参数：name为要访问的文件或者创建的文件的字符串，可以包含路径，model为打开文件的模式，buffering : 缓冲区大小，设为<span class="number">0</span>不会有寄存，设为<span class="number">1</span>表示寄存行，大于<span class="number">1</span>的整数，表示寄存去缓冲区的大小，</span><br><span class="line"></span><br><span class="line">设置为负数，则为系统默认大小,文件打开模式如下</span><br><span class="line">r    <span class="comment">#以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</span></span><br><span class="line">rb   <span class="comment">#以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。</span></span><br><span class="line">r+   <span class="comment">#打开一个文件用于读写。文件指针将会放在文件的开头。</span></span><br><span class="line">rb+  <span class="comment">#以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。</span></span><br><span class="line">w    <span class="comment">#打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</span></span><br><span class="line">wb   <span class="comment">#以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</span></span><br><span class="line">w+   <span class="comment">#打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</span></span><br><span class="line">wb+  <span class="comment">#以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</span></span><br><span class="line">a    <span class="comment">#打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</span></span><br><span class="line">ab   <span class="comment">#以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</span></span><br><span class="line">a+   <span class="comment">#打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</span></span><br><span class="line">ab+  <span class="comment">#以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</span></span><br><span class="line"></span><br><span class="line">返回值：file对象</span><br><span class="line"></span><br><span class="line">代码示例：</span><br><span class="line">f = open(<span class="string">'test.txt'</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：file"><a href="#函数名：file" class="headerlink" title="函数名：file()"></a>函数名：file()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法：同open()</span><br><span class="line">参数：同open()</span><br><span class="line">返回值：同open()</span><br><span class="line">代码示例：</span><br><span class="line">file(<span class="string">'test.txt'</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：raw-input"><a href="#函数名：raw-input" class="headerlink" title="函数名：raw_input()"></a>函数名：raw_input()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">raw_input(x)</span><br><span class="line">参数：x为String，可不写，会在控制台输出x内容</span><br><span class="line">返回值：返回输入的内容</span><br><span class="line">代码示例：</span><br><span class="line">raw_input_A = raw_input(<span class="string">"raw_input:"</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：iter"><a href="#函数名：iter" class="headerlink" title="函数名：iter()"></a>函数名：iter()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">iter(x)</span><br><span class="line">参数：x为支持迭代的集合对象</span><br><span class="line">返回值：迭代器对象</span><br><span class="line">代码示例：</span><br><span class="line">lst = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> iter(lst):</span><br><span class="line">     print(i)</span><br></pre></td></tr></table></figure><h3 id="函数名：range"><a href="#函数名：range" class="headerlink" title="函数名：range()"></a>函数名：range()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">range(start, stop, step)</span><br><span class="line">参数：start为计数开始点，默认为<span class="number">0</span>；stop为计数结束点，但不包括stop；step，步长，默认为<span class="number">1</span></span><br><span class="line">返回值：列表对象</span><br><span class="line">代码示例：</span><br><span class="line">range(<span class="number">10</span>)</span><br><span class="line">range(<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line">range(<span class="number">1</span>,<span class="number">10</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：dict"><a href="#函数名：dict" class="headerlink" title="函数名：dict()"></a>函数名：dict()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">参数：</span><br><span class="line">返回值：字典对象</span><br><span class="line">代码示例：</span><br><span class="line">a = dict()                        <span class="comment"># 创建空字典</span></span><br><span class="line">print(a)</span><br><span class="line">a =  dict(a=<span class="string">'a'</span>, b=<span class="string">'b'</span>, t=<span class="string">'t'</span>)     <span class="comment"># 传入关键字</span></span><br><span class="line">print(a)</span><br><span class="line">a =  dict(zip([<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]))   <span class="comment"># 映射函数方式来构造字典</span></span><br><span class="line">print(a)</span><br><span class="line">a =  dict([(<span class="string">'one'</span>, <span class="number">1</span>), (<span class="string">'two'</span>, <span class="number">2</span>), (<span class="string">'three'</span>, <span class="number">3</span>)])    <span class="comment"># 可迭代对象方式来构造字典</span></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><h3 id="函数名：exec"><a href="#函数名：exec" class="headerlink" title="函数名：exec()"></a>函数名：exec()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="keyword">exec</span> x</span><br><span class="line">参数：x为可执行的字符串代码</span><br><span class="line">返回值：无</span><br><span class="line">代码示例：</span><br><span class="line"><span class="keyword">exec</span> <span class="string">"print 'runoob.com'"</span></span><br></pre></td></tr></table></figure><h3 id="函数名：bytearray"><a href="#函数名：bytearray" class="headerlink" title="函数名：bytearray()"></a>函数名：bytearray()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">bytearray(source, encoding, errors)</span><br><span class="line">参数：source 可以是整数、字符串、可迭代对象</span><br><span class="line">返回值：字节数数组</span><br><span class="line">代码示例：</span><br><span class="line">bytearray([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br></pre></td></tr></table></figure><h3 id="函数名：complex"><a href="#函数名：complex" class="headerlink" title="函数名：complex()"></a>函数名：complex()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">complex(real, imag)</span><br><span class="line">参数：real 可以是 int, long, float或字符串，image可以是 int，long，float</span><br><span class="line">返回值：返回一个复数</span><br><span class="line">代码示例：</span><br><span class="line">complex(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：xrange"><a href="#函数名：xrange" class="headerlink" title="函数名：xrange()"></a>函数名：xrange()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">xrange(start, stop, step)</span><br><span class="line">参数：start开始数，stop结束数，step步长</span><br><span class="line">返回值：返回生成器</span><br><span class="line">代码示例：</span><br><span class="line">xrange(<span class="number">8</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：id"><a href="#函数名：id" class="headerlink" title="函数名：id()"></a>函数名：id()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">id(object)</span><br><span class="line">参数：object为对象</span><br><span class="line">返回值：对象的内存地址</span><br><span class="line">代码示例：</span><br><span class="line">a = <span class="string">'test'</span></span><br><span class="line">print(id(a))</span><br></pre></td></tr></table></figure><h3 id="函数名：getattr"><a href="#函数名：getattr" class="headerlink" title="函数名：getattr()"></a>函数名：getattr()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">getattr(object, name, default)</span><br><span class="line">参数：object为对象，那么为属性名，default为默认值，如果属性不存在，返回默认值</span><br><span class="line">返回值：属性值</span><br><span class="line">代码示例：</span><br><span class="line">getattr(a, <span class="string">'bar2'</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：help"><a href="#函数名：help" class="headerlink" title="函数名：help()"></a>函数名：help()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">help(x)</span><br><span class="line">参数：x为对象</span><br><span class="line">返回值：返回对象的帮助信息</span><br><span class="line">代码示例：</span><br><span class="line">help(<span class="string">'sys'</span>)             <span class="comment"># 查看 sys 模块的帮助</span></span><br></pre></td></tr></table></figure><h3 id="函数名：next"><a href="#函数名：next" class="headerlink" title="函数名：next()"></a>函数名：next()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">next(a, default)</span><br><span class="line">参数：a为可迭代对象，default为没有下一个元素时返回的值</span><br><span class="line">返回值：可迭代对象的内容</span><br><span class="line">代码示例：</span><br><span class="line"><span class="comment"># 首先获得Iterator对象:</span></span><br><span class="line">it = iter([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line"><span class="comment"># 循环:</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 获得下一个值:</span></span><br><span class="line">        x = next(it)</span><br><span class="line">        print(x)</span><br><span class="line">    <span class="keyword">except</span> StopIteration:</span><br><span class="line">        <span class="comment"># 遇到StopIteration就退出循环</span></span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="函数名：memoryview"><a href="#函数名：memoryview" class="headerlink" title="函数名：memoryview()"></a>函数名：memoryview()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">memoryview(obj)</span><br><span class="line">参数：obj为对象</span><br><span class="line">返回值：返回元组列表</span><br><span class="line">代码示例：</span><br><span class="line">a = memoryview(<span class="string">b'babcefg'</span>)</span><br><span class="line">print(a[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="函数名：hash"><a href="#函数名：hash" class="headerlink" title="函数名：hash()"></a>函数名：hash()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">hash(x)</span><br><span class="line">参数：x 为对象</span><br><span class="line">返回值: 返回对象的hash值</span><br><span class="line">代码示例：</span><br><span class="line">a = hash(<span class="string">'test'</span>)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><h3 id="函数名：vars"><a href="#函数名：vars" class="headerlink" title="函数名：vars()"></a>函数名：vars()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">vars(obj)</span><br><span class="line">参数：obj为对象，如果没有的话，返回当前调用位置的属性和属性值</span><br><span class="line">返回值：返回对象属性和属性值的字典对象</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Runoob</span>:</span></span><br><span class="line">     a = <span class="number">1</span></span><br><span class="line">print(vars(Runoob))</span><br><span class="line">代码示例：</span><br></pre></td></tr></table></figure><h3 id="函数名：globals"><a href="#函数名：globals" class="headerlink" title="函数名：globals()"></a>函数名：globals()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">globals()</span><br><span class="line">参数：无</span><br><span class="line">返回值：当前位置的全局变量</span><br><span class="line">代码示例：</span><br><span class="line">print(globals())</span><br></pre></td></tr></table></figure><h3 id="函数名：max"><a href="#函数名：max" class="headerlink" title="函数名：max()"></a>函数名：max()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法</span><br><span class="line">max(a,b,x.....)</span><br><span class="line">参数：数值表达式</span><br><span class="line">返回值：返回参数最大值</span><br><span class="line">代码示例：</span><br><span class="line">print(max(<span class="number">80</span>, <span class="number">100</span>, <span class="number">1000</span>))</span><br></pre></td></tr></table></figure><h3 id="函数名：property"><a href="#函数名：property" class="headerlink" title="函数名：property()"></a>函数名：property()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">property</span><span class="params">(fget, fset, fdel, doc)</span></span></span><br><span class="line"><span class="class">参数：</span></span><br><span class="line"><span class="class"><span class="title">fget</span> -- 获取属性值的函数</span></span><br><span class="line"><span class="class"><span class="title">fset</span> -- 设置属性值的函数</span></span><br><span class="line"><span class="class"><span class="title">fdel</span> -- 删除属性值函数</span></span><br><span class="line"><span class="class"><span class="title">doc</span> -- 属性描述信息</span></span><br><span class="line"><span class="class">返回值：返回类属性</span></span><br><span class="line"><span class="class">代码示例：</span></span><br></pre></td></tr></table></figure><h3 id="函数名：ord"><a href="#函数名：ord" class="headerlink" title="函数名：ord()"></a>函数名：ord()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">ord(c)</span><br><span class="line">参数：c为字符</span><br><span class="line">返回值：对应的十进制数</span><br><span class="line">代码示例：</span><br><span class="line">ord(<span class="string">'a'</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：abs-1"><a href="#函数名：abs-1" class="headerlink" title="函数名：abs()"></a>函数名：abs()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">abs( x )</span><br><span class="line">参数：x为数值表达式</span><br><span class="line">返回值：x的绝对值</span><br><span class="line">代码示例：</span><br><span class="line">abs( <span class="number">-8</span> )</span><br></pre></td></tr></table></figure><h3 id="函数名：staticmethod"><a href="#函数名：staticmethod" class="headerlink" title="函数名：staticmethod()"></a>函数名：staticmethod()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">staticmethod(function)</span><br><span class="line">参数：无</span><br><span class="line">返回值：无</span><br><span class="line">代码示例：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">()</span>:</span></span><br><span class="line">        print(<span class="string">'runoob'</span>);</span><br><span class="line"> </span><br><span class="line">C.f();          <span class="comment"># 静态方法无需实例化</span></span><br><span class="line">cobj = C()</span><br><span class="line">cobj.f()        <span class="comment"># 也可以实例化后调用</span></span><br></pre></td></tr></table></figure><h3 id="函数名：frozenset"><a href="#函数名：frozenset" class="headerlink" title="函数名：frozenset()"></a>函数名：frozenset()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">frozenset([iterable])</span><br><span class="line">参数：可迭代对象</span><br><span class="line">返回值：一个冻结的集合，不能修改或者删除</span><br><span class="line">代码示例：</span><br><span class="line">frozenset(range(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><h3 id="函数名：locals"><a href="#函数名：locals" class="headerlink" title="函数名：locals()"></a>函数名：locals()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">locals()</span><br><span class="line">参数：无</span><br><span class="line">返回值：返回当前位置的所有局部变量</span><br><span class="line">代码示例：</span><br><span class="line">locals()</span><br></pre></td></tr></table></figure><h3 id="函数名：unichr"><a href="#函数名：unichr" class="headerlink" title="函数名：unichr()"></a>函数名：unichr()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">unichr(i)</span><br><span class="line">参数：十进制或者十六进制的数字</span><br><span class="line">返回值：unicode 的字符。</span><br><span class="line">代码示例：</span><br><span class="line">unichr(<span class="number">97</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：map"><a href="#函数名：map" class="headerlink" title="函数名：map()"></a>函数名：map()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">map(function, iterable, ...)</span><br><span class="line">参数：</span><br><span class="line">function -- 函数，有两个参数</span><br><span class="line">iterable -- 一个或多个序列</span><br><span class="line">返回值：返回列表</span><br><span class="line">代码示例：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">square</span><span class="params">(x)</span> :</span>            <span class="comment"># 计算平方数</span></span><br><span class="line">     <span class="keyword">return</span> x ** <span class="number">2</span></span><br><span class="line">a = map(square, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br></pre></td></tr></table></figure><h3 id="函数名：dir"><a href="#函数名：dir" class="headerlink" title="函数名：dir()"></a>函数名：dir()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">dir([object])</span><br><span class="line">参数：对象</span><br><span class="line">返回值：返回属性列表</span><br><span class="line">代码示例：</span><br></pre></td></tr></table></figure><h3 id="函数名：issubclass"><a href="#函数名：issubclass" class="headerlink" title="函数名：issubclass()"></a>函数名：issubclass()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">issubclass(class, classinfo)</span><br><span class="line">参数：</span><br><span class="line"><span class="class"><span class="keyword">class</span>--<span class="title">class</span>类， <span class="title">classinfo</span>---<span class="title">classifo</span>类</span></span><br><span class="line"><span class="class">返回值：如果 <span class="title">class</span> 是 <span class="title">classinfo</span> 的子类返回 <span class="title">True</span>，否则返回 <span class="title">False</span>。</span></span><br><span class="line"><span class="class">代码示例：</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">A</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span><span class="params">(A)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span>  </span><br><span class="line">print(issubclass(B,A))    <span class="comment"># 返回 True</span></span><br></pre></td></tr></table></figure><h3 id="函数名：hasattr"><a href="#函数名：hasattr" class="headerlink" title="函数名：hasattr()"></a>函数名：hasattr()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">hasattr(object, name)</span><br><span class="line">参数：object为对象，那么为属性名</span><br><span class="line">返回值：如果对象内有这个属性，返回true，否则false、</span><br><span class="line">代码示例：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coordinate</span>:</span></span><br><span class="line">    x = <span class="number">10</span></span><br><span class="line">    y = <span class="number">-5</span></span><br><span class="line">    z = <span class="number">0</span></span><br><span class="line"> </span><br><span class="line">point1 = Coordinate() </span><br><span class="line">print(hasattr(point1, <span class="string">'x'</span>))</span><br><span class="line">print(hasattr(point1, <span class="string">'y'</span>))</span><br><span class="line">print(hasattr(point1, <span class="string">'z'</span>))</span><br><span class="line">print(hasattr(point1, <span class="string">'no'</span>))  <span class="comment"># 没有该属性</span></span><br></pre></td></tr></table></figure><h3 id="函数名：isinstance"><a href="#函数名：isinstance" class="headerlink" title="函数名：isinstance()"></a>函数名：isinstance()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">isinstance(object, classinfo)</span><br><span class="line">参数：</span><br><span class="line">object -- 实例对象。</span><br><span class="line">classinfo -- 可以是直接或间接类名、基本类型或者有它们</span><br><span class="line">返回值：如果对象的类型与参数二的类型（classinfo）相同则返回 <span class="literal">True</span>，否则返回 <span class="literal">False</span>。。</span><br><span class="line">代码示例：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span><span class="params">(A)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line">isinstance(A(), A)    <span class="comment"># returns True</span></span><br><span class="line">type(A()) == A        <span class="comment"># returns True</span></span><br><span class="line">isinstance(B(), A)    <span class="comment"># returns True</span></span><br><span class="line">type(B()) == A        <span class="comment"># returns False</span></span><br></pre></td></tr></table></figure><h3 id="函数名：any"><a href="#函数名：any" class="headerlink" title="函数名：any()"></a>函数名：any()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">any(iterable)</span><br><span class="line">参数：元组或者列表</span><br><span class="line">返回值：如果都为空、<span class="number">0</span>、false，则返回false，如果不都为空、<span class="number">0</span>、false，则返回true。</span><br><span class="line">代码示例：</span><br><span class="line">any([<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>])  <span class="comment"># 列表list，元素都不为空或0</span></span><br></pre></td></tr></table></figure><h3 id="函数名：all"><a href="#函数名：all" class="headerlink" title="函数名：all()"></a>函数名：all()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">all(iterable)</span><br><span class="line">参数：元组或列表</span><br><span class="line">返回值：如果iterable的所有元素不为<span class="number">0</span>、<span class="string">''</span>、<span class="literal">False</span>或者iterable为空，all(iterable)返回<span class="literal">True</span>，否则返回<span class="literal">False</span>；</span><br><span class="line">代码示例：</span><br><span class="line">all([<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>])  <span class="comment"># 列表list，元素都不为空或0</span></span><br></pre></td></tr></table></figure><h3 id="函数名：callable"><a href="#函数名：callable" class="headerlink" title="函数名：callable()"></a>函数名：callable()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">callable(object)</span><br><span class="line">参数：对象</span><br><span class="line">返回值：可调用返回 <span class="literal">True</span>，否则返回 <span class="literal">False</span>。</span><br><span class="line">代码示例：callable(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：cmp"><a href="#函数名：cmp" class="headerlink" title="函数名：cmp()"></a>函数名：cmp()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">cmp( x, y )</span><br><span class="line">参数：都是数值表达式</span><br><span class="line">返回值：如果 x &lt; y 返回 <span class="number">-1</span>, 如果 x == y 返回 <span class="number">0</span>, 如果 x &gt; y 返回 <span class="number">1</span>。</span><br><span class="line">代码示例：</span><br><span class="line">cmp(<span class="number">80</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：delattr"><a href="#函数名：delattr" class="headerlink" title="函数名：delattr()"></a>函数名：delattr()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">参数：</span><br><span class="line">返回值：</span><br><span class="line">代码示例：</span><br></pre></td></tr></table></figure><h3 id="函数名：setattr"><a href="#函数名：setattr" class="headerlink" title="函数名：setattr()"></a>函数名：setattr()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">setattr(object, name, value)</span><br><span class="line">参数：</span><br><span class="line">object -- 对象。</span><br><span class="line">name -- 字符串，对象属性。</span><br><span class="line">value -- 属性值。</span><br><span class="line">返回值：无</span><br><span class="line">代码示例：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span><span class="params">(object)</span>:</span></span><br><span class="line">     bar = <span class="number">1</span></span><br><span class="line">     </span><br><span class="line">a = A()</span><br><span class="line">getattr(a, <span class="string">'bar'</span>)          <span class="comment"># 获取属性 bar 值</span></span><br><span class="line"></span><br><span class="line">setattr(a, <span class="string">'bar'</span>, <span class="number">5</span>)       <span class="comment"># 设置属性 bar 值</span></span><br><span class="line">a.bar</span><br></pre></td></tr></table></figure><h3 id="函数名：slice"><a href="#函数名：slice" class="headerlink" title="函数名：slice()"></a>函数名：slice()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">slice(start, stop, step)</span><br><span class="line">参数：</span><br><span class="line">start -- 起始位置</span><br><span class="line">stop -- 结束位置</span><br><span class="line">step -- 间距</span><br><span class="line">返回值：一个切片对象</span><br><span class="line">代码示例：</span><br><span class="line">slice(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：repr"><a href="#函数名：repr" class="headerlink" title="函数名：repr()"></a>函数名：repr()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">repr(object)</span><br><span class="line">参数：对象</span><br><span class="line">返回值：对象的String格式</span><br><span class="line">代码示例：</span><br><span class="line">s = <span class="string">'RUNOOB'</span></span><br><span class="line">repr(s)</span><br></pre></td></tr></table></figure><h3 id="函数名：compile"><a href="#函数名：compile" class="headerlink" title="函数名：compile()"></a>函数名：compile()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">compile(source, filename, mode, flags, dont_inherit)</span><br><span class="line">参数：</span><br><span class="line">source -- 字符串或者AST（Abstract Syntax Trees）对象。。</span><br><span class="line">filename -- 代码文件名称，如果不是从文件读取代码则传递一些可辨认的值。</span><br><span class="line">mode -- 指定编译代码的种类。可以指定为 <span class="keyword">exec</span>, eval, single。</span><br><span class="line">flags -- 变量作用域，局部命名空间，如果被提供，可以是任何映射对象。。</span><br><span class="line">flags和dont_inherit是用来控制编译源码时的标志</span><br><span class="line">返回值：</span><br><span class="line">代码示例：</span><br></pre></td></tr></table></figure><h3 id="函数名：eval"><a href="#函数名：eval" class="headerlink" title="函数名：eval()"></a>函数名：eval()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">eval(expression, globals, locals)</span><br><span class="line">参数：</span><br><span class="line">expression -- 表达式。</span><br><span class="line">globals -- 变量作用域，全局命名空间，如果被提供，则必须是一个字典对象。</span><br><span class="line">locals -- 变量作用域，局部命名空间，如果被提供，可以是任何映射对象。</span><br><span class="line">返回值：表达式执行结果</span><br><span class="line">代码示例：</span><br><span class="line">eval( <span class="string">'3 * x'</span> )</span><br></pre></td></tr></table></figure><h3 id="函数名：execfile"><a href="#函数名：execfile" class="headerlink" title="函数名：execfile()"></a>函数名：execfile()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">execfile(filename, globals, locals)</span><br><span class="line">参数：</span><br><span class="line">filename -- 文件名。</span><br><span class="line">globals -- 变量作用域，全局命名空间，如果被提供，则必须是一个字典对象。</span><br><span class="line">locals -- 变量作用域，局部命名空间，如果被提供，可以是任何映射对象。</span><br><span class="line">返回值：执行结果</span><br><span class="line">代码示例：</span><br><span class="line">execfile(<span class="string">'hello.py'</span>) <span class="comment">#需要有hello.py</span></span><br></pre></td></tr></table></figure><h3 id="函数名：super"><a href="#函数名：super" class="headerlink" title="函数名：super()"></a>函数名：super()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">super(type[, object-<span class="keyword">or</span>-type])</span><br><span class="line">参数：</span><br><span class="line">type -- 类。</span><br><span class="line">object-<span class="keyword">or</span>-type -- 类，一般是 self</span><br><span class="line">返回值：无</span><br><span class="line">代码示例：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FooParent</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.parent = <span class="string">'I\'m the parent.'</span></span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'Parent'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">(self,message)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"%s from Parent"</span> % message)</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FooChild</span><span class="params">(FooParent)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># super(FooChild,self) 首先找到 FooChild 的父类（就是类 FooParent），然后把类B的对象 FooChild 转换为类 FooParent 的对象</span></span><br><span class="line">        super(FooChild,self).__init__()    </span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'Child'</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">(self,message)</span>:</span></span><br><span class="line">        super(FooChild, self).bar(message)</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'Child bar fuction'</span>)</span><br><span class="line">        <span class="keyword">print</span> (self.parent)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    fooChild = FooChild()</span><br><span class="line">    fooChild.bar(<span class="string">'HelloWorld'</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：reload"><a href="#函数名：reload" class="headerlink" title="函数名：reload()"></a>函数名：reload()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">reload(module)</span><br><span class="line">参数：模块对象</span><br><span class="line">返回值：返回模块对象</span><br><span class="line">代码示例：</span><br><span class="line">reload(sys)</span><br></pre></td></tr></table></figure><h3 id="函数名：type"><a href="#函数名：type" class="headerlink" title="函数名：type()"></a>函数名：type()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">type(name, bases, dict)</span><br><span class="line">参数：</span><br><span class="line">name -- 类的名称。</span><br><span class="line">bases -- 基类的元组。</span><br><span class="line">dict -- 字典，类内定义的命名空间变量。</span><br><span class="line">返回值：一个参数返回对象类型, 三个参数，返回新的类型对象。</span><br><span class="line">代码示例：</span><br><span class="line"></span><br><span class="line">type(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">type(<span class="string">'runoob'</span>)</span><br><span class="line"></span><br><span class="line">type([<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">type(&#123;<span class="number">0</span>:<span class="string">'zero'</span>&#125;)</span><br><span class="line"></span><br><span class="line">x = <span class="number">1</span>          </span><br><span class="line">type( x ) == int    <span class="comment"># 判断类型是否相等</span></span><br><span class="line">print(x)</span><br><span class="line"><span class="comment"># 三个参数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">X</span><span class="params">(object)</span>:</span></span><br><span class="line">      a = <span class="number">1</span></span><br><span class="line">X = type(<span class="string">'X'</span>, (object,), dict(a=<span class="number">1</span>))  <span class="comment"># 产生一个新的类型 X</span></span><br><span class="line">print(X)</span><br></pre></td></tr></table></figure><h3 id="函数名：format"><a href="#函数名：format" class="headerlink" title="函数名：format()"></a>函数名：format()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">语法：String.format()</span><br><span class="line">参数：</span><br><span class="line">返回值：格式化之后的字符串</span><br><span class="line">代码示例：</span><br><span class="line"><span class="string">"&#123;&#125; &#123;&#125;"</span>.format(<span class="string">"hello"</span>, <span class="string">"world"</span>)    <span class="comment"># 不设置指定位置，按默认顺序</span></span><br><span class="line"><span class="string">"&#123;0&#125; &#123;1&#125;"</span>.format(<span class="string">"hello"</span>, <span class="string">"world"</span>)  <span class="comment"># 设置指定位置</span></span><br><span class="line"><span class="string">"&#123;1&#125; &#123;0&#125; &#123;1&#125;"</span>.format(<span class="string">"hello"</span>, <span class="string">"world"</span>)  <span class="comment"># 设置指定位置</span></span><br><span class="line"><span class="comment"># 通过字典设置参数</span></span><br><span class="line">site = &#123;<span class="string">"name"</span>: <span class="string">"菜鸟教程"</span>, <span class="string">"url"</span>: <span class="string">"www.runoob.com"</span>&#125;</span><br><span class="line">print(<span class="string">"网站名：&#123;name&#125;, 地址 &#123;url&#125;"</span>.format(**site))</span><br><span class="line"></span><br><span class="line">my_list = [<span class="string">'菜鸟教程'</span>, <span class="string">'www.runoob.com'</span>]</span><br><span class="line">print(<span class="string">"网站名：&#123;0[0]&#125;, 地址 &#123;0[1]&#125;"</span>.format(my_list))  <span class="comment"># "0" 是可选的</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AssignValue</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        self.value = value</span><br><span class="line">my_value = AssignValue(<span class="number">6</span>)</span><br><span class="line">print(<span class="string">'value 为: &#123;0.value&#125;'</span>.format(my_value))  <span class="comment"># "0" 是可选的</span></span><br></pre></td></tr></table></figure><h3 id="函数名：basestring"><a href="#函数名：basestring" class="headerlink" title="函数名：basestring()"></a>函数名：basestring()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">basestring()</span><br><span class="line">参数：无</span><br><span class="line">返回值：无</span><br><span class="line">代码示例：</span><br><span class="line">isinstance(<span class="string">"Hello world"</span>, basestring)<span class="comment">#判断一个对象是否为 str 或者 unicode 的实例</span></span><br></pre></td></tr></table></figure><h3 id="函数名：classmethod"><a href="#函数名：classmethod" class="headerlink" title="函数名：classmethod()"></a>函数名：classmethod()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">classmethod</span><br><span class="line">参数：无</span><br><span class="line">返回值：返回函数的类方法</span><br><span class="line">代码示例：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span><span class="params">(object)</span>:</span></span><br><span class="line">    bar = <span class="number">1</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">(self)</span>:</span>  </span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'foo'</span>) </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func2</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'func2'</span>)</span><br><span class="line">        <span class="keyword">print</span> (cls.bar)</span><br><span class="line">        cls().func1()   <span class="comment"># 调用 foo 方法</span></span><br><span class="line"> </span><br><span class="line">A.func2()               <span class="comment"># 不需要实例化</span></span><br></pre></td></tr></table></figure><h3 id="函数名：chr"><a href="#函数名：chr" class="headerlink" title="函数名：chr()"></a>函数名：chr()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">chr(i)</span><br><span class="line">参数：十进制或者十六进制的数字,<span class="number">0</span><span class="number">-255</span>之间</span><br><span class="line">返回值：对应的ASCLL字符</span><br><span class="line">代码示例：</span><br><span class="line">chr(<span class="number">123</span>)</span><br></pre></td></tr></table></figure><h3 id="函数名：import"><a href="#函数名：import" class="headerlink" title="函数名：import()"></a>函数名：<strong>import</strong>()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">__import__(name)</span><br><span class="line">参数：模块名</span><br><span class="line">返回值：元组数组</span><br><span class="line">代码示例：</span><br><span class="line"><span class="keyword">import</span> sys  </span><br><span class="line">__import__(<span class="string">'a'</span>)        <span class="comment"># 导入 a.py 模块</span></span><br></pre></td></tr></table></figure><h3 id="函数名：reduce"><a href="#函数名：reduce" class="headerlink" title="函数名：reduce()"></a>函数名：reduce()</h3><p><code>python语法：reduce(function, iterable, initializer)参数：function -- 函数，有两个参数iterable -- 可迭代对象initializer -- 可选，初始参数返回值：返回计算结果代码示例：def add(x, y) :            # 两数相加    return x + yreduce(add, [1,2,3,4,5])   # 计算列表和：1+2+3+4+5reduce(lambda x, y: x+y, [1,2,3,4,5])  # 使用 lambda 匿名函数</code>python</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="python" scheme="https://github.com/chineselijie/categories/python/"/>
    
    
      <category term="python" scheme="https://github.com/chineselijie/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>PXE无人值守安装服务器</title>
    <link href="https://github.com/chineselijie/2019/09/22/5.PXE%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%88%E5%AE%89%E8%A3%85%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://github.com/chineselijie/2019/09/22/5.PXE%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%88%E5%AE%89%E8%A3%85%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2019-09-22T15:35:27.430Z</published>
    <updated>2019-09-22T15:34:56.845Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="PXE"><a href="#PXE" class="headerlink" title="PXE"></a>PXE</h2><p><strong>什么是PXE？</strong></p><p>严格来说，PXE 并不是一种安装方式，而是一种引导的方式。<br>进行 PXE 安装的必要条件是要安装的计算机中包含一个 PXE 支持的网卡（NIC）<br>即网卡中必须要有 PXE Client。PXE （Pre-boot Execution Environment）协议使计算机可以通过网络启动。</p><p>协议分为 client 和 server 端，PXE client 在网卡的 ROM 中，<br>当计算机引导时，BIOS 把 PXE client 调入内存执行，<br>由 PXE client 将放置在远端的文件通过网络下载到本地运行。</p><p>运行 PXE 协议需要设置 DHCP 服务器 和 TFTP 服务器。<br>DHCP 服务器用来给 PXE client（将要安装系统的主机）分配一个 IP 地址，<br>由于是给 PXE client 分配 IP 地址，<br>所以在配置 DHCP 服务器时需要增加相应的 PXE 设置。</p><p>此外，在 PXE client 的 ROM 中，已经存在了 TFTP Client。<br>PXE Client 通过 TFTP 协议到 TFTP Server 上下载所需的文件。</p><h2 id="kickdtart"><a href="#kickdtart" class="headerlink" title="kickdtart"></a>kickdtart</h2><p><strong>什么是kickdtart？</strong></p><p>KickStart是一种无人职守安装方式。<br>KickStart的工作原理是通过记录典型的安装过程中所需人工干预填写的各种参数，并生成一个名为 ks.cfg的文件；</p><p>在其后的安装过程中（不只局限于生成KickStart安装文件的机器）<br>当出现要求填写参数的情况时，安装程序会首先去查找 KickStart生成的文件<br>当找到合适的参数时，就采用找到的参数，<br>当没有找到合适的参数时，才需要安装者手工干预。</p><p>这样，如果KickStart文件涵盖了安装过程中出现的所有需要填写的参数时，<br>安装者完全可以只告诉安装程序从何处取ks.cfg文件，然后去忙自己的事情。<br>等安装完毕，安装程序会根据ks.cfg中设置的重启选项来重启系统，并结束安装。</p><blockquote><p>首先 我们要知道BIOS引导顺序为硬盘（在前）、网络（在后）<br>我们不必要更改BIOS引导顺序，只需要设置快速启动为网络就行</p></blockquote><h2 id="准备内容"><a href="#准备内容" class="headerlink" title="准备内容"></a>准备内容</h2><p><strong>执行 PXE + KickStart安装需要准备内容：</strong></p><ul><li>DHCP 服务器用来给客户机分配IP； </li><li>TFTP 服务器用来存放PXE的相关文件，比如：系统引导文件； </li><li>FTP 服务器用来存放系统安装文件； </li><li>KickStart所生成的ks.cfg配置文件； </li><li>带有一个 PXE 支持网卡的将安装的主机；</li></ul><h2 id="配置基本环境"><a href="#配置基本环境" class="headerlink" title="配置基本环境"></a>配置基本环境</h2><h3 id="搭建本地yum源"><a href="#搭建本地yum源" class="headerlink" title="搭建本地yum源"></a>搭建本地yum源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 yum.repos.d]<span class="comment"># cat bendi.repo</span></span><br><span class="line">[bendi]</span><br><span class="line">name=///mnt/cdrom</span><br><span class="line">baseurl=file:///mnt/cdrom</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[root@server222 yum.repos.d]<span class="comment"># tail -n 1 /etc/fstab</span></span><br><span class="line">/dev/cdrom      /mnt/cdrom      iso9660                 defaults        0 0</span><br><span class="line">[root@server222 yum.repos.d]<span class="comment"># mount -a</span></span><br><span class="line">[root@server222 yum.repos.d]<span class="comment"># df -Th</span></span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/centos-root xfs        17G  4.7G   13G   28% /</span><br><span class="line">devtmpfs                devtmpfs  977M     0  977M    0% /dev</span><br><span class="line">tmpfs                   tmpfs     993M     0  993M    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     993M  9.0M  984M    1% /run</span><br><span class="line">tmpfs                   tmpfs     993M     0  993M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sr0                iso9660   4.3G  4.3G     0  100% /mnt/cdrom</span><br><span class="line">/dev/sda1               xfs      1014M  161M  854M   16% /boot</span><br><span class="line">tmpfs                   tmpfs     199M   24K  199M    1% /run/user/0</span><br></pre></td></tr></table></figure><h3 id="安装ftp服务以及开机服务，设置开机自启动"><a href="#安装ftp服务以及开机服务，设置开机自启动" class="headerlink" title="安装ftp服务以及开机服务，设置开机自启动"></a>安装ftp服务以及开机服务，设置开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 yum.repos.d]<span class="comment"># yum install vsftpd -y</span></span><br><span class="line">·····过程省略·······</span><br><span class="line">[root@server222 yum.repos.d]<span class="comment"># systemctl start vsftpd</span></span><br><span class="line">[root@server222 yum.repos.d]<span class="comment"># systemctl enable vsftpd</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/vsftpd.service to /usr/lib/systemd/system/vsftpd.service.</span><br></pre></td></tr></table></figure><h3 id="安装tftp-修改tftp配置文件及开启服务"><a href="#安装tftp-修改tftp配置文件及开启服务" class="headerlink" title="安装tftp,修改tftp配置文件及开启服务"></a>安装tftp,修改tftp配置文件及开启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 yum.repos.d]<span class="comment"># yum install tftp tftp-server xinetd -y</span></span><br><span class="line">·····过程省略······</span><br><span class="line"><span class="comment"># 配置tftp服务器：</span></span><br><span class="line">[root@server222 yum.repos.d]<span class="comment"># vim /etc/xinetd.d/tftp</span></span><br><span class="line"><span class="comment"># 将13行以及14行改为一下内容</span></span><br><span class="line"> 13         server_args             = -s /tftpboot</span><br><span class="line"> 14         <span class="built_in">disable</span>                 = no</span><br><span class="line">[root@server222 yum.repos.d]<span class="comment">#  mkdir /tftpboot</span></span><br></pre></td></tr></table></figure><blockquote><p> server_args = -s /tftpboot 表示服务器默认的目录是/tftpboot</p></blockquote><h5 id="启动xinetd服务，查看端口是否开启"><a href="#启动xinetd服务，查看端口是否开启" class="headerlink" title="启动xinetd服务，查看端口是否开启"></a>启动xinetd服务，查看端口是否开启</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 yum.repos.d]<span class="comment"># systemctl  start xinetd</span></span><br><span class="line">[root@server222 yum.repos.d]<span class="comment"># lsof -i :69</span></span><br><span class="line">COMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">xinetd  3220 root    5u  IPv4  38515      0t0  UDP *:tftp</span><br></pre></td></tr></table></figure><blockquote><p>若没有lsof这个命令，就安装，命令：yum install lsof -y</p></blockquote><h3 id="安装dhcp，修改配置文件及开启服务"><a href="#安装dhcp，修改配置文件及开启服务" class="headerlink" title="安装dhcp，修改配置文件及开启服务"></a>安装dhcp，修改配置文件及开启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 yum.repos.d]<span class="comment"># yum install dhcp -y</span></span><br><span class="line"><span class="comment"># 配置DHCP服务</span></span><br><span class="line">[root@server222 yum.repos.d]<span class="comment"># cp /usr/share/doc/dhcp-4.2.5/dhcpd.conf.example /etc/dhcp/dhcpd.conf</span></span><br><span class="line">cp：是否覆盖<span class="string">"/etc/dhcp/dhcpd.conf"</span>？ y</span><br></pre></td></tr></table></figure><blockquote><p>给DHCP服务添加一张VMNET4网卡，IP设置为192.168.1.10</p></blockquote><p><img src="https://s2.ax1x.com/2019/09/22/u9WmUs.jpg" alt="u9WmUs.jpg"></p><p><img src="https://s2.ax1x.com/2019/09/22/u9WN5R.jpg" alt="u9WN5R.jpg"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 yum.repos.d]<span class="comment"># ip a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">    link/ether 00:0c:29:42:82:3a brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.176.222/24 brd 192.168.176.255 scope global ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::1bd0:d77:f2c2:6f3/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN qlen 1000</span><br><span class="line">    link/ether 52:54:00:3a:c5:62 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">4: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast master virbr0 state DOWN qlen 1000</span><br><span class="line">    link/ether 52:54:00:3a:c5:62 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">6: ens37: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">    link/ether 00:0c:29:42:82:44 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet6 fe80::e149:fe60:a92f:1d60/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><blockquote><p>此时就会发现ens37这个网卡，下面来给此网卡配一个IP</p></blockquote><p>[root@server222 yum.repos.d]# ifconfig ens37 192.168.1.10/24</p><blockquote><p>下面就可以更改配置文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 yum.repos.d]<span class="comment"># cd /etc/dhcp/</span></span><br><span class="line">[root@server222 dhcp]<span class="comment"># ls</span></span><br><span class="line">dhclient.d  dhclient-exit-hooks.d  dhcpd6.conf  dhcpd.conf  scripts</span><br><span class="line">[root@server222 dhcp]<span class="comment"># &gt; dhcpd.conf</span></span><br><span class="line">[root@server222 dhcp]<span class="comment"># vim dhcpd.conf</span></span><br><span class="line">[root@server222 dhcp]<span class="comment"># cat dhcpd.conf</span></span><br><span class="line">subnet 192.168.1.0 netmask 255.255.255.0 &#123;</span><br><span class="line">  range 192.168.1.100 192.168.1.200; <span class="comment"># 地址池</span></span><br><span class="line">  option domain-name-servers 192.168.1.1; <span class="comment"># dns</span></span><br><span class="line">  option domain-name <span class="string">"internal.example.org"</span>; <span class="comment"># 域名</span></span><br><span class="line">  option routers 192.168.1.1; <span class="comment"># 默认网关</span></span><br><span class="line">  option broadcast-address 192.168.1.255; <span class="comment"># 广播地址</span></span><br><span class="line">  default-lease-time 600; <span class="comment"># 默认租约期限</span></span><br><span class="line">  max-lease-time 7200; <span class="comment"># 最大租约期限</span></span><br><span class="line">  next-server 192.168.1.10; <span class="comment"># 下一跳</span></span><br><span class="line">  filename <span class="string">"pxelinux.0"</span>; <span class="comment"># 定义pxe</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@server222 dhcp]<span class="comment">#</span></span><br></pre></td></tr></table></figure><blockquote><p>此处配置完，先不启动DHCP ，等所有的软件安装好，最后来启动。</p></blockquote><h2 id="配置使用PXE启动所需相关文件"><a href="#配置使用PXE启动所需相关文件" class="headerlink" title="配置使用PXE启动所需相关文件"></a>配置使用PXE启动所需相关文件</h2><p>[root@server222 dhcp]# yum install system-config-kickstart syslinux -y</p><h3 id="准备tftp需要共享出去的文件"><a href="#准备tftp需要共享出去的文件" class="headerlink" title="准备tftp需要共享出去的文件"></a>准备tftp需要共享出去的文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 dhcp]<span class="comment"># cd /tftpboot/</span></span><br><span class="line">[root@server222 tftpboot]<span class="comment"># mkdir pxelinux.cfg</span></span><br><span class="line">[root@server222 tftpboot]<span class="comment"># ls</span></span><br><span class="line">pxelinux.cfg</span><br><span class="line">[root@server222 tftpboot]<span class="comment"># cp /usr/share/syslinux/pxelinux.0 /tftpboot/</span></span><br><span class="line">[root@server222 tftpboot]<span class="comment"># cp /mnt/cdrom/images/pxeboot/initrd.img /tftpboot/</span></span><br><span class="line">[root@server222 tftpboot]<span class="comment"># cp /mnt/cdrom/images/pxeboot/vmlinuz /tftpboot/</span></span><br><span class="line">[root@server222 tftpboot]<span class="comment"># cp /mnt/cdrom/isolinux/isolinux.cfg /tftpboot/pxelinux.cfg/default</span></span><br></pre></td></tr></table></figure><blockquote><p><code>/usr/share/syslinux/pxelinux.0</code> 开机启动引导文件<br><code>/mnt/cdrom/images/pxeboot/initrd.img</code> 内核初始化文件（在镜像里面）<br> <code>/mnt/cdrom/images/pxeboot/vmlinuz</code> 内核初始化文件<br><code>/mnt/cdrom/isolinux/isolinux.cfg</code> 开机引导文件</p></blockquote><h3 id="修改default，指定安装操作系统的方式和ks-cfg文件路径"><a href="#修改default，指定安装操作系统的方式和ks-cfg文件路径" class="headerlink" title="修改default，指定安装操作系统的方式和ks.cfg文件路径"></a>修改default，指定安装操作系统的方式和ks.cfg文件路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 tftpboot]<span class="comment"># vim /tftpboot/pxelinux.cfg/default</span></span><br><span class="line"> 1 default linux    <span class="comment"># 指定默认入口名称</span></span><br><span class="line"> 64 append initrd=initrd.img inst.repo=ftp://192.168.1.10/pub inst.ks=ftp://192.168.1.10/ks.cfg <span class="comment"># 通过ftp服务器方式来访问kickstart文件</span></span><br><span class="line">[root@server222 tftpboot]<span class="comment">#</span></span><br><span class="line">[root@server222 tftpboot]<span class="comment"># chmod 644 /tftpboot/pxelinux.cfg/default</span></span><br></pre></td></tr></table></figure><h3 id="将光盘挂在到pub目录下-并更改源位置"><a href="#将光盘挂在到pub目录下-并更改源位置" class="headerlink" title="将光盘挂在到pub目录下,并更改源位置"></a>将光盘挂在到pub目录下,并更改源位置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 tftpboot]<span class="comment"># mount /dev/cdrom /var/ftp/pub/</span></span><br><span class="line">mount: /dev/sr0 写保护，将以只读方式挂载</span><br><span class="line">[root@server222 tftpboot]<span class="comment"># vim /etc/fstab</span></span><br><span class="line">[root@server222 tftpboot]<span class="comment"># tail -n 1 /etc/fstab</span></span><br><span class="line">/dev/cdrom      /var/ftp/pub    iso9660                 defaults        0 0</span><br><span class="line">[root@server222 tftpboot]<span class="comment"># </span></span><br><span class="line">[root@server222 tftpboot]<span class="comment"># vim /etc/yum.repos.d/bendi.repo</span></span><br><span class="line">[root@server222 tftpboot]<span class="comment"># cat /etc/yum.repos.d/bendi.repo</span></span><br><span class="line">[development]       <span class="comment"># 此处要改成development</span></span><br><span class="line">name=///mnt/cdrom</span><br><span class="line">baseurl=file:///var/ftp/pub</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[root@server222 tftpboot]<span class="comment"># </span></span><br><span class="line">[root@server222 tftpboot]<span class="comment"># umount /mnt/cdrom/</span></span><br><span class="line">[root@server222 tftpboot]<span class="comment"># mount -a</span></span><br><span class="line">[root@server222 tftpboot]<span class="comment"># df -Th</span></span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/centos-root xfs        17G  4.8G   13G   28% /</span><br><span class="line">devtmpfs                devtmpfs  977M     0  977M    0% /dev</span><br><span class="line">tmpfs                   tmpfs     993M     0  993M    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     993M  9.0M  984M    1% /run</span><br><span class="line">tmpfs                   tmpfs     993M     0  993M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               xfs      1014M  161M  854M   16% /boot</span><br><span class="line">tmpfs                   tmpfs     199M   20K  199M    1% /run/user/0</span><br><span class="line">/dev/sr0                iso9660   4.3G  4.3G     0  100% /var/ftp/pub</span><br><span class="line">[root@server222 tftpboot]<span class="comment">#</span></span><br></pre></td></tr></table></figure><blockquote><p>确保<code>/etc/yum.repos.d/</code>目录下仅仅只有一个配置文件</p></blockquote><h3 id="安装system-config-kickstart软件包"><a href="#安装system-config-kickstart软件包" class="headerlink" title="安装system-config-kickstart软件包"></a>安装system-config-kickstart软件包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 tftpboot]<span class="comment"># system-config-kickstart</span></span><br></pre></td></tr></table></figure><blockquote><p>如果报出一下错误，请在图形界面中打开终端进行再次输入命令，因为文本界面弹不出来一个界面<br>Could not open display because no X server is running.<br>Try running ‘system-config-kickstart –help’ for a list of options.</p></blockquote><p><img src="https://s2.ax1x.com/2019/09/22/uCkLzn.png" alt="uCkLzn.png"></p><p><img src="https://s2.ax1x.com/2019/09/22/uCkjs0.png" alt="uCkjs0.png"></p><p><img src="https://s2.ax1x.com/2019/09/22/uCkzZT.png" alt="uCkzZT.png"></p><p><img src="https://s2.ax1x.com/2019/09/22/uCAKFe.png" alt="uCAKFe.png"></p><blockquote><p>网络配置以及防火墙配置可以先不用配置，默认自动分配IP</p></blockquote><p><img src="https://s2.ax1x.com/2019/09/22/uCAaFg.png" alt="uCAaFg.png"></p><p><img src="https://s2.ax1x.com/2019/09/22/uCAwWj.png" alt="uCAwWj.png"></p><p><img src="https://s2.ax1x.com/2019/09/22/uCADln.png" alt="uCADln.png"></p><p><img src="https://s2.ax1x.com/2019/09/22/uCAsO0.png" alt="uCAsO0.png"></p><p><img src="https://s2.ax1x.com/2019/09/22/uCAXfH.png" alt="uCAXfH.png"></p><p><img src="https://s2.ax1x.com/2019/09/22/uCAx1A.png" alt="uCAx1A.png"></p><p><img src="https://s2.ax1x.com/2019/09/22/uCKsd1.png" alt="uCKsd1.png"></p><p><img src="https://s2.ax1x.com/2019/09/22/uCAz6I.png" alt="uCAz6I.png"></p><blockquote><p>脚本文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /etc/yum.repos.d/*</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'[rhel-source]</span></span><br><span class="line"><span class="string">name=Red Hat Enterprise Linux</span></span><br><span class="line"><span class="string">baseurl=file:///mnt/cdrom</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=0'</span> &gt; /etc/yum.repos.d/rhel7.repo</span><br></pre></td></tr></table></figure><blockquote><p>ctrl + s 保存并退出</p></blockquote><p><img src="https://s2.ax1x.com/2019/09/22/uCEM7T.png" alt="uCEM7T.png"></p><h3 id="将ks-cfg复制进pub目录"><a href="#将ks-cfg复制进pub目录" class="headerlink" title="将ks.cfg复制进pub目录"></a>将ks.cfg复制进pub目录</h3><blockquote><p>ks.cfg就是无人值守安装时要用的Kickstart文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 pub]<span class="comment"># cd</span></span><br><span class="line">[root@server222 ~]<span class="comment"># ls</span></span><br><span class="line">anaconda-ks.cfg       ks.cfg  模板  图片  下载  桌面</span><br><span class="line">initial-setup-ks.cfg  公共    视频  文档  音乐</span><br><span class="line">[root@server222 ~]<span class="comment"># cp ks.cfg /var/ftp/</span></span><br><span class="line">[root@server222 ~]<span class="comment"># systemctl restart vsftpd</span></span><br><span class="line">[root@server222 ~]<span class="comment"># systemctl start dhcpd</span></span><br><span class="line">[root@server222 ~]<span class="comment"># systemctl enable vsftpd</span></span><br><span class="line">[root@server222 ~]<span class="comment"># systemctl enable dhcpd</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/dhcpd.service to /usr/lib/systemd/system/dhcpd.service.</span><br></pre></td></tr></table></figure><h2 id="关闭selinux以及防火墙"><a href="#关闭selinux以及防火墙" class="headerlink" title="关闭selinux以及防火墙"></a>关闭selinux以及防火墙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 ~]<span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">[root@server222 ~]<span class="comment"># awk -F '=' 'NR==7 &#123;print $2&#125;' /etc/selinux/config</span></span><br><span class="line">disabled</span><br><span class="line">[root@server222 ~]<span class="comment"># systemctl stop firewalld.service</span></span><br><span class="line">[root@server222 ~]<span class="comment"># systemctl disable firewalld.service</span></span><br><span class="line">Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.</span><br><span class="line">Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.</span><br></pre></td></tr></table></figure><h2 id="无人安装系统"><a href="#无人安装系统" class="headerlink" title="无人安装系统"></a>无人安装系统</h2><blockquote><p>如果是服务器，请忽略这步创建虚拟机</p></blockquote><p><img src="https://s2.ax1x.com/2019/09/22/uCe54O.png" alt="uCe54O.png"></p><blockquote><p>创建虚拟机的步骤不再演示，只演示重要部分</p></blockquote><blockquote><p>此处网卡需要vmnet4，另外硬盘最好单个文件，给30GB<br><img src="https://s2.ax1x.com/2019/09/22/uCevUf.png" alt="uCevUf.png"></p></blockquote><blockquote><p>开始识别tftp，然后装系统<br><img src="https://s2.ax1x.com/2019/09/22/uCm8Vx.png" alt="uCm8Vx.png"></p></blockquote><p><img src="https://s2.ax1x.com/2019/09/22/uCmBqI.png" alt="uCmBqI.png"></p><h2 id="至此PXE无人安装操作系统已经安装完成"><a href="#至此PXE无人安装操作系统已经安装完成" class="headerlink" title="至此PXE无人安装操作系统已经安装完成"></a>至此PXE无人安装操作系统已经安装完成</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux运维" scheme="https://github.com/chineselijie/categories/linux%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="linux运维" scheme="https://github.com/chineselijie/tags/linux%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>LAMP</title>
    <link href="https://github.com/chineselijie/2019/08/31/4.LAMP/"/>
    <id>https://github.com/chineselijie/2019/08/31/4.LAMP/</id>
    <published>2019-08-30T16:18:12.654Z</published>
    <updated>2019-08-30T16:17:56.666Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[TOC]</p><h2 id="LAMP"><a href="#LAMP" class="headerlink" title="LAMP"></a>LAMP</h2><p><strong>LAMP</strong>是指一组通常一起使用来运行动态网站或者服务器的<a href="https://baike.baidu.com/item/自由软件" target="_blank" rel="noopener">自由软件</a>名称首字母缩写。</p><ul><li><a href="https://baike.baidu.com/item/Linux" target="_blank" rel="noopener"><strong>L</strong>inux</a>，<a href="https://baike.baidu.com/item/操作系统" target="_blank" rel="noopener">操作系统</a></li><li><a href="https://baike.baidu.com/item/Apache" target="_blank" rel="noopener"><strong>A</strong>pache</a>，网页服务器</li><li><a href="https://baike.baidu.com/item/MariaDB" target="_blank" rel="noopener"><strong>M</strong>ariaDB</a>或<a href="https://baike.baidu.com/item/MySQL" target="_blank" rel="noopener"><strong>M</strong>ySQL</a>，<a href="https://baike.baidu.com/item/数据库管理系统" target="_blank" rel="noopener">数据库管理系统</a>（或者<a href="https://baike.baidu.com/item/数据库服务器" target="_blank" rel="noopener">数据库服务器</a>）</li><li><a href="https://baike.baidu.com/item/PHP" target="_blank" rel="noopener"><strong>P</strong>HP</a>、<a href="https://baike.baidu.com/item/Perl" target="_blank" rel="noopener"><strong>P</strong>erl</a>或<a href="https://baike.baidu.com/item/Python" target="_blank" rel="noopener"><strong>P</strong>ython</a>，<a href="https://baike.baidu.com/item/脚本语言" target="_blank" rel="noopener">脚本语言</a></li></ul><p>虽然这些<a href="https://baike.baidu.com/item/开放源代码" target="_blank" rel="noopener">开放源代码</a>程序本身并不是专门设计成同另几个程序一起工作的，但由于它们的廉价和普遍，这个组合开始流行（大多数<a href="https://baike.baidu.com/item/Linux发行版本" target="_blank" rel="noopener">Linux发行版本</a>捆绑了这些软件）。当一起使用的时候，它们表现的像一个具有活力的“解决方案包”（Solution Packages）。其他的方案包有<a href="https://baike.baidu.com/item/苹果" target="_blank" rel="noopener">苹果</a>的<a href="https://baike.baidu.com/item/WebObjects" target="_blank" rel="noopener">WebObjects</a>（最初是<a href="https://baike.baidu.com/item/应用服务器" target="_blank" rel="noopener">应用服务器</a>），<a href="https://baike.baidu.com/item/Java" target="_blank" rel="noopener">Java</a>/<a href="https://baike.baidu.com/item/J2EE" target="_blank" rel="noopener">J2EE</a>和<a href="https://baike.baidu.com/item/微软" target="_blank" rel="noopener">微软</a>的<a href="https://baike.baidu.com/item/.NET" target="_blank" rel="noopener">.NET</a>架构。</p><p>“LAMP包”的脚本组件中包括了<a href="https://baike.baidu.com/item/CGI" target="_blank" rel="noopener">CGI</a><a href="https://baike.baidu.com/item/web" target="_blank" rel="noopener">web</a>接口，它在90年代初期变得流行。这个技术允许<a href="https://baike.baidu.com/item/网页浏览器" target="_blank" rel="noopener">网页浏览器</a>的用户在服务器上执行一个程序，并且和接受静态的内容一样接受动态的内容。程序员使用<a href="https://baike.baidu.com/item/脚本语言" target="_blank" rel="noopener">脚本语言</a>来创建这些程序因为它们能很容易有效的操作文本流，甚至当这些文本流并非源自程序自身时也是。正是由于这个原因系统设计者经常称这些脚本语言为<a href="https://baike.baidu.com/item/胶水语言" target="_blank" rel="noopener">胶水语言</a>。</p><p>Michael Kunze在一篇为德国计算机杂志《c’t》（1998，第12期，230页）而写的文章中使用了缩略语“LAMP”。这篇文章意在展示一系列的自由软件成为了商业包的替换物。由于IT世界众所周知的对缩写的爱好，Kunze提出“LAMP”这一容易被市场接受的术语来普及自由软件的使用。</p><h2 id="web服务"><a href="#web服务" class="headerlink" title="web服务"></a>web服务</h2><p><strong>WEB</strong>服务器也称为WWW(WORLD WIDE WEB，万维网)服务器，主要功能是提供网上信息浏览服务。</p><p><strong>常见web服务器（web）：</strong></p><p> httpd（apache）、nginx+PHP</p><p>tomcat：   jsp + htm</p><p>win:IIS</p><p>客户端：IE 、firefox、chrome、手机（浏览器）Browser</p><h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><p><strong>Apache HTTPD Server</strong> 简称 Apache，是 Apache 软件基金会的一个开源的网页服务器， 可以在大多数计算机操作系统中运行，由于其多平台和安全性被广泛使用，是最流行的 Web 服务器端软件之一。它快速、可靠并且可通过简单的 API 扩展，将 Perl/Python 等解释器编 译到服务器中！Apache HTTP 服务器是一个模块化的服务器,各个功能使用模块化进行插拔！ 目前支持 Windows，Linux，Unix 等平台！</p><p><strong>Apache</strong> 软件基金会（也就是 Apache Software Foundation，简称为 ASF），是专门为运 作一个开源软件项目的 Apache 的团体提供支持的非盈利性组织，这个开源软件项目就是 Apache 项目！那么我们的 HTTPD 也只是 Apache 的开源项目之一！</p><p><strong>主要的开源项目</strong>：HTTP Server，Ant，DB，iBATIS，Jakarta，Logging，Maven，Struts， Tomcat，Tapestry,Hadoop 等等。只是最有名的是 HTTP Server，所以现在所说的 Apache 已 经就是 HTTPD Server 的代号了! 我们还见的比较多的是 Tomcat，Hadoop 等项目</p><p>官方网站：<a href="http://www.apache.org/" target="_blank" rel="noopener">Apache</a></p><p>httpd：<a href="http://httpd.apache.org/" target="_blank" rel="noopener">httpd.apache</a></p><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><p><strong>MySQL</strong>是一个关系型数据库管理系统，由瑞典 MySQL AB 公司开发，目前属于 Oracle 旗下公司，他也是最流行的关系型数据库管理系统！特别是在 WEB 应用方面！</p><p><strong>关系型数据库</strong>：它通过数据、关系和对数据的约束三者组成的数据模型来存放和管理数据</p><p>官方网站：<a href="http://www.mysql.com/" target="_blank" rel="noopener">mysql</a></p><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><p><strong>PHP</strong>（外文名:PHP: Hypertext Preprocessor，中文名：“超文本预处理器”）是一种通 用开源脚本语言。语法吸收了 C 语言、Java 和 Perl 的特点，利于学习，使用广泛，主要适 用于 Web 开发领域。PHP 独特的语法混合了 C、Java、Perl 以及 PHP 自创的语法。它可以 比 CGI 或者 Perl 更快速地执行动态网页。用 PHP 做出的动态页面与其他的编程语言相比， PHP 是将程序嵌入到 HTML（标准通用标记语言下的一个应用）文档中去执行，执行效率比 完全生成 HTML 标记的 CGI 要高许多；PHP 还可以执行编译后代码，编译可以达到加密和 优化代码运行，使代码运行更快。</p><p>简单的说，PHP 就是一个脚本解释器！ </p><p>官方网站：<a href="http://php.net/" target="_blank" rel="noopener">php</a></p><h2 id="LAMP工作原理"><a href="#LAMP工作原理" class="headerlink" title="LAMP工作原理"></a>LAMP工作原理</h2><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1566921823529.png" alt="1566921823529"></p><p><strong>Web 服务器的工作模式和端口</strong></p><p>工作模式是：B/S 模式</p><p>工作端口是：80/http 正常端口443/https SSL 端口</p><p><strong>搭建网易yum源</strong></p><blockquote><p>准备之前我们需要搭建一下网易的yum源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@server222 ~]<span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo</span></span><br><span class="line">&gt; [root@server222 ~]<span class="comment"># cd /etc/yum.repos.d/</span></span><br><span class="line">&gt; [root@server222 yum.repos.d]<span class="comment"># yum clean all</span></span><br><span class="line">&gt; [root@server222 yum.repos.d]<span class="comment"># yum makecache</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="源码编译安装Apache"><a href="#源码编译安装Apache" class="headerlink" title="源码编译安装Apache"></a>源码编译安装Apache</h2><blockquote><p>下载传到<code>/usr/local/src/</code>目录下面</p></blockquote><p><strong>安装gcc、pcre-devel</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 src]<span class="comment"># yum install gcc -y</span></span><br><span class="line">[root@server222 src]<span class="comment"># yum install pcre pcre-devel -y</span></span><br></pre></td></tr></table></figure><p><strong>apr源码包编译</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 src]<span class="comment"># tar -xzvf apr-1.6.5.tar.gz</span></span><br><span class="line">[root@server222 src]<span class="comment"># cd apr-1.6.5/</span></span><br><span class="line">[root@server222 apr-1.6.5]<span class="comment"># ./configure --prefix=/usr/local/apr ; make ; make install</span></span><br></pre></td></tr></table></figure><p><strong>apr-util源码包编译</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 apr-1.6.5]<span class="comment"># cd ..</span></span><br><span class="line">[root@server222 src]<span class="comment"># tar -xzvf apr-util-1.6.1.tar.gz</span></span><br><span class="line">[root@server222 src]<span class="comment"># cd apr-util-1.6.1/</span></span><br><span class="line">[root@server222 apr-util-1.6.1]<span class="comment"># ./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr ; make ; make install</span></span><br></pre></td></tr></table></figure><blockquote><p>如果在编译途中遇到这样的错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; 编译中断。</span><br><span class="line">&gt; make[1]: *** [xml/apr_xml.lo] 错误 1</span><br><span class="line">&gt; make[1]: 离开目录“/usr/<span class="built_in">local</span>/src/apr-util-1.6.1”</span><br><span class="line">&gt; make: *** [all-recursive] 错误 1</span><br><span class="line">&gt; /bin/sh /usr/<span class="built_in">local</span>/apr/build-1/libtool --silent --mode=compile gcc -g -O2 -pthread   -DHAVE_CONFIG_H  -DLINUX -D_REENTRANT -D_GNU_SOURCE   -I/usr/<span class="built_in">local</span>/src/apr-util-1.6.1/include -I/usr/<span class="built_in">local</span>/src/apr-util-1.6.1/include/private  -I/usr/<span class="built_in">local</span>/apr/include/apr-1    -o xml/apr_xml.lo -c xml/apr_xml.c &amp;&amp; touch xml/apr_xml.lo</span><br><span class="line">&gt; xml/apr_xml.c:35:19: 致命错误：expat.h：没有那个文件或目录</span><br><span class="line">&gt;  <span class="comment">#include &lt;expat.h&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>请运行<code>yum install expat-devel -y</code> 这么一个命令</p><p>再次编译就好了</p></blockquote><p><strong>创建用户与组</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 apr-util-1.6.1]<span class="comment"># groupadd -r apache</span></span><br><span class="line">[root@server222 apr-util-1.6.1]<span class="comment"># useradd -r -g apache apache -s /sbin/nologin</span></span><br></pre></td></tr></table></figure><p><strong>httpd源码包编译</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 apr-util-1.6.1]<span class="comment"># cd ..</span></span><br><span class="line">[root@server222 src]<span class="comment"># tar -xzvf httpd-2.4.38.tar.gz</span></span><br><span class="line">[root@server222 src]<span class="comment"># cd httpd-2.4.38/</span></span><br><span class="line">[root@server222 httpd-2.4.38]<span class="comment"># ./configure --prefix=/usr/local/apache --sysconfdir=/etc/httpd24 --enable-so --enable-ssl --enable-cgi --enable-rewrite --with-zlib --with-pcre --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util --enable-modules=most --enable-mpms-shared=all --with-mpm=prefork</span></span><br></pre></td></tr></table></figure><blockquote><p>若遇到这种情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; configure: WARNING: OpenSSL version is too old</span><br><span class="line">&gt; no</span><br><span class="line">&gt; checking whether to <span class="built_in">enable</span> mod_ssl... configure: error: mod_ssl has been requested but can not be built due to prerequisite failures</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>请执行<code>yum install openssl-devel -y</code>一条命令</p><p>再次执行上一步编译</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 httpd-2.4.38]<span class="comment"># make ; make install</span></span><br></pre></td></tr></table></figure><p><strong>启动服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 httpd-2.4.38]<span class="comment"># /usr/local/apache/bin/apachectl</span></span><br><span class="line">AH00558: httpd: Could not reliably determine the server<span class="string">'s fully qualified domain name, using fe80::1bd0:d77:f2c2:6f3. Set the '</span>ServerName<span class="string">' directive globally to suppress this message</span></span><br><span class="line"><span class="string">[root@server222 httpd-2.4.38]# /usr/local/apache/bin/apachectl</span></span><br><span class="line"><span class="string">AH00558: httpd: Could not reliably determine the server'</span>s fully qualified domain name, using fe80::1bd0:d77:f2c2:6f3. Set the <span class="string">'ServerName'</span> directive globally to suppress this message</span><br><span class="line">httpd (pid 114412) already running</span><br><span class="line"><span class="comment"># 此处出来这么一大串鬼东西，其实httpd已经在运行了</span></span><br><span class="line">[root@server222 httpd-2.4.38]<span class="comment"># netstat -antup | grep httpd</span></span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      114412/httpd</span><br></pre></td></tr></table></figure><blockquote><p>此处教一下字符界面的浏览器，命令<code>yum install elinks.x86_64 -y</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 httpd-2.4.38]<span class="comment"># yum install elinks.x86_64 -y</span></span><br><span class="line">[root@server222 httpd-2.4.38]<span class="comment"># elinks 192.168.176.222</span></span><br></pre></td></tr></table></figure><blockquote><p>第一次访问点击OK，之后就可以看到页面显示“<strong>It works!</strong>”，到此处 Apache搭建完成</p></blockquote><h2 id="添加systemd的服务脚本"><a href="#添加systemd的服务脚本" class="headerlink" title="添加systemd的服务脚本"></a>添加systemd的服务脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 httpd-2.4.38]<span class="comment"># cd /usr/lib/systemd/system</span></span><br><span class="line">[root@server222 system]<span class="comment"># vim httpd.service</span></span><br><span class="line">[root@server222 system]<span class="comment"># cat httpd.service</span></span><br><span class="line"><span class="comment"># 添加内容如下</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=The Apache HTTP Server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line">Documentation=man:httpd(8)</span><br><span class="line">Documentation=man:apachectl(8)</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/apache/bin/httpd -DFOREGROUND</span><br><span class="line">ExecReload=/usr/<span class="built_in">local</span>/apache/bin/httpd -k graceful</span><br><span class="line">ExecStop=/bin/<span class="built_in">kill</span> -WINCH <span class="variable">$&#123;MAINPID&#125;</span></span><br><span class="line"></span><br><span class="line">KillSignal=SIGCONT</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p><strong>启动服务测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 system]<span class="comment"># systemctl start httpd</span></span><br><span class="line">[root@server222 system]<span class="comment"># systemctl restart httpd</span></span><br><span class="line">[root@server222 system]<span class="comment"># systemctl status httpd</span></span><br><span class="line">● httpd.service - The Apache HTTP Server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since 五 2019-08-30 20:31:20 CST; 1s ago</span><br><span class="line">     Docs: man:httpd(8)</span><br><span class="line">           man:apachectl(8)</span><br><span class="line">  Process: 114744 ExecStop=/bin/<span class="built_in">kill</span> -WINCH <span class="variable">$&#123;MAINPID&#125;</span> (code=exited, status=1/FAILURE)</span><br><span class="line"> Main PID: 114756 (httpd)</span><br><span class="line">   CGroup: /system.slice/httpd.service</span><br><span class="line">           └─114756 /usr/<span class="built_in">local</span>/apache/bin/httpd -DFOREGROUND</span><br><span class="line"></span><br><span class="line">8月 30 20:31:20 server222 systemd[1]: Started The Apache HTTP Server.</span><br><span class="line">8月 30 20:31:20 server222 systemd[1]: Starting The Apache HTTP Server...</span><br></pre></td></tr></table></figure><h2 id="YUM安装LAMP环境"><a href="#YUM安装LAMP环境" class="headerlink" title="YUM安装LAMP环境"></a>YUM安装LAMP环境</h2><p><strong>LAMP=Linux（存在）+Apache（HTTPD   已安装）</strong>+Mysql+PHP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 src]<span class="comment"># yum -y install httpd mariadb mariadb-server php php-mysql</span></span><br><span class="line">[root@server222 src]<span class="comment"># systemctl start mariadb.service</span></span><br><span class="line">[root@server222 src]<span class="comment"># systemctl enable mariadb.service</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/mariadb.service to /usr/lib/systemd/system/mariadb.service.</span><br></pre></td></tr></table></figure><p><strong><strong>初始化数据库</strong></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 src]<span class="comment"># mysql_secure_installation</span></span><br><span class="line"></span><br><span class="line">NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB</span><br><span class="line">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class="line"></span><br><span class="line">In order to <span class="built_in">log</span> into MariaDB to secure it, we<span class="string">'ll need the current</span></span><br><span class="line"><span class="string">password for the root user.  If you'</span>ve just installed MariaDB, and</span><br><span class="line">you haven<span class="string">'t set the root password yet, the password will be blank,</span></span><br><span class="line"><span class="string">so you should just press enter here.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Enter current password for root (enter for none):</span></span><br><span class="line"><span class="string">OK, successfully used password, moving on...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Setting the root password ensures that nobody can log into the MariaDB</span></span><br><span class="line"><span class="string">root user without the proper authorisation.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Set root password? [Y/n]</span></span><br><span class="line"><span class="string">New password:</span></span><br><span class="line"><span class="string">Re-enter new password:</span></span><br><span class="line"><span class="string">Password updated successfully!</span></span><br><span class="line"><span class="string">Reloading privilege tables..</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">By default, a MariaDB installation has an anonymous user, allowing anyone</span></span><br><span class="line"><span class="string">to log into MariaDB without having to have a user account created for</span></span><br><span class="line"><span class="string">them.  This is intended only for testing, and to make the installation</span></span><br><span class="line"><span class="string">go a bit smoother.  You should remove them before moving into a</span></span><br><span class="line"><span class="string">production environment.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Remove anonymous users? [Y/n]</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Normally, root should only be allowed to connect from '</span>localhost<span class="string">'.  This</span></span><br><span class="line"><span class="string">ensures that someone cannot guess at the root password from the network.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disallow root login remotely? [Y/n]</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">By default, MariaDB comes with a database named '</span><span class="built_in">test</span><span class="string">' that anyone can</span></span><br><span class="line"><span class="string">access.  This is also intended only for testing, and should be removed</span></span><br><span class="line"><span class="string">before moving into a production environment.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Remove test database and access to it? [Y/n]</span></span><br><span class="line"><span class="string"> - Dropping test database...</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"> - Removing privileges on test database...</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Reloading the privilege tables will ensure that all changes made so far</span></span><br><span class="line"><span class="string">will take effect immediately.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Reload privilege tables now? [Y/n]</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Cleaning up...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">All done!  If you'</span>ve completed all of the above steps, your MariaDB</span><br><span class="line">installation should now be secure.</span><br><span class="line"></span><br><span class="line">Thanks <span class="keyword">for</span> using MariaDB!</span><br></pre></td></tr></table></figure><p><strong>测试数据库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 src]<span class="comment"># mysql -uroot -p123456</span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 11</span><br><span class="line">Server version: 5.5.60-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; <span class="built_in">exit</span></span><br><span class="line">Bye</span><br></pre></td></tr></table></figure><p><strong>测试apache是否支持PHP</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 src]<span class="comment"># cd /var/www/html/</span></span><br><span class="line">[root@server222 html]<span class="comment"># vim index.php</span></span><br><span class="line">[root@server222 html]<span class="comment"># cat index.php</span></span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line">[root@server222 html]<span class="comment"># systemctl restart httpd</span></span><br><span class="line">[root@server222 html]<span class="comment"># elinks 192.168.176.222</span></span><br></pre></td></tr></table></figure><h2 id="修改配置文件，实战举例"><a href="#修改配置文件，实战举例" class="headerlink" title="修改配置文件，实战举例"></a>修改配置文件，实战举例</h2><p>例1： 搭建一台测试web服务器</p><p>案例：</p><p>部门内部搭建一台WEB服务器，采用的IP地址和端口为192.168.0.63:80，首页采用index.html</p><p>文件。管理员E-mail地址为 <a href="mailto:775531910@qq.com" target="_blank" rel="noopener">775531910@qq.com</a>，网页的编码类型采用UTF-8，所有网站资源都存放在/var/www/html目录下，并将Apache的配置文件根目录设置为/etc/httpd目录。</p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 html]<span class="comment"># vim /etc/httpd/conf/httpd.conf</span></span><br><span class="line"> 31 ServerRoot <span class="string">"/etc/httpd"</span>  <span class="comment">#apache配置文件的根目录 </span></span><br><span class="line"> 42 Listen 80  <span class="comment">#监听的端口</span></span><br><span class="line"> 86 ServerAdmin r775531910@qq.com   <span class="comment">#设置管理员，e-mail 地址</span></span><br><span class="line"> 95 <span class="comment">#ServerName www.example.com:80   #服务器主机名</span></span><br><span class="line">119 DocumentRoot <span class="string">"/var/www/html"</span>   <span class="comment">#网站页面根目录</span></span><br><span class="line">144 Options Indexes FollowSymLinks  <span class="comment">#当一个目录没有默认首页时，允许显示此目录列表</span></span><br><span class="line">164 DirectoryIndex index.html index.php  <span class="comment">#指定默认首页</span></span><br></pre></td></tr></table></figure><p><strong>取消apache默认欢迎页：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 html]<span class="comment"># vim /etc/httpd/conf.d/welcome.conf</span></span><br><span class="line"><span class="comment"># 将下面的四行注释掉</span></span><br><span class="line"><span class="comment">#&lt;LocationMatch "^/+$"&gt;</span></span><br><span class="line"><span class="comment">#    Options -Indexes</span></span><br><span class="line"><span class="comment">#    ErrorDocument 403 /.noindex.html</span></span><br><span class="line"><span class="comment">#&lt;/LocationMatch&gt;</span></span><br></pre></td></tr></table></figure><p><strong>创建首页：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 html]<span class="comment"># systemctl restart httpd.service</span></span><br><span class="line">[root@server222 html]<span class="comment"># echo 'welcome to haahahahahah775531910'  &gt; /var/www/html/index.html</span></span><br><span class="line">[root@server222 html]<span class="comment"># systemctl restart httpd.service</span></span><br></pre></td></tr></table></figure><p><strong>测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 html]<span class="comment"># elinks 192.168.176.222</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux运维" scheme="https://github.com/chineselijie/categories/linux%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="linux运维" scheme="https://github.com/chineselijie/tags/linux%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>RHCSA复习</title>
    <link href="https://github.com/chineselijie/2019/08/29/16.linux--RHCSA%E6%A8%A1%E6%8B%9F/"/>
    <id>https://github.com/chineselijie/2019/08/29/16.linux--RHCSA%E6%A8%A1%E6%8B%9F/</id>
    <published>2019-08-29T15:44:18.601Z</published>
    <updated>2019-08-22T13:23:40.070Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-破解root密码"><a href="#1-破解root密码" class="headerlink" title="1.破解root密码"></a>1.破解root密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">启动界面 按e</span><br><span class="line">下翻至最后2行，删除到ro 若有语言代码不用删除，按下ctrl+x键</span><br><span class="line">mount -o remount,rw /sysroot</span><br><span class="line">chroot /sysroot</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tangkai"</span> | passwd --stdin root</span><br><span class="line">touch /.autorelabel</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h3 id="2-配置IP地址"><a href="#2-配置IP地址" class="headerlink" title="2.配置IP地址"></a>2.配置IP地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=172.25.254.10</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=172.25.254.254</span><br><span class="line">DNS1=172.25.254.250</span><br><span class="line">保存并退出</span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>【此时在本地主机上开一个终端远程连接】<br>ssh <a href="mailto:root@172.25.254.10" target="_blank" rel="noopener">root@172.25.254.10</a></p><h3 id="3-更改主机名"><a href="#3-更改主机名" class="headerlink" title="3.更改主机名"></a>3.更改主机名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/hostname</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat /etc/hostname </span></span><br><span class="line">station.domain12.example.com</span><br><span class="line">[root@localhost ~]<span class="comment"># bash</span></span><br><span class="line">[root@station ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="4-配置yum源"><a href="#4-配置yum源" class="headerlink" title="4.配置yum源"></a>4.配置yum源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd /etc/yum.repos.d/</span></span><br><span class="line">[root@localhost yum.repos.d]<span class="comment"># ls</span></span><br><span class="line">rhel_dvd.repo</span><br><span class="line">[root@localhost yum.repos.d]<span class="comment"># rm -rf rhel_dvd.repo </span></span><br><span class="line">[root@localhost yum.repos.d]<span class="comment"># vim zhou.repo</span></span><br><span class="line">[root@localhost yum.repos.d]<span class="comment"># cat zhou.repo</span></span><br><span class="line">[zhou]</span><br><span class="line">name=zhou</span><br><span class="line">baseurl=http://classroom.example.com/content/rhel7.0/x86_64/dvd/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[root@localhost yum.repos.d]<span class="comment"># yum clean all</span></span><br><span class="line">[root@localhost yum.repos.d]<span class="comment"># yum install vsftpd -y</span></span><br></pre></td></tr></table></figure><blockquote><p>此时安装报错，可能是classroom.example.com访问不了，请看最下面介绍的注意</p></blockquote><h3 id="5-配置selinux"><a href="#5-配置selinux" class="headerlink" title="5.配置selinux"></a>5.配置selinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@station ~]<span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">SELINUX=enforcing（将disabled修改为enforcing）</span><br></pre></td></tr></table></figure><h3 id="6-配置系统磁盘及打包操作"><a href="#6-配置系统磁盘及打包操作" class="headerlink" title="6.配置系统磁盘及打包操作"></a>6.配置系统磁盘及打包操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">lsblk</span><br><span class="line">fdisk /dev/vdb</span><br><span class="line">p-n-p-回车-回车-+500M-p-w</span><br><span class="line">partprobe /dev/vdb</span><br><span class="line">lsblk</span><br><span class="line">mkfs.xfs /dev/vdb1</span><br><span class="line">mkdir /common</span><br><span class="line">blkid</span><br><span class="line">复制/dev/vdb1的UUID</span><br><span class="line">vim /etc/fstab</span><br><span class="line">UUID=<span class="string">"2204b223-5803-4136-b09b-59903527dc77"</span> /common xfs defaults 0 0 </span><br><span class="line">保存并退出</span><br><span class="line">mount -a</span><br><span class="line">df -Th</span><br><span class="line"></span><br><span class="line">mkdir /common/adm</span><br><span class="line"><span class="built_in">cd</span> /common</span><br><span class="line">useradd admin</span><br><span class="line">chown .admin adm</span><br><span class="line">ls -l</span><br><span class="line">setfacl -m g:admin:rwx adm</span><br><span class="line">setfacl -m o::--- adm</span><br><span class="line">ls -l</span><br><span class="line"></span><br><span class="line">tar cjf backup_local.tar.bz2 /usr/<span class="built_in">local</span></span><br><span class="line">ls</span><br></pre></td></tr></table></figure><h3 id="7-内核设置"><a href="#7-内核设置" class="headerlink" title="7.内核设置"></a>7.内核设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">wget http://classroom.example.com/content/rhel7.3/x86_64/dvd/Packages/kernel-3.10.0-514.el7.x86_64.rpm</span><br><span class="line">rpm -ivh kernel-3.10.0-514.el7.x86_64.rpm</span><br><span class="line">wget http://classroom.example.com/content/rhel7.3/x86_64/dvd/Packages/dracut-033-463.el7.x86_64.rpm</span><br><span class="line">wget http://classroom.example.com/content/rhel7.3/x86_64/dvd/Packages/linux-firmware-20160830-49.git7534e19.el7.noarch.rpm</span><br><span class="line">wget http://classroom.example.com/content/rhel7.3/x86_64/dvd/Packages/xfsprogs-4.5.0-8.el7.x86_64.rpm</span><br><span class="line">wget http://classroom.example.com/content/rhel7.3/x86_64/dvd/Packages/kmod-20-9.el7.x86_64.rpm</span><br><span class="line">rpm -Uvh kmod-20-9.el7.x86_64.rpm</span><br><span class="line">rpm -Uvh linux-firmware-20160830-49.git7534e19.el7.noarch.rpm </span><br><span class="line">rpm -Uvh xfsprogs-4.5.0-8.el7.x86_64.rpm </span><br><span class="line">rpm -Uvh dracut-033-463.el7.x86_64.rpm --nodeps</span><br><span class="line">rpm -ivh kernel-3.10.0-514.el7.x86_64.rpm</span><br><span class="line">【此时中途会卡一会，不必惊慌，等待出来提示符】</span><br><span class="line">reboot</span><br><span class="line">等待2分钟再次ssh root@172.25.254.10</span><br><span class="line">uname -r</span><br><span class="line">3.10.0-514.el7.x86_64</span><br><span class="line">【此时表示内核升级成功】</span><br></pre></td></tr></table></figure><h3 id="8-开启IP转发功能"><a href="#8-开启IP转发功能" class="headerlink" title="8.开启IP转发功能"></a>8.开启IP转发功能</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line">复制 /usr/lib/sysctl.d/00-system.conf</span><br><span class="line">退出</span><br><span class="line">vim /usr/lib/sysctl.d/00-system.conf</span><br><span class="line">加入 net.ipv4.ip_forward = 1</span><br><span class="line">保存并退出</span><br><span class="line">sysctl -p /usr/lib/sysctl.d/00-system.conf</span><br><span class="line">【当有出现net.ipv4.ip_forward = 1表示IP转发成功】</span><br></pre></td></tr></table></figure><h3 id="9-计划任务"><a href="#9-计划任务" class="headerlink" title="9.计划任务"></a>9.计划任务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">useradd natasha</span><br><span class="line">crontab -u natasha -e</span><br><span class="line">23 14 * * * /usr/bin/<span class="built_in">echo</span> <span class="string">"I AM RHCE"</span></span><br><span class="line">保存并退出</span><br><span class="line">vim /etc/cron.allow</span><br><span class="line">root</span><br><span class="line">natasha</span><br><span class="line">保存并退出</span><br></pre></td></tr></table></figure><h3 id="10-创建用户"><a href="#10-创建用户" class="headerlink" title="10.创建用户"></a>10.创建用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd tangkai -c <span class="string">"BOSS"</span> -u 9999 -G root -d /tangkai</span><br><span class="line">tail -n 1 /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="11-创建用户和组"><a href="#11-创建用户和组" class="headerlink" title="11.创建用户和组"></a>11.创建用户和组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">usermod -a -G admin natasha</span><br><span class="line">id natasha</span><br><span class="line">useradd -G admin harry</span><br><span class="line">id harry</span><br><span class="line">useradd -s /sbin/nologin sarah</span><br><span class="line">id sarah</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tangkai"</span> | passwd --stdin natasha</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tangkai"</span> | passwd --stdin harry</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tangkai"</span> | passwd --stdin sarah</span><br><span class="line">chage -M 30 -W 5 natasha</span><br><span class="line">chage -l natasha</span><br></pre></td></tr></table></figure><h3 id="12-权限设置"><a href="#12-权限设置" class="headerlink" title="12.权限设置"></a>12.权限设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/fstab /var/tmp</span><br><span class="line"><span class="built_in">cd</span> /var/tmp</span><br><span class="line">ls -l</span><br><span class="line">setfacl -m u:natasha:rw- fstab</span><br><span class="line">setfacl -m u:harry:--- fstab</span><br><span class="line">setfacl -m o::r-- fstab</span><br><span class="line">ls -l</span><br></pre></td></tr></table></figure><h3 id="13-远程登陆"><a href="#13-远程登陆" class="headerlink" title="13.远程登陆"></a>13.远程登陆</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">1）用LDAP验证：</span><br><span class="line"><span class="built_in">cd</span> /etc/openldap/</span><br><span class="line">mkdir cacerts</span><br><span class="line"><span class="built_in">cd</span> cacerts/</span><br><span class="line">wget http://classroom.example.com/pub/example-ca.crt</span><br><span class="line">yum install authconfig* sssd* krb5* -y</span><br><span class="line">authconfig-tui</span><br><span class="line">【此处勾选以下四个：】</span><br><span class="line">【Use LDAP】</span><br><span class="line">【Use Shadow Passwords】</span><br><span class="line">【Use LDAP Authentication】</span><br><span class="line">【Local authorization is sufficient】</span><br><span class="line">然后下一步</span><br><span class="line"> [*] Use TLS</span><br><span class="line">Server: classroom.example.com</span><br><span class="line">Base DN: dc=example,dc=com</span><br><span class="line">然后ok</span><br><span class="line">su - ldapuser12</span><br><span class="line">出现bash-4.2$为正确</span><br><span class="line"></span><br><span class="line">2）用kerbros验证</span><br><span class="line">authconfig-tui</span><br><span class="line">【此处勾选以下四个：】</span><br><span class="line">【Use LDAP】</span><br><span class="line">【Use Shadow Passwords】</span><br><span class="line">【Use Kerberos】</span><br><span class="line">【Local authorization is sufficient】</span><br><span class="line">然后下一步</span><br><span class="line"> [*] Use TLS</span><br><span class="line">Server: classroom.example.com</span><br><span class="line">Base DN: dc=example,dc=com</span><br><span class="line">然后下一步</span><br><span class="line">Realm: EXAMPLE.COM</span><br><span class="line">KDC: classroom.example.com </span><br><span class="line">Admin Server: classroom.example.com </span><br><span class="line">[ ] Use DNS to resolve hosts to realms</span><br><span class="line">[ ] Use DNS to locate KDCs <span class="keyword">for</span> realms  </span><br><span class="line">然后OK</span><br><span class="line">su - ldapuser12</span><br><span class="line">出现bash-4.2$为正确</span><br></pre></td></tr></table></figure><h3 id="14-NTP客户端连接"><a href="#14-NTP客户端连接" class="headerlink" title="14.NTP客户端连接"></a>14.NTP客户端连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/chrony.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#server 0.rhel.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 1.rhel.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 2.rhel.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 3.rhel.pool.ntp.org iburst</span></span><br><span class="line">server classroom.example.com iburst</span><br><span class="line"></span><br><span class="line">保存并退出</span><br><span class="line"></span><br><span class="line">systemctl restart chronyd</span><br><span class="line">systemctl <span class="built_in">enable</span> chronyd</span><br></pre></td></tr></table></figure><h3 id="15-LDAP客户端自动挂载"><a href="#15-LDAP客户端自动挂载" class="headerlink" title="15.LDAP客户端自动挂载"></a>15.LDAP客户端自动挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">yum install autofs.x86_64 -y</span><br><span class="line"><span class="built_in">cd</span> /etc</span><br><span class="line">ll auto.【此处tab两下】</span><br><span class="line">vim auto.master</span><br><span class="line">在/misc   /etc/auto.misc下添加</span><br><span class="line">/home/guests /etc/auto.ldap</span><br><span class="line">保存并退出</span><br><span class="line">cp auto.misc auto.ldap</span><br><span class="line">vim auto.ldap</span><br><span class="line">ldapuser12  -rw  classroom.example.com:/home/guests/ldapuser12</span><br><span class="line">保存并退出</span><br><span class="line">systemctl restart autofs</span><br><span class="line">systemctl <span class="built_in">enable</span> autofs</span><br><span class="line">su - ldapuser12</span><br><span class="line">【出现完整的登陆提示符表示登陆完成】</span><br><span class="line">[ldapuser12@station ~]$</span><br></pre></td></tr></table></figure><h3 id="16-查找文件"><a href="#16-查找文件" class="headerlink" title="16.查找文件"></a>16.查找文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / -user tangkai -<span class="built_in">exec</span> cp -rf &#123;&#125; /root/findfile/ \;</span><br><span class="line"></span><br><span class="line">cat /usr/share/dict/words | grep <span class="string">"atens"</span> &gt; /root/lines.txt</span><br></pre></td></tr></table></figure><h3 id="17-文件系统管理"><a href="#17-文件系统管理" class="headerlink" title="17.文件系统管理"></a>17.文件系统管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">lsblk</span><br><span class="line">fdisk /dev/vdb</span><br><span class="line">n<span class="_">-e</span>-回车-回车-回车-n<span class="_">-l</span>-回车-+500M-p-w</span><br><span class="line">fdisk /dev/vdb</span><br><span class="line">p-回车-82-w</span><br><span class="line">partprobe /dev/vdb</span><br><span class="line">mkswap /dev/vdb5</span><br><span class="line">blkid</span><br><span class="line">复制/dev/vdb5的UUID</span><br><span class="line">vim /etc/fstab</span><br><span class="line">UUID=<span class="string">"1fdd485e-faf5-4635-a61c-d9e0aef78702"</span> swap swap defaults 0 0</span><br><span class="line">保存并退出</span><br><span class="line">swapon /dev/vdb5</span><br><span class="line">free -m</span><br><span class="line">【swap中total出现499表示成功】</span><br></pre></td></tr></table></figure><h3 id="18-LVM拉大-减小"><a href="#18-LVM拉大-减小" class="headerlink" title="18.LVM拉大/减小"></a>18.LVM拉大/减小</h3><blockquote><p>此题先存放至最后倒数第二题时候再做</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">df -Th  这里会有一个vo</span><br><span class="line">环境中没有所以我们先创建一个vo</span><br><span class="line">lsblk</span><br><span class="line">fdisk /dev/vdb</span><br><span class="line">p-n<span class="_">-l</span>-回车-+400M-p-t-回车-8e-w</span><br><span class="line">partprobe /dev/vdb</span><br><span class="line">lsblk</span><br><span class="line">vgcreate vg0 /dev/vdb6</span><br><span class="line">lvcreate -L 200M -n vo vg0</span><br><span class="line">lvdisplay</span><br><span class="line">lsblk</span><br><span class="line">mkfs.ext4 /dev/vg0/vo</span><br><span class="line">blkid</span><br><span class="line">复制/dev/loop0的UUID</span><br><span class="line">vim /etc/fstab</span><br><span class="line">UUID=<span class="string">"c5e1fe56-4745-4e34-ae69-715e008b3bfe"</span> /vo ext4 defaults 0 0</span><br><span class="line">mkdir /vo</span><br><span class="line">mount -a</span><br><span class="line">lsblk</span><br><span class="line">df -Th</span><br><span class="line">【此时就有一个vo了】</span><br><span class="line">【以上考试时候是已经有了，只需做以下步骤】</span><br><span class="line">lvextend -L 312M /dev/vg0/vo</span><br><span class="line">resize2fs /dev/vg0/vo</span><br><span class="line">df -Th</span><br><span class="line">【此时可以看到299M，表示成功】</span><br></pre></td></tr></table></figure><h3 id="19-ACL控制及权限委派"><a href="#19-ACL控制及权限委派" class="headerlink" title="19.ACL控制及权限委派"></a>19.ACL控制及权限委派</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">useradd admin1</span><br><span class="line">useradd admin2</span><br><span class="line">useradd admin3</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tangkai"</span> | passwd --stdin admin1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tangkai"</span> | passwd --stdin admin2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tangkai"</span> | passwd --stdin admin3</span><br><span class="line">useradd user2 -s /sbin/nologin</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tangkai"</span> | passwd --stdin user2</span><br><span class="line">mkdir /data</span><br><span class="line">setfacl -m u:admin1:rwx /data</span><br><span class="line">setfacl -m u:admin2:r-x /data</span><br><span class="line">setfacl -m u:admin3:--- /data</span><br><span class="line">chown .admin1 /data</span><br><span class="line">chmod g+s /data</span><br><span class="line">mkdir /storage</span><br><span class="line">chmod 777 /storage/</span><br><span class="line">chmod o+t /storage/</span><br><span class="line">visudo</span><br><span class="line">找到root    ALL=(ALL)       ALL 在下面一行写上：</span><br><span class="line">admin1   ALL=(ALL)       /usr/sbin/useradd,/usr/sbin/userdel,/usr/sbin/usermod</span><br><span class="line">保存并退出</span><br></pre></td></tr></table></figure><h3 id="20-日志管理"><a href="#20-日志管理" class="headerlink" title="20.日志管理"></a>20.日志管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rsyslog.conf</span><br><span class="line">找到mail.*</span><br><span class="line">将后面的-/var/<span class="built_in">log</span>/maillog替换成classroom.example.com</span><br><span class="line">systemctl restart rsyslog.service </span><br><span class="line">systemctl <span class="built_in">enable</span> rsyslog.service </span><br><span class="line">systemctl stop rsyslog.service</span><br></pre></td></tr></table></figure><h3 id="21-LVM配置"><a href="#21-LVM配置" class="headerlink" title="21.LVM配置"></a>21.LVM配置</h3><blockquote><p>此题先存放至最后一题时候再做</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">1)</span><br><span class="line">lsblk </span><br><span class="line">fdisk /dev/vdb</span><br><span class="line">p-n<span class="_">-l</span>-回车-+816M-t-回车-8e-w</span><br><span class="line">partprobe</span><br><span class="line">lsblk</span><br><span class="line">pvcreate /dev/vdb7</span><br><span class="line">vgcreate -s 16M -p 50 datastore /dev/vdb7</span><br><span class="line">vgdisplay</span><br><span class="line"></span><br><span class="line">lvcreate -L 800M -n database datastore</span><br><span class="line">lvs</span><br><span class="line">mkdir /mnt/wshare</span><br><span class="line">mkfs.vfat /dev/datastore/database</span><br><span class="line">blkid</span><br><span class="line">复制/dev/mapper/datastore-database的UUID</span><br><span class="line">vim/etc/fstab</span><br><span class="line">UUID=<span class="string">"2E55-7C3E"</span> /mnt/wshare vfat defaults 0 0</span><br><span class="line">保存并退出</span><br><span class="line">mount -a</span><br><span class="line">df -Th</span><br><span class="line"></span><br><span class="line">2)</span><br><span class="line">lsblk</span><br><span class="line">fdisk /dev/vdb</span><br><span class="line">p-n<span class="_">-l</span>-回车-+168M-p-t-回车-8e-w</span><br><span class="line">partprobe</span><br><span class="line">pvcreate /dev/vdb8</span><br><span class="line">vgcreate -s 8M -p 20 vg1 /dev/vdb8</span><br><span class="line">vgdisplay</span><br><span class="line"></span><br><span class="line">lvcreate -L 160 -n game vg1</span><br><span class="line">lvdisplay</span><br><span class="line">mkfs.ext4 /dev/vg1/game</span><br><span class="line">ll /storage</span><br><span class="line">复制/dev/mapper/vg1-game的UUID</span><br><span class="line">vim/etc/fstab</span><br><span class="line">UUID=<span class="string">"b1f45d75-53b2-4691-8198-841f14719e31"</span> /storage ext4 defaults 0 0</span><br><span class="line">保存并退出</span><br><span class="line">mount -a</span><br><span class="line">df -Th</span><br><span class="line"></span><br><span class="line">3）</span><br><span class="line">lsblk</span><br><span class="line">fdisk /dev/vdb</span><br><span class="line">p-n<span class="_">-l</span>-回车-+746M-p-t-回车-8e-w</span><br><span class="line">partprobe</span><br><span class="line">pvcreate /dev/vdb9</span><br><span class="line">vgextend vg1 /dev/vdb9</span><br><span class="line">vgdisplay</span><br><span class="line">lvextend -L 746M /dev/vg1/game </span><br><span class="line">resize2fs /dev/vg1/game</span><br><span class="line">lvdisplay </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4)</span><br><span class="line">umount /dev/vg1/game</span><br><span class="line">e2fsck -f /dev/vg1/game</span><br><span class="line">resize2fs /dev/vg1/game 160M</span><br><span class="line">lvreduce -L 160M /dev/vg1/game</span><br><span class="line">y</span><br><span class="line">df -Th</span><br><span class="line">e2fsck /dev/vg1/game</span><br><span class="line">mount -a</span><br><span class="line">df -Th</span><br></pre></td></tr></table></figure><h3 id="22-过滤操作"><a href="#22-过滤操作" class="headerlink" title="22.过滤操作"></a>22.过滤操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install vsftpd.x86_64 -y</span><br><span class="line">cp /etc/vsftpd/vsftpd.conf /root</span><br><span class="line">cat vsftpd.conf | grep -v ^<span class="comment"># | grep -v ^$ | grep "YES"$ &gt; /root/ftp.txt</span></span><br></pre></td></tr></table></figure><h3 id="23-挂载操作"><a href="#23-挂载操作" class="headerlink" title="23.挂载操作"></a>23.挂载操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">wget http://classroom.example.com/content/boot/rhci-foundation-7.3-5.r46146.iso</span><br><span class="line">mv  rhci-foundation-7.3-5.r46146.iso boot.iso</span><br><span class="line">vim /etc/fstab</span><br><span class="line">将：</span><br><span class="line">/root/boot.iso    /media/cdrom     iso9660 defaults,loop 0 0</span><br><span class="line">添加至最后一行</span><br><span class="line">保存并退出</span><br><span class="line">mount -a</span><br></pre></td></tr></table></figure><h3 id="24-计划任务"><a href="#24-计划任务" class="headerlink" title="24.计划任务"></a>24.计划任务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">*/10 14-17 1-5 * * /usr/bin/<span class="built_in">echo</span> <span class="string">"I Love RHCE"</span></span><br><span class="line">保存并退出</span><br><span class="line">cat /etc/cron.allow</span><br><span class="line">systemctl restart crond</span><br><span class="line">systemctl <span class="built_in">enable</span> crond</span><br></pre></td></tr></table></figure><h3 id="25-防火墙"><a href="#25-防火墙" class="headerlink" title="25.防火墙"></a>25.防火墙</h3><p>systemctl stop firewalld.service<br>systemctl disable firewalld.service<br>systemctl mask firewalld.service<br>iptables -nvL<br>iptables -F<br>service iptables save</p><h3 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h3><p>如classroom.example.com不能访问<br>首先在本地主机远程172.25.254.254（172.25.0.254）<br>命令如下：<br>ssh <a href="mailto:root@172.25.254.254" target="_blank" rel="noopener">root@172.25.254.254</a><br>echo ‘NSSENforceValidCerts off’ &gt;&gt; /etc/httpd/conf.d/nss.conf<br>systemctl restart httpd</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-破解root密码&quot;&gt;&lt;a href=&quot;#1-破解root密码&quot; class=&quot;headerlink&quot; title=&quot;1.破解root密码&quot;&gt;&lt;/a&gt;1.破解root密码&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr
      
    
    </summary>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>linux基础练习</title>
    <link href="https://github.com/chineselijie/2019/08/29/15.linux--linux%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    <id>https://github.com/chineselijie/2019/08/29/15.linux--linux%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/</id>
    <published>2019-08-29T15:44:18.597Z</published>
    <updated>2019-08-22T12:15:00.687Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="关闭selinux，手工配置本地yum源"><a href="#关闭selinux，手工配置本地yum源" class="headerlink" title="关闭selinux，手工配置本地yum源"></a>关闭selinux，手工配置本地yum源</h3><h4 id="关闭SElinux："><a href="#关闭SElinux：" class="headerlink" title="关闭SElinux："></a>关闭SElinux：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># getenforce</span></span><br><span class="line">Enforcing</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># setenforce 0</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># getenforce</span></span><br><span class="line">Permissive</span><br><span class="line"><span class="comment"># 配置文件在：</span></span><br><span class="line">/etc/selinux/config</span><br></pre></td></tr></table></figure><h4 id="手工配置本地yum源"><a href="#手工配置本地yum源" class="headerlink" title="手工配置本地yum源:"></a>手工配置本地yum源:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@MR ~]<span class="comment"># cd /etc/yum.repos.d/</span></span><br><span class="line">[root@MR yum.repos.d]<span class="comment"># ls</span></span><br><span class="line">[root@MR dev]<span class="comment"># mkdir /mnt/cdrom</span></span><br><span class="line">[root@MR dev]<span class="comment"># mount /dev/sr0 /mnt/cdrom/</span></span><br><span class="line">mount: /dev/sr0 写保护，将以只读方式挂载</span><br><span class="line">[root@MR dev]<span class="comment"># vi /etc/fstab</span></span><br><span class="line">将/dev/sr0        /mnt/cdrom      iso9660   defaults    0    0</span><br><span class="line">写入到最后一行后保存并退出</span><br><span class="line">[root@MR dev]<span class="comment"># df -Th</span></span><br><span class="line">文件系统              类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/rhel-root xfs        18G  816M   17G    5% /</span><br><span class="line">devtmpfs              devtmpfs  908M     0  908M    0% /dev</span><br><span class="line">tmpfs                 tmpfs     914M     0  914M    0% /dev/shm</span><br><span class="line">tmpfs                 tmpfs     914M  8.6M  905M    1% /run</span><br><span class="line">tmpfs                 tmpfs     914M     0  914M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1             xfs       497M   96M  401M   20% /boot</span><br><span class="line">/dev/sr0              iso9660   3.5G  3.5G     0  100% /mnt/cdrom</span><br><span class="line"><span class="comment"># 此时/dev/sr0已经挂载到/mnt/cdrom</span></span><br><span class="line">[root@MR dev]<span class="comment"># cd /etc/yum.repos.d/</span></span><br><span class="line">[root@MR yum.repos.d]<span class="comment"># ls</span></span><br><span class="line">[root@MR yum.repos.d]<span class="comment"># vi bendiyum.repo</span></span><br><span class="line">将：</span><br><span class="line">[bendiyum]</span><br><span class="line">name=bendiyum</span><br><span class="line">baseurl=file:///mnt/cdrom</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">加入进去，保存并退出</span><br><span class="line">[root@MR yum.repos.d]<span class="comment"># yum clean all</span></span><br><span class="line">[root@MR yum.repos.d]<span class="comment"># yum list | wc -l</span></span><br><span class="line">4405</span><br><span class="line"><span class="comment"># 此时本地yum源成功搭建</span></span><br></pre></td></tr></table></figure><h3 id="安装vsftpd，并启动vsftpd服务"><a href="#安装vsftpd，并启动vsftpd服务" class="headerlink" title="安装vsftpd，并启动vsftpd服务"></a>安装vsftpd，并启动vsftpd服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@MR ~]<span class="comment"># yum -y install vsftopd</span></span><br><span class="line">[root@MR ~]<span class="comment"># systemctl start vsftpd</span></span><br></pre></td></tr></table></figure><h3 id="安装krb5-config命令"><a href="#安装krb5-config命令" class="headerlink" title="安装krb5-config命令"></a>安装krb5-config命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># yum provides krb5-config</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># yum -y install krb5-devel-1.11.3-49.el7.x86_64</span></span><br><span class="line">[root@zhoulijie /]<span class="comment"># krb5-config</span></span><br></pre></td></tr></table></figure><h3 id="使用rpm命令安装httpd软件，不解决依赖关系进行安装"><a href="#使用rpm命令安装httpd软件，不解决依赖关系进行安装" class="headerlink" title="使用rpm命令安装httpd软件，不解决依赖关系进行安装"></a>使用rpm命令安装httpd软件，不解决依赖关系进行安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">待解答</span><br></pre></td></tr></table></figure><h3 id="使用sed命令将网卡配置文件的ONBOOT-no-改为ONBOOT-yes"><a href="#使用sed命令将网卡配置文件的ONBOOT-no-改为ONBOOT-yes" class="headerlink" title="使用sed命令将网卡配置文件的ONBOOT=no 改为ONBOOT=yes"></a>使用sed命令将网卡配置文件的ONBOOT=no 改为ONBOOT=yes</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@MR network-scripts]<span class="comment"># cat -n /etc/sysconfig/network-scripts/ifcfg-eno16777736</span></span><br><span class="line">     1  HWADDR=<span class="string">"00:0C:29:B6:10:19"</span></span><br><span class="line">    ........(中间省略)</span><br><span class="line">    16  ONBOOT=<span class="string">"no"</span></span><br><span class="line">[root@MR network-scripts]<span class="comment"># sed '16c ONBOOT=“yes”' ifcfg-eno16777736</span></span><br><span class="line">HWADDR=<span class="string">"00:0C:29:B6:10:19"</span></span><br><span class="line">........(中间省略)</span><br><span class="line">ONBOOT=“yes<span class="string">"</span></span><br></pre></td></tr></table></figure><h3 id="备份-etc-shadow到-tmp-，保留其权限，使用sed命将此文件中的root替换为aaaabbbb，并对比-etc-shadow和-tmp-shadow两个文件的差别"><a href="#备份-etc-shadow到-tmp-，保留其权限，使用sed命将此文件中的root替换为aaaabbbb，并对比-etc-shadow和-tmp-shadow两个文件的差别" class="headerlink" title="备份/etc/shadow到/tmp ，保留其权限，使用sed命将此文件中的root替换为aaaabbbb，并对比/etc/shadow和/tmp/shadow两个文件的差别"></a>备份/etc/shadow到/tmp ，保留其权限，使用sed命将此文件中的root替换为aaaabbbb，并对比/etc/shadow和/tmp/shadow两个文件的差别</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@MR /]<span class="comment"># cp /etc/shadow /tmp</span></span><br><span class="line">[root@MR tmp]<span class="comment"># sed s/root/aaaabbbb/ /tmp/shadow</span></span><br></pre></td></tr></table></figure><h3 id="添加用户：user1，并为文件-tmp-shadow文件添加user1的ACL，权限为读和执行-并把user1加入root组"><a href="#添加用户：user1，并为文件-tmp-shadow文件添加user1的ACL，权限为读和执行-并把user1加入root组" class="headerlink" title="添加用户：user1，并为文件/tmp/shadow文件添加user1的ACL，权限为读和执行,并把user1加入root组"></a>添加用户：user1，并为文件/tmp/shadow文件添加user1的ACL，权限为读和执行,并把user1加入root组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@MR home]<span class="comment"># useradd -G root user1</span></span><br><span class="line">[root@MR home]<span class="comment"># id user1</span></span><br><span class="line">uid=1000(user1) gid=1000(user1) 组=1000(user1),0(root)</span><br></pre></td></tr></table></figure><h3 id="使用find命令找出系统中所有属于user1的文件"><a href="#使用find命令找出系统中所有属于user1的文件" class="headerlink" title="使用find命令找出系统中所有属于user1的文件"></a>使用find命令找出系统中所有属于user1的文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@MR home]<span class="comment"># find -name user1</span></span><br><span class="line">./user1</span><br></pre></td></tr></table></figure><h3 id="使用find命令找出-boot目录下所有目录文件，然后统计目录的个数"><a href="#使用find命令找出-boot目录下所有目录文件，然后统计目录的个数" class="headerlink" title="使用find命令找出/boot目录下所有目录文件，然后统计目录的个数"></a>使用find命令找出/boot目录下所有目录文件，然后统计目录的个数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@MR home]<span class="comment"># find /boot -type d | wc -l</span></span><br><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="查找系统中小于10M的文件并打印显示"><a href="#查找系统中小于10M的文件并打印显示" class="headerlink" title="查找系统中小于10M的文件并打印显示"></a>查找系统中小于10M的文件并打印显示</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@MR home]<span class="comment"># find -size -10M -print</span></span><br><span class="line">.</span><br><span class="line">./user1</span><br><span class="line">./user1/.bash_logout</span><br><span class="line">./user1/.bash_profile</span><br><span class="line">./user1/.bashrc</span><br></pre></td></tr></table></figure><h3 id="使用rpm命令列出vsftpd的所有doc-man文档"><a href="#使用rpm命令列出vsftpd的所有doc-man文档" class="headerlink" title="使用rpm命令列出vsftpd的所有doc/man文档"></a>使用rpm命令列出vsftpd的所有doc/man文档</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie /]<span class="comment"># rpm -qd vsftpd</span></span><br></pre></td></tr></table></figure><h3 id="手工创建用户user2-要求有家目录，完整的登陆提示符"><a href="#手工创建用户user2-要求有家目录，完整的登陆提示符" class="headerlink" title="手工创建用户user2 ,要求有家目录，完整的登陆提示符"></a>手工创建用户user2 ,要求有家目录，完整的登陆提示符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@MR home]<span class="comment"># useradd user2 -d /home/user2</span></span><br></pre></td></tr></table></figure><h3 id="手工创建用户user9-要求没有家目录，不允许登录"><a href="#手工创建用户user9-要求没有家目录，不允许登录" class="headerlink" title="手工创建用户user9 ,要求没有家目录，不允许登录"></a>手工创建用户user9 ,要求没有家目录，不允许登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@MR home]<span class="comment"># useradd user9 -M -s /sbin/nologin</span></span><br></pre></td></tr></table></figure><blockquote><p>验证以上两题</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@MR home]<span class="comment"># ls /home</span></span><br><span class="line">user1  user2</span><br><span class="line">[root@MR home]<span class="comment"># cat /etc/passwd</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">.....(中间省略)</span><br><span class="line">user1:x:1000:1000::/home/user1:/bin/bash</span><br><span class="line">user2:x:1001:1001::/home/user2:/bin/bash</span><br><span class="line">user9:x:1002:1002::/home/user9:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="修改user2的登陆shell为nologin-，并测试是否能登录"><a href="#修改user2的登陆shell为nologin-，并测试是否能登录" class="headerlink" title="修改user2的登陆shell为nologin ，并测试是否能登录"></a>修改user2的登陆shell为nologin ，并测试是否能登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不可以登陆</span></span><br><span class="line">[root@MR home]<span class="comment"># vim /etc/passwd</span></span><br><span class="line">按<span class="string">'i'</span>切换到user2 修改/bin/bash为/sbin/nologin</span><br><span class="line">保存并退出</span><br><span class="line">[root@MR home]<span class="comment"># su user2</span></span><br><span class="line">This account is currently not available.</span><br></pre></td></tr></table></figure><h3 id="查看根分区大小，并取出根分区使用率赋值给root-disk变量。例如：root-disk-55-（55-是根分区使用率）"><a href="#查看根分区大小，并取出根分区使用率赋值给root-disk变量。例如：root-disk-55-（55-是根分区使用率）" class="headerlink" title="查看根分区大小，并取出根分区使用率赋值给root_disk变量。例如：root_disk=55%（55%是根分区使用率）"></a>查看根分区大小，并取出根分区使用率赋值给root_disk变量。例如：root_disk=55%（55%是根分区使用率）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># df | grep /$ | awk '&#123;print $5&#125;'</span></span><br></pre></td></tr></table></figure><h3 id="查看-etc-passwd-的6-9行内容"><a href="#查看-etc-passwd-的6-9行内容" class="headerlink" title="查看/etc/passwd 的6-9行内容"></a>查看/etc/passwd 的6-9行内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># sed -n '6,9p' /etc/passwd</span></span><br></pre></td></tr></table></figure><h3 id="以树状的形式显示-etc-security-目录，提交命令和结果"><a href="#以树状的形式显示-etc-security-目录，提交命令和结果" class="headerlink" title="以树状的形式显示/etc/security/目录，提交命令和结果"></a>以树状的形式显示/etc/security/目录，提交命令和结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@MR home]<span class="comment"># yum -y install tree</span></span><br><span class="line">[root@MR home]<span class="comment"># tree /etc/security/</span></span><br><span class="line">/etc/security/</span><br><span class="line">├── access.conf</span><br><span class="line">├── chroot.conf</span><br><span class="line">├── console.apps</span><br><span class="line">│   ├── config-util</span><br><span class="line">│   ├── rhn_register</span><br><span class="line">│   └── subscription-manager</span><br><span class="line">├── console.handlers</span><br><span class="line">├── console.perms</span><br><span class="line">├── console.perms.d</span><br><span class="line">├── group.conf</span><br><span class="line">├── limits.conf</span><br><span class="line">├── limits.d</span><br><span class="line">│   └── 20-nproc.conf</span><br><span class="line">├── namespace.conf</span><br><span class="line">├── namespace.d</span><br><span class="line">├── namespace.init</span><br><span class="line">├── opasswd</span><br><span class="line">├── pam_env.conf</span><br><span class="line">├── pwquality.conf</span><br><span class="line">├── sepermit.conf</span><br><span class="line">└── time.conf</span><br><span class="line"></span><br><span class="line">4 directories, 17 files</span><br></pre></td></tr></table></figure><h3 id="给网卡添加一个临时ip-172-16-12-22-24"><a href="#给网卡添加一个临时ip-172-16-12-22-24" class="headerlink" title="给网卡添加一个临时ip 172.16.12.22/24"></a>给网卡添加一个临时ip 172.16.12.22/24</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">图形界面右上角--网卡设置--添加网卡</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">ifconfig ens33:5 172.16.12.22 netmask 255.255.255.0</span><br></pre></td></tr></table></figure><h3 id="切换到tty2虚拟终端，并查看当前终端是哪个终端"><a href="#切换到tty2虚拟终端，并查看当前终端是哪个终端" class="headerlink" title="切换到tty2虚拟终端，并查看当前终端是哪个终端"></a>切换到tty2虚拟终端，并查看当前终端是哪个终端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@MR ~]<span class="comment"># who</span></span><br><span class="line">root      pts/0        2019-03-08 14:54 (192.168.233.1)</span><br><span class="line">root     pts/1        2019-03-08 16:40 (192.168.233.1)</span><br></pre></td></tr></table></figure><h3 id="怎样找出fdisk命令的绝对路径"><a href="#怎样找出fdisk命令的绝对路径" class="headerlink" title="怎样找出fdisk命令的绝对路径"></a>怎样找出fdisk命令的绝对路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@MR ~]<span class="comment"># which fdisk</span></span><br><span class="line">/usr/sbin/fdisk</span><br></pre></td></tr></table></figure><h3 id="通过命令行重启系统有哪些方法"><a href="#通过命令行重启系统有哪些方法" class="headerlink" title="通过命令行重启系统有哪些方法"></a>通过命令行重启系统有哪些方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="如何在命令行中快速删除光标前的内容？"><a href="#如何在命令行中快速删除光标前的内容？" class="headerlink" title="如何在命令行中快速删除光标前的内容？"></a>如何在命令行中快速删除光标前的内容？</h3><p>ctrl+U</p><h3 id="如何在命令行中快速删除光标后的内容？"><a href="#如何在命令行中快速删除光标后的内容？" class="headerlink" title="如何在命令行中快速删除光标后的内容？"></a>如何在命令行中快速删除光标后的内容？</h3><p>ctrl+K</p><h3 id="拷贝-etc-passwd文件到本地，并且设置其权限为属主有读写执行权限，属组有读写权限，其他帐户没有权限"><a href="#拷贝-etc-passwd文件到本地，并且设置其权限为属主有读写执行权限，属组有读写权限，其他帐户没有权限" class="headerlink" title="拷贝/etc/passwd文件到本地，并且设置其权限为属主有读写执行权限，属组有读写权限，其他帐户没有权限"></a>拷贝/etc/passwd文件到本地，并且设置其权限为属主有读写执行权限，属组有读写权限，其他帐户没有权限</h3><blockquote><p>cp /etc/passwd .</p><p>chmod 760 passwd</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># cp /etc/passwd .</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># chmod 760 passwd</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># ls -l</span></span><br><span class="line">total 11</span><br><span class="line">-rwxrw---- 1 root root 956 Apr  6 23:30 passwd</span><br></pre></td></tr></table></figure><h3 id="删除-tmp下所有s开头的文件"><a href="#删除-tmp下所有s开头的文件" class="headerlink" title="删除/tmp下所有s开头的文件"></a>删除/tmp下所有s开头的文件</h3><blockquote><p>rm -rf  /tmp/s*</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ls /tmp</span></span><br><span class="line">Aegis-&lt;Guid(5A2C30A2-A87D-490A-9281-6765EDAD7CBA)&gt;  s123</span><br><span class="line">CmsGoAgent.pid                                      ssfasf</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># rm -rf /tmp/s*</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># ls /tmp</span></span><br><span class="line">Aegis-&lt;Guid(5A2C30A2-A87D-490A-9281-6765EDAD7CBA)&gt;  CmsGoAgent.pid</span><br></pre></td></tr></table></figure><h3 id="把-etc目录复制到-tmp下并保持原属性不变"><a href="#把-etc目录复制到-tmp下并保持原属性不变" class="headerlink" title="把/etc目录复制到/tmp下并保持原属性不变"></a>把/etc目录复制到/tmp下并保持原属性不变</h3><blockquote><p>cp -r -p /etc /tmp/</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[tom@zhoulijie /]$ cp -r -p /etc /tmp/</span><br><span class="line">[tom@zhoulijie /]$ ls /tmp</span><br><span class="line">Aegis-&lt;Guid(5A2C30A2-A87D-490A-9281-6765EDAD7CBA)&gt;  CmsGoAgent.pid  etc</span><br></pre></td></tr></table></figure><h3 id="把-tmp-etc-man-db-conf移动到-tmp下并改名为test-conf且设置所有人都有读写执行权限"><a href="#把-tmp-etc-man-db-conf移动到-tmp下并改名为test-conf且设置所有人都有读写执行权限" class="headerlink" title="把/tmp/etc/man_db.conf移动到/tmp下并改名为test.conf且设置所有人都有读写执行权限"></a>把/tmp/etc/man_db.conf移动到/tmp下并改名为test.conf且设置所有人都有读写执行权限</h3><blockquote><p>mv /tmp/etc/man_db.conf /tmp/ test.conf</p><p>chmod 777 test.conf</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@MR /]<span class="comment"># mv /tmp/etc/man_db.conf /tmp/test.conf</span></span><br><span class="line">[root@MR tmp]<span class="comment"># chmod 777 test.conf</span></span><br><span class="line">[root@MR tmp]<span class="comment"># ls -l test.conf</span></span><br><span class="line">-rwxrwxrwx. 1 root root 5171 3月  18 2014 test.conf</span><br></pre></td></tr></table></figure><h3 id="创建用户tom、创建组jerry，修改-tmp-test-conf的属主为tom-属组为jerry"><a href="#创建用户tom、创建组jerry，修改-tmp-test-conf的属主为tom-属组为jerry" class="headerlink" title="创建用户tom、创建组jerry，修改/tmp/test.conf的属主为tom,属组为jerry"></a>创建用户tom、创建组jerry，修改/tmp/test.conf的属主为tom,属组为jerry</h3><blockquote><p>useradd tom</p><p>groupadd jerry</p><p>chown -R tom:jerry /tmp/test.conf</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@MR ~]<span class="comment"># useradd tom</span></span><br><span class="line">[root@MR ~]<span class="comment"># groupadd jerry</span></span><br><span class="line">[root@MR ~]<span class="comment"># chown -R tom:jerry /tmp/test.conf</span></span><br><span class="line">[root@MR ~]<span class="comment"># ls -l /tmp/test.conf</span></span><br><span class="line">-rwxrwxrwx. 1 tom jerry 5171 3月  18 2014 /tmp/test.conf</span><br></pre></td></tr></table></figure><h3 id="删除用户tom和组jerry"><a href="#删除用户tom和组jerry" class="headerlink" title="删除用户tom和组jerry"></a>删除用户tom和组jerry</h3><blockquote><p>userdel -r tom</p><p>groupdel jerry</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@MR ~]<span class="comment"># userdel -r tom</span></span><br><span class="line">[root@MR ~]<span class="comment"># groupdel jerry</span></span><br></pre></td></tr></table></figure><h3 id="使用find命令找出当前系统中没有属主或属组的所有文件并打印显示"><a href="#使用find命令找出当前系统中没有属主或属组的所有文件并打印显示" class="headerlink" title="使用find命令找出当前系统中没有属主或属组的所有文件并打印显示"></a>使用find命令找出当前系统中没有属主或属组的所有文件并打印显示</h3><blockquote><p>find  -nouser -nogroup</p><p> -nouser 查找没有属主的文件</p><p>-nogroup 查找没有属组的文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie /]<span class="comment"># find  -nouser -nogroup</span></span><br><span class="line">find: ‘./proc/2673/task/2673/fd/6’: 没有那个文件或目录</span><br><span class="line">find: ‘./proc/2673/task/2673/fdinfo/6’: 没有那个文件或目录</span><br><span class="line">find: ‘./proc/2673/fd/6’: 没有那个文件或目录</span><br><span class="line">find: ‘./proc/2673/fdinfo/6’: 没有那个文件或目录</span><br><span class="line">./tmp/test.conf</span><br><span class="line">./home/wangqing</span><br><span class="line">./home/wangqing/.bash_logout</span><br><span class="line">./home/wangqing/.bash_profile</span><br><span class="line">./home/wangqing/.bashrc</span><br></pre></td></tr></table></figure><h3 id="统计当前系统中一共有多少帐户"><a href="#统计当前系统中一共有多少帐户" class="headerlink" title="统计当前系统中一共有多少帐户"></a>统计当前系统中一共有多少帐户</h3><blockquote><p>wc -l /etc/passwd</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie /]<span class="comment"># wc -l /etc/passwd</span></span><br><span class="line">24 /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="查看-etc-passwd的前3行和尾3行内容"><a href="#查看-etc-passwd的前3行和尾3行内容" class="headerlink" title="查看/etc/passwd的前3行和尾3行内容"></a>查看/etc/passwd的前3行和尾3行内容</h3><blockquote><p>head -n 3 /etc/passwd</p><p>tail -n 3 /etc/passwd</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie /]<span class="comment"># head -n 3 /etc/passwd</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">[root@zhoulijie /]<span class="comment"># tail -n 3 /etc/passwd</span></span><br><span class="line">wangqing:x:1004:7780:wu liang tian zun:/home/wangqing:/bin/csh</span><br><span class="line">openstack:x:1005:1005::/home/openstack:/bin/bash</span><br><span class="line">runtime:x:1006:1006::/home/runtime:/bin/bash</span><br></pre></td></tr></table></figure><h3 id="查看-etc-passwd的第10行内容"><a href="#查看-etc-passwd的第10行内容" class="headerlink" title="查看/etc/passwd的第10行内容"></a>查看/etc/passwd的第10行内容</h3><blockquote><p>awk “NR==10” /etc/passwd</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie /]<span class="comment"># awk "NR==10" /etc/passwd</span></span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="一条命令创建test-1-2-3-4-5目录"><a href="#一条命令创建test-1-2-3-4-5目录" class="headerlink" title="一条命令创建test/1/2/3/4/5目录"></a>一条命令创建test/1/2/3/4/5目录</h3><blockquote><p>mkdir -p test/1/2/3/4/5</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># mkdir -p test/1/2/3/4/5</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># tree test/</span></span><br><span class="line"><span class="built_in">test</span>/</span><br><span class="line">└── 1</span><br><span class="line">    └── 2</span><br><span class="line">        └── 3</span><br><span class="line">            └── 4</span><br><span class="line">                └── 5</span><br><span class="line"></span><br><span class="line">5 directories, 0 files</span><br></pre></td></tr></table></figure><h3 id="如何快速回到当前登录用户的家目录"><a href="#如何快速回到当前登录用户的家目录" class="headerlink" title="如何快速回到当前登录用户的家目录"></a>如何快速回到当前登录用户的家目录</h3><blockquote><p>cd</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie tmp]<span class="comment"># cd</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># pwd</span></span><br><span class="line">/root</span><br></pre></td></tr></table></figure><h3 id="如何只查看-etc单个目录的信息并以长格式显示"><a href="#如何只查看-etc单个目录的信息并以长格式显示" class="headerlink" title="如何只查看/etc单个目录的信息并以长格式显示"></a>如何只查看/etc单个目录的信息并以长格式显示</h3><blockquote><p>ll -d /etc</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie /]<span class="comment"># ll -d /etc</span></span><br><span class="line">drwxr-xr-x. 76 root root 8192 4月   7 23:35 /etc</span><br></pre></td></tr></table></figure><h3 id="查看-etc-所占的磁盘空间"><a href="#查看-etc-所占的磁盘空间" class="headerlink" title="查看/etc/所占的磁盘空间"></a>查看/etc/所占的磁盘空间</h3><blockquote><p>du -sh /etc</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie /]<span class="comment"># du -sh /etc</span></span><br><span class="line">20M     /etc</span><br></pre></td></tr></table></figure><h3 id="结合ls与grep命令打印出-tmp-etc目录下的所有目录文件"><a href="#结合ls与grep命令打印出-tmp-etc目录下的所有目录文件" class="headerlink" title="结合ls与grep命令打印出/tmp/etc目录下的所有目录文件"></a>结合ls与grep命令打印出/tmp/etc目录下的所有目录文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ls -l /tmp/etc |grep  ^d</span></span><br></pre></td></tr></table></figure><h3 id="删除-tmp下所有的文件"><a href="#删除-tmp下所有的文件" class="headerlink" title="删除/tmp下所有的文件"></a>删除/tmp下所有的文件</h3><blockquote><p>rm -rf /tmp/*</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie /]<span class="comment"># rm -rf /tmp/*</span></span><br><span class="line">[root@zhoulijie /]<span class="comment"># ls /tmp</span></span><br><span class="line">[root@zhoulijie /]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="临时设置系统主机名并重启验证"><a href="#临时设置系统主机名并重启验证" class="headerlink" title="临时设置系统主机名并重启验证"></a>临时设置系统主机名并重启验证</h3><blockquote><p>hostname 123</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@MR ~]<span class="comment"># hostname 123</span></span><br><span class="line">[root@MR ~]<span class="comment"># bash</span></span><br><span class="line">[root@123 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="永久设置系统主机名并重启验证"><a href="#永久设置系统主机名并重启验证" class="headerlink" title="永久设置系统主机名并重启验证"></a>永久设置系统主机名并重启验证</h3><blockquote><p>vim /etc/hostname</p><p>输入zhoulijie</p><p>保存并退出</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@MR ~]<span class="comment"># vim /etc/hostname</span></span><br><span class="line">[root@MR ~]<span class="comment"># bash</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="将系统时间设置为2008-05-10-00-12-13并验证"><a href="#将系统时间设置为2008-05-10-00-12-13并验证" class="headerlink" title="将系统时间设置为2008-05-10 00:12:13并验证"></a>将系统时间设置为2008-05-10 00:12:13并验证</h3><blockquote><p>date -s “2008-05-10 00:12:13”</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@MR ~]<span class="comment"># date -s "2008-05-10 00:12:13"</span></span><br><span class="line">2008年 05月 10日 星期六 00:12:13 CST</span><br><span class="line">[root@MR ~]<span class="comment"># date</span></span><br><span class="line">2008年 05月 10日 星期六 00:12:44 CST</span><br></pre></td></tr></table></figure><h3 id="使用ntpdate同步互联网时间"><a href="#使用ntpdate同步互联网时间" class="headerlink" title="使用ntpdate同步互联网时间"></a>使用ntpdate同步互联网时间</h3><blockquote><p>ntpdate time1.aliyun.com</p><p>如果没有就使用yum安装</p><p>yum install ntpdate -y</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment">#ntpdate time1.aliyun.com</span></span><br><span class="line">11 Apr 17:37:29 ntpdate[7400]: step time server 119.28.183.184 offset 199144.735638 sec</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># date</span></span><br><span class="line">2019年 04月 11日 星期四 17:37:34 CST</span><br></pre></td></tr></table></figure><h3 id="统计出-etc-passwd文件有多少单词和字符"><a href="#统计出-etc-passwd文件有多少单词和字符" class="headerlink" title="统计出/etc/passwd文件有多少单词和字符"></a>统计出/etc/passwd文件有多少单词和字符</h3><blockquote><p>wc -w -c /etc/passwd</p><p>-w 只显示单词数</p><p>-c 只显示字节数</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@MR ~]<span class="comment"># wc -w -c /etc/passwd</span></span><br><span class="line">  37 1116 /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="添加一个计划任务，在每周6凌晨1点35分备份-etc目录到-tmp目录下，要求备份的文件必须是打包好的，名字为etc-tar-xz"><a href="#添加一个计划任务，在每周6凌晨1点35分备份-etc目录到-tmp目录下，要求备份的文件必须是打包好的，名字为etc-tar-xz" class="headerlink" title="添加一个计划任务，在每周6凌晨1点35分备份/etc目录到/tmp目录下，要求备份的文件必须是打包好的，名字为etc.tar.xz"></a>添加一个计划任务，在每周6凌晨1点35分备份/etc目录到/tmp目录下，要求备份的文件必须是打包好的，名字为etc.tar.xz</h3><blockquote><p>crontab -e  编辑计划任务</p><p>crontab -l    查看计划任务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@lzy tmp]<span class="comment"># crontab -e</span></span><br><span class="line">no crontab <span class="keyword">for</span> root - using an empty one</span><br><span class="line">crontab: installing new crontab</span><br><span class="line">[root@lzy tmp]<span class="comment"># crontab -l</span></span><br><span class="line">35 1 * * 6  /usr/bin/tar -jcf etc.tar.xz /etc/* &amp;&amp; cp -r -p etc.tar.xz /tmp/</span><br></pre></td></tr></table></figure><h3 id="Linux如何挂载windows下的共享目录？"><a href="#Linux如何挂载windows下的共享目录？" class="headerlink" title="Linux如何挂载windows下的共享目录？"></a>Linux如何挂载windows下的共享目录？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount.cifs //IP地址/server /mnt/server -o user=administrator,password=123456</span><br><span class="line">linux 下的server需要自己手动建一个 后面的user与pass 是windows主机的账号和密码 注意空格 和逗号</span><br></pre></td></tr></table></figure><h3 id="统计linux中TCP各连接状态的数量？"><a href="#统计linux中TCP各连接状态的数量？" class="headerlink" title="统计linux中TCP各连接状态的数量？"></a>统计linux中TCP各连接状态的数量？</h3><h3 id="请简述符号链接与硬链接的区别？"><a href="#请简述符号链接与硬链接的区别？" class="headerlink" title="请简述符号链接与硬链接的区别？"></a>请简述符号链接与硬链接的区别？</h3><h3 id="如何在文本里面进行复制、粘贴，删除行，删除全部，按行查找和按字母查找？"><a href="#如何在文本里面进行复制、粘贴，删除行，删除全部，按行查找和按字母查找？" class="headerlink" title="如何在文本里面进行复制、粘贴，删除行，删除全部，按行查找和按字母查找？"></a>如何在文本里面进行复制、粘贴，删除行，删除全部，按行查找和按字母查找？</h3><h3 id="请简述ftp的主动模式与被动模式工作过程"><a href="#请简述ftp的主动模式与被动模式工作过程" class="headerlink" title="请简述ftp的主动模式与被动模式工作过程"></a>请简述ftp的主动模式与被动模式工作过程</h3><h3 id="如何过滤出-runtime中的所有一级目录-不包含子目录，即只能是一级目录"><a href="#如何过滤出-runtime中的所有一级目录-不包含子目录，即只能是一级目录" class="headerlink" title="如何过滤出/runtime中的所有一级目录(不包含子目录，即只能是一级目录)"></a>如何过滤出/runtime中的所有一级目录(不包含子目录，即只能是一级目录)</h3><h3 id="如何查看-etc-目录下最近更新的5个文件？"><a href="#如何查看-etc-目录下最近更新的5个文件？" class="headerlink" title="如何查看/etc/目录下最近更新的5个文件？"></a>如何查看/etc/目录下最近更新的5个文件？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@MR etc]<span class="comment"># ls -lt | head -n 6</span></span><br><span class="line">总用量 1108</span><br><span class="line">----------.  1 root root    361 3月   8 19:55 gshadow</span><br><span class="line">-rw-r--r--.  1 root root    455 3月   8 19:55 group</span><br><span class="line">----------.  1 root root    608 3月   8 19:55 shadow</span><br><span class="line">-rw-r--r--.  1 root root    922 3月   8 19:55 passwd</span><br><span class="line">-rw-r--r--.  1 root root    469 3月   8 19:55 group-</span><br></pre></td></tr></table></figure><h3 id="已知apache服务的访问日志按天记录在服务器本地目录-app-logs下，由于磁盘空间紧张，现在要求只能保留最近7天访问日志！请问如何解决？"><a href="#已知apache服务的访问日志按天记录在服务器本地目录-app-logs下，由于磁盘空间紧张，现在要求只能保留最近7天访问日志！请问如何解决？" class="headerlink" title="已知apache服务的访问日志按天记录在服务器本地目录/app/logs下，由于磁盘空间紧张，现在要求只能保留最近7天访问日志！请问如何解决？"></a>已知apache服务的访问日志按天记录在服务器本地目录/app/logs下，由于磁盘空间紧张，现在要求只能保留最近7天访问日志！请问如何解决？</h3><h3 id="如何打印配置文件nginx-conf的行号及内容？"><a href="#如何打印配置文件nginx-conf的行号及内容？" class="headerlink" title="如何打印配置文件nginx.conf的行号及内容？"></a>如何打印配置文件nginx.conf的行号及内容？</h3><h3 id="调试系统服务时，希望能实时查看系统日志-var-log-messages的更新，如何做？"><a href="#调试系统服务时，希望能实时查看系统日志-var-log-messages的更新，如何做？" class="headerlink" title="调试系统服务时，希望能实时查看系统日志/var/log/messages的更新，如何做？"></a>调试系统服务时，希望能实时查看系统日志/var/log/messages的更新，如何做？</h3><h3 id="如何查看-etc-services文件有多少行？"><a href="#如何查看-etc-services文件有多少行？" class="headerlink" title="如何查看/etc/services文件有多少行？"></a>如何查看/etc/services文件有多少行？</h3><h3 id="分别使用ifconfig和ip命令取出当前主机的ip地址"><a href="#分别使用ifconfig和ip命令取出当前主机的ip地址" class="headerlink" title="分别使用ifconfig和ip命令取出当前主机的ip地址"></a>分别使用ifconfig和ip命令取出当前主机的ip地址</h3><h3 id="如何将-etc-fstab中的权限取出来，以数字644这样的形式打印"><a href="#如何将-etc-fstab中的权限取出来，以数字644这样的形式打印" class="headerlink" title="如何将/etc/fstab中的权限取出来，以数字644这样的形式打印"></a>如何将/etc/fstab中的权限取出来，以数字644这样的形式打印</h3><h3 id="打印出-etc-fstab文件中除掉空行和注释的内容"><a href="#打印出-etc-fstab文件中除掉空行和注释的内容" class="headerlink" title="打印出/etc/fstab文件中除掉空行和注释的内容"></a>打印出/etc/fstab文件中除掉空行和注释的内容</h3><h3 id="用date命令打印3天前的日期，如：2018-10-10"><a href="#用date命令打印3天前的日期，如：2018-10-10" class="headerlink" title="用date命令打印3天前的日期，如：2018-10-10"></a>用date命令打印3天前的日期，如：2018-10-10</h3><h3 id="将目录-etc-a下除了b文件外的所有文件压缩打包放到-tmp-a下，名字为a-gz"><a href="#将目录-etc-a下除了b文件外的所有文件压缩打包放到-tmp-a下，名字为a-gz" class="headerlink" title="将目录/etc/a下除了b文件外的所有文件压缩打包放到/tmp/a下，名字为a.gz"></a>将目录/etc/a下除了b文件外的所有文件压缩打包放到/tmp/a下，名字为a.gz</h3><h3 id="什么是umask？umask-022代表什么意思？"><a href="#什么是umask？umask-022代表什么意思？" class="headerlink" title="什么是umask？umask=022代表什么意思？"></a>什么是umask？umask=022代表什么意思？</h3><h3 id="ftp、http、https、smtp、pop3、ssh、dns的端口号"><a href="#ftp、http、https、smtp、pop3、ssh、dns的端口号" class="headerlink" title="ftp、http、https、smtp、pop3、ssh、dns的端口号"></a>ftp、http、https、smtp、pop3、ssh、dns的端口号</h3><h3 id="如何在不停止进程的情况下清空日志-var-log-a-log？"><a href="#如何在不停止进程的情况下清空日志-var-log-a-log？" class="headerlink" title="如何在不停止进程的情况下清空日志/var/log/a.log？"></a>如何在不停止进程的情况下清空日志/var/log/a.log？</h3><h3 id="如何在-usr目录下找出大小超过10MB的文件？"><a href="#如何在-usr目录下找出大小超过10MB的文件？" class="headerlink" title="如何在/usr目录下找出大小超过10MB的文件？"></a>如何在/usr目录下找出大小超过10MB的文件？</h3><h3 id="如何在-var目录下找出90天之内未被访问过的文件？"><a href="#如何在-var目录下找出90天之内未被访问过的文件？" class="headerlink" title="如何在/var目录下找出90天之内未被访问过的文件？"></a>如何在/var目录下找出90天之内未被访问过的文件？</h3><h3 id="ll-awk-‘-print-3-”owns”-9-’-这条命令是在做什么？"><a href="#ll-awk-‘-print-3-”owns”-9-’-这条命令是在做什么？" class="headerlink" title="ll | awk ‘{print (3,”owns”,)9}’ 这条命令是在做什么？"></a>ll | awk ‘{print (3,”owns”,)9}’ 这条命令是在做什么？</h3><h3 id="给你50台Linux系统如何安装呢？如何实现，步骤是什么？"><a href="#给你50台Linux系统如何安装呢？如何实现，步骤是什么？" class="headerlink" title="给你50台Linux系统如何安装呢？如何实现，步骤是什么？"></a>给你50台Linux系统如何安装呢？如何实现，步骤是什么？</h3><h3 id="用虚拟机安装了一台Linux系统，突然想克隆一台服务器，克隆后发现无法上网，如何解决？"><a href="#用虚拟机安装了一台Linux系统，突然想克隆一台服务器，克隆后发现无法上网，如何解决？" class="headerlink" title="用虚拟机安装了一台Linux系统，突然想克隆一台服务器，克隆后发现无法上网，如何解决？"></a>用虚拟机安装了一台Linux系统，突然想克隆一台服务器，克隆后发现无法上网，如何解决？</h3><h3 id="Linux网卡配置文件路径是什么？要使服务器上外网，必须满足的条件有哪些？需要配置什么？"><a href="#Linux网卡配置文件路径是什么？要使服务器上外网，必须满足的条件有哪些？需要配置什么？" class="headerlink" title="Linux网卡配置文件路径是什么？要使服务器上外网，必须满足的条件有哪些？需要配置什么？"></a>Linux网卡配置文件路径是什么？要使服务器上外网，必须满足的条件有哪些？需要配置什么？</h3><h3 id="查找当前目录下30天以前-log结尾的大于1G的文件，并把它移动到-tmp下"><a href="#查找当前目录下30天以前-log结尾的大于1G的文件，并把它移动到-tmp下" class="headerlink" title="查找当前目录下30天以前.log结尾的大于1G的文件，并把它移动到/tmp下"></a>查找当前目录下30天以前.log结尾的大于1G的文件，并把它移动到/tmp下</h3><h3 id="查看某个端口是否已经启动，以及查看端口做占用的PID进程号"><a href="#查看某个端口是否已经启动，以及查看端口做占用的PID进程号" class="headerlink" title="查看某个端口是否已经启动，以及查看端口做占用的PID进程号"></a>查看某个端口是否已经启动，以及查看端口做占用的PID进程号</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>LVM磁盘管理</title>
    <link href="https://github.com/chineselijie/2019/08/29/14.linux--LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    <id>https://github.com/chineselijie/2019/08/29/14.linux--LVM%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/</id>
    <published>2019-08-29T15:44:18.595Z</published>
    <updated>2019-08-22T12:07:02.672Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[TOC]</p><h2 id="lvm的应用场景及其弊端"><a href="#lvm的应用场景及其弊端" class="headerlink" title="lvm的应用场景及其弊端"></a>lvm的应用场景及其弊端</h2><p>应用场景：<br>随着公司的发展，数据增长较快，最初规划的磁盘容量不够用了</p><p>弊端：<br>数据不是直接存放在硬盘上，而是在硬盘的上面又虚拟出来一层逻辑卷存放数据，故而增加了磁盘数据恢复的难度</p><h2 id="物理卷、卷组、逻辑卷"><a href="#物理卷、卷组、逻辑卷" class="headerlink" title="物理卷、卷组、逻辑卷"></a>物理卷、卷组、逻辑卷</h2><p><img src="https://s2.ax1x.com/2019/04/30/EGTBAs.jpg" alt></p><p>物理卷(pv)：把常规的块设备（硬盘，分区等可以读写数据的设备）通过pvcreate命令对其进行初始化，就成了物理卷</p><p>卷组(VG)：把多个物理卷的容量组成一个逻辑整体，可以从里面灵活分配容量</p><p>逻辑卷(LV)：从卷组中划分部分空间成为一个可以读写数据的逻辑单元。需要对其格式化然后挂载使用</p><h2 id="lvm管理"><a href="#lvm管理" class="headerlink" title="lvm管理"></a>lvm管理</h2><h4 id="部署lvm"><a href="#部署lvm" class="headerlink" title="部署lvm"></a>部署lvm</h4><blockquote><p> LVM部署有装系统前部署以及装系统后部署，此处仅介绍装系统后部署。</p></blockquote><p>创建lvm步骤：</p><ul><li><p>首先添加物理磁盘</p></li><li><p>然后创建卷组，将物理卷加入到卷组</p></li><li><p>然后在卷组中划分逻辑分区</p></li><li><p>其次执行格式化逻辑卷</p></li><li><p>最后挂载使用</p></li></ul><h6 id="准备物理磁盘"><a href="#准备物理磁盘" class="headerlink" title="准备物理磁盘"></a>准备物理磁盘</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># lsblk | grep sd[bcd]</span></span><br><span class="line">sdb             8:16   0   20G  0 disk</span><br><span class="line">sdc             8:32   0   20G  0 disk</span><br><span class="line">sdd             8:48   0   20G  0 disk</span><br></pre></td></tr></table></figure><h6 id="将磁盘加入pv"><a href="#将磁盘加入pv" class="headerlink" title="将磁盘加入pv"></a>将磁盘加入pv</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># pvcreate /dev/sdb</span></span><br><span class="line">  Physical volume <span class="string">"/dev/sdb"</span> successfully created.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查pv创建情况</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG   Fmt  Attr PSize   PFree</span><br><span class="line">  /dev/sda2  rhel lvm2 a--  &lt;19.00g     0</span><br><span class="line">  /dev/sdb        lvm2 ---   20.00g 20.00g</span><br></pre></td></tr></table></figure><h6 id="创建名为zhou的卷组"><a href="#创建名为zhou的卷组" class="headerlink" title="创建名为zhou的卷组"></a>创建名为zhou的卷组</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># vgcreate zhou /dev/sdb</span></span><br><span class="line">  Volume group <span class="string">"zhou"</span> successfully created</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查卷组</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># vgs</span></span><br><span class="line">  VG   <span class="comment">#PV #LV #SN Attr   VSize   VFree</span></span><br><span class="line">  rhel   1   2   0 wz--n- &lt;19.00g      0</span><br><span class="line">  zhou   1   0   0 wz--n- &lt;20.00g &lt;20.00g</span><br></pre></td></tr></table></figure><h6 id="创建逻辑卷-分配名称-以及大小-指定卷组"><a href="#创建逻辑卷-分配名称-以及大小-指定卷组" class="headerlink" title="创建逻辑卷,分配名称, 以及大小, 指定卷组"></a>创建逻辑卷,分配名称, 以及大小, 指定卷组</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># lvcreate -L 100M -n lv1 zhou </span></span><br><span class="line">  Logical volume <span class="string">"lv1"</span> created.</span><br><span class="line">  </span><br><span class="line"><span class="comment">#检查逻辑卷</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># lvscan</span></span><br><span class="line">  ACTIVE            <span class="string">'/dev/rhel/swap'</span> [2.00 GiB] inherit</span><br><span class="line">  ACTIVE            <span class="string">'/dev/rhel/root'</span> [&lt;17.00 GiB] inherit</span><br><span class="line">  ACTIVE            <span class="string">'/dev/zhou/lv1'</span> [100.00 MiB] inherit</span><br></pre></td></tr></table></figure><h6 id="格式化文件系统"><a href="#格式化文件系统" class="headerlink" title="格式化文件系统"></a>格式化文件系统</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># mkfs.xfs /dev/zhou/lv1</span></span><br></pre></td></tr></table></figure><h6 id="挂载使用"><a href="#挂载使用" class="headerlink" title="挂载使用"></a>挂载使用</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># mkdir /opt/lv1</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># mount /dev/zhou/lv1 /opt/lv1/</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># df -Th</span></span><br><span class="line">文件系统              类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/rhel-root xfs        17G  3.2G   14G   19% /</span><br><span class="line">devtmpfs              devtmpfs  977M     0  977M    0% /dev</span><br><span class="line">tmpfs                 tmpfs     993M     0  993M    0% /dev/shm</span><br><span class="line">tmpfs                 tmpfs     993M  9.1M  984M    1% /run</span><br><span class="line">tmpfs                 tmpfs     993M     0  993M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sr0              iso9660   3.8G  3.8G     0  100% /mnt/cdrom</span><br><span class="line">/dev/sda1             xfs      1014M  161M  854M   16% /boot</span><br><span class="line">tmpfs                 tmpfs     199M   12K  199M    1% /run/user/42</span><br><span class="line">tmpfs                 tmpfs     199M     0  199M    0% /run/user/0</span><br><span class="line">/dev/mapper/zhou-lv1  xfs        97M  5.2M   92M    6% /opt/lv1</span><br></pre></td></tr></table></figure><p>在这里我们总结一下lvm部署步骤：</p><p>1.添加硬盘</p><p>2.初始化硬盘成物理卷</p><p>pvcreate /dev/sd{b,c,d}</p><p>3.创建卷组</p><p>vgcreate VG_NAME /dev/sd{b,c,d}</p><p>4.创建逻辑卷</p><p>lvcreate -L SIZE -n LV_NAME VG_NAME</p><p>5.格式化逻辑卷</p><p>mkfs.ext4 /dev/VG_NAME/LV_NAME</p><p>6.挂载</p><p>blkid</p><p>vim /etc/fstab</p><p>UUID=” “ /挂载点 文件系统类型 挂载参数 0 0</p><ul><li><p>永久挂载注意事项：</p><ul><li><p>修改配置文件/etc/fstab的挂载参数后不会立即生效，必须卸载并重新挂载或者重启系统才能生效</p></li><li><p>若想使之立即生效并不重启系统，可使用以下方式进行重新挂载</p><p>mount -o remount，rw 挂载点</p></li></ul></li></ul><p>7.重读配置文件</p><p>mount -a </p><h4 id="卷组管理"><a href="#卷组管理" class="headerlink" title="卷组管理"></a>卷组管理</h4><ul><li>扩展卷组，将新磁盘加如到卷组中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新硬盘加入pv</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># pvcreate /dev/sdc</span></span><br><span class="line">  Physical volume <span class="string">"/dev/sdc"</span> successfully created.</span><br><span class="line"></span><br><span class="line">使用vgextend扩展</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># vgextend zhou /dev/sdc</span></span><br><span class="line">  Volume group <span class="string">"zhou"</span> successfully extended</span><br></pre></td></tr></table></figure><ul><li>缩减卷组，将指定磁盘从卷组中删除</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># vgreduce zhou /dev/sdc</span></span><br><span class="line">  Removed <span class="string">"/dev/sdc"</span> from volume group <span class="string">"zhou"</span></span><br></pre></td></tr></table></figure><ul><li>数据迁移卷组，同一卷组的磁盘才可以进行在线迁移</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查当前逻辑卷VG中pv使用情况</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG   Fmt  Attr PSize   PFree</span><br><span class="line">  /dev/sda2  rhel lvm2 a--  &lt;19.00g      0</span><br><span class="line">  /dev/sdb   zhou lvm2 a--  &lt;20.00g &lt;19.90g</span><br><span class="line">  /dev/sdc        lvm2 ---   20.00g  20.00g</span><br><span class="line"></span><br><span class="line"><span class="comment"># pvmove在线数据迁移至其他pv</span></span><br><span class="line">[root@localhost ~]<span class="comment"># pvmove /dev/sdb</span></span><br><span class="line">  /dev/sdb: Moved: 41.33%</span><br><span class="line">  /dev/sdb: Moved: 100.00%</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否将sdb数据迁移至sdc</span></span><br><span class="line">[root@localhost ~]<span class="comment"># pvs</span></span><br><span class="line">PV      VG   Fmt  Attr PSize PFree </span><br><span class="line">/dev/sdb vg1 lvm2 a -- 2.00g 2.00g </span><br><span class="line">/dev/sdc vg1 lvm2 a -- 2.00g 1.76g</span><br></pre></td></tr></table></figure><h4 id="逻辑卷管理"><a href="#逻辑卷管理" class="headerlink" title="逻辑卷管理"></a>逻辑卷管理</h4><ul><li>逻辑卷扩展，逻辑卷的扩展取决于卷组中的容量，逻辑卷扩展的容量不能超过卷组的容量</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># vgs</span></span><br><span class="line">  VG   <span class="comment">#PV #LV #SN Attr   VSize   VFree</span></span><br><span class="line">  rhel   1   2   0 wz--n- &lt;19.00g      0</span><br><span class="line">  zhou   1   1   0 wz--n- &lt;20.00g &lt;19.90g</span><br><span class="line"></span><br><span class="line">1.扩展lv逻辑卷</span><br><span class="line"><span class="comment"># 增加800M分配给逻辑卷 &#123;注意: 800M +800M 不一样&#125;</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># lvextend -L +800M /dev/zhou/lv1</span></span><br><span class="line">  Size of logical volume zhou/lv1 changed from 100.00 MiB (25 extents) to 900.00 MiB (225 extents).</span><br><span class="line">  Logical volume zhou/lv1 successfully resized.</span><br><span class="line"><span class="comment"># 分配磁盘池中多少百分比给逻辑卷</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># lvextend -l +50%FREE /dev/zhou/lv1</span></span><br><span class="line">  Size of logical volume zhou/lv1 changed from 900.00 MiB (225 extents) to &lt;10.4   4 GiB (2672 extents).</span><br><span class="line">  Logical volume zhou/lv1 successfully resized.</span><br><span class="line">  </span><br><span class="line">2.扩展fs文件系统</span><br><span class="line"><span class="comment"># 在这里要看你是什么格式</span></span><br><span class="line">//xfs扩容</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># xfs_growfs /dev/zhou/lv1</span></span><br><span class="line">meta-data=/dev/mapper/zhou-lv1   isize=512    agcount=4, agsize=6400 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=25600, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal               bsize=4096   blocks=855, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 25600 to 2736128</span><br><span class="line"></span><br><span class="line">//ext扩容</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># resize2fs /dev/zhou/lv1</span></span><br></pre></td></tr></table></figure><ul><li>对<code>ext4</code>文件系统的逻辑卷裁剪容量</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先自己创建一个1G的逻辑卷作为裁剪的对象</span></span><br><span class="line"> lvcreate  -n uplooking -L 1G finance</span><br><span class="line"> mkfs.ext4 /dev/finance/uplooking </span><br><span class="line"></span><br><span class="line"> mkdir -p /finance/uplooking</span><br><span class="line"> mount /dev/finance/uplooking  /finance/uplooking/</span><br><span class="line"> cp /etc/host* /finance/uplooking/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果已经挂载，就必须先卸载</span></span><br><span class="line">umount /dev/finance/uplooking</span><br><span class="line"></span><br><span class="line"><span class="comment"># 裁剪容量，必须是先检测文件系统</span></span><br><span class="line">e2fsck -f /dev/finance/uplooking</span><br><span class="line">resize2fs /dev/finance/uplooking 512M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调整完毕后采取裁剪逻辑卷容量 </span></span><br><span class="line">lvreduce  -L 512M /dev/finance/uplooking </span><br><span class="line">WARNING: Reducing active logical volume to 512.00 MiB</span><br><span class="line">THIS MAY DESTROY YOUR DATA (filesystem etc.)</span><br><span class="line">Do you really want to reduce uplooking? [y/n]: y</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">建议：建议裁剪后，再次进行检测文件系统</span><br><span class="line"><span class="comment"># e2fsck -f /dev/finance/uplooking</span></span><br><span class="line"></span><br><span class="line">挂载测试：如果能够挂载，一般说明裁剪成功，文件系统没有被损坏</span><br><span class="line"><span class="comment"># mount /dev/finance/uplooking /mnt</span></span><br><span class="line">...</span><br><span class="line">/dev/mapper/finance-uplooking  472M  1.6M  435M    1% /mnt 而且文件系统容量被刷新了</span><br></pre></td></tr></table></figure><h5 id="缩减逻辑卷注意事项"><a href="#缩减逻辑卷注意事项" class="headerlink" title="缩减逻辑卷注意事项"></a>缩减逻辑卷注意事项</h5><p>1.不能在线缩减，得先卸载</p><p>2.确保缩减后的空间大小依然能存储原有数据</p><p>3.在缩减之前应该先检查文件，其确保文件系统处于一致性状态，使用命令：e2fsck -f /PATH/TO/LV</p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1.如何查看/etc/目录大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># du -sh /etc</span></span><br><span class="line">43M     /etc</span><br></pre></td></tr></table></figure><p>2.如何查看磁盘使用分区情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># lsblk</span></span><br><span class="line">NAME          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda             8:0    0   20G  0 disk</span><br><span class="line">├─sda1          8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2          8:2    0   19G  0 part</span><br><span class="line">  ├─rhel-root 253:0    0   17G  0 lvm  /</span><br><span class="line">  └─rhel-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">sdb             8:16   0   20G  0 disk</span><br><span class="line">└─zhou-lv1    253:2    0 10.4G  0 lvm  /opt/lv1</span><br><span class="line">sdc             8:32   0   20G  0 disk</span><br><span class="line">sdd             8:48   0   20G  0 disk</span><br><span class="line">sr0            11:0    1  3.8G  0 rom  /mnt/cdrom</span><br></pre></td></tr></table></figure><p>3.如何查看innode使用情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># df -ih</span></span><br><span class="line">文件系统              Inode 已用(I) 可用(I) 已用(I)% 挂载点</span><br><span class="line">/dev/mapper/rhel-root  8.5M    119K    8.4M       2% /</span><br><span class="line">devtmpfs               245K     393    244K       1% /dev</span><br><span class="line">tmpfs                  249K       1    249K       1% /dev/shm</span><br><span class="line">tmpfs                  249K     573    248K       1% /run</span><br><span class="line">tmpfs                  249K      16    249K       1% /sys/fs/cgroup</span><br><span class="line">/dev/sr0                  0       0       0        - /mnt/cdrom</span><br><span class="line">/dev/sda1              512K     325    512K       1% /boot</span><br><span class="line">tmpfs                  249K      16    249K       1% /run/user/0</span><br></pre></td></tr></table></figure><p>4.如何查看磁盘block使用情况</p><p>5.如何查看分区使用格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># blkid |grep /dev/sda1</span></span><br><span class="line">/dev/sda1: UUID=<span class="string">"9183ecd8-76e0-4f42-b256-21032b13dcd6"</span> TYPE=<span class="string">"xfs"</span></span><br></pre></td></tr></table></figure><p>6.如何查看一个设备的UUID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># blkid |grep /dev/sda1</span></span><br><span class="line">/dev/sda1: UUID=<span class="string">"9183ecd8-76e0-4f42-b256-21032b13dcd6"</span> TYPE=<span class="string">"xfs"</span></span><br></pre></td></tr></table></figure><p>7.请解释/etc/fstab中每段含义</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/dev/cdrom       /mnt/cdrom       iso9660               defaults        0  0 </span><br><span class="line">uuid(要挂载的)      所挂载的地方     设备类型                挂载选项        备份 磁盘检查</span><br></pre></td></tr></table></figure><p>8.一个ext4的文件分区，当使用touch test.file命令创建一个新文件是报错，报错的信息提示磁盘已满，但是采用df –h 命令查看磁盘大小时，只是用了60%的磁盘空间，为什么会出现这个情况，说说你的理由.</p><p>磁盘分区方案</p><blockquote><p>在虚拟机中添加一块20GB的SCISI磁盘<br>在新硬盘中建立一个5GB的分区，一个10G的分区<br>一个格式化为ext4的文件系统, 一个格式化为xfs的文件系统<br>新建两个目录站点进行挂载, 要求开机自动挂载该分区</p></blockquote><p>LVM磁盘管理方案</p><blockquote><p>在虚拟机环境中，新添加两块SCISI硬盘设备，完成硬盘检测及分区<br>建立逻辑卷mbvg, 格式化为ext4文件系统, 分配1G逻辑分区供/box目录使用<br>第二块逻辑分区, 格式化为xfs文件系统, 分配1G逻辑分区供/xfs目录使用<br>最后使用扩容方案将/box站点扩展到2.8G磁盘使用空间, 将/xfs目录扩展到2G</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>RHCE 认证考试练习</title>
    <link href="https://github.com/chineselijie/2019/08/29/13.linux--RHCE%20%20%E8%AE%A4%E8%AF%81%E8%80%83%E8%AF%95%E7%BB%83%E4%B9%A0/"/>
    <id>https://github.com/chineselijie/2019/08/29/13.linux--RHCE%20%20%E8%AE%A4%E8%AF%81%E8%80%83%E8%AF%95%E7%BB%83%E4%B9%A0/</id>
    <published>2019-08-29T15:44:18.592Z</published>
    <updated>2019-08-22T12:21:52.336Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>写在前面的话：考试练习不等于真实考试考题，里面的数据可能也与您考试练习的数据不一样，请认真仔细。祝愿RHCE取得好成绩！！</p></blockquote><p>[TOC]</p><h2 id="模拟考前配置"><a href="#模拟考前配置" class="headerlink" title="模拟考前配置"></a>模拟考前配置</h2><blockquote><p>准备前</p></blockquote><p>首先我们要将三台虚拟机开启<br>classroom是172.25.0.254</p><p>desktop是172.25.0.10</p><p>server是172.25.0.11</p><p>前提是三个主机能互相ping通</p><p>然后我们在本地上远程到classroom</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[kiosk@foundation0 ~]$ ssh root@172.25.0.254</span><br><span class="line">Last login: Sat Jul  6 09:08:15 2019 from 172.25.0.250</span><br><span class="line">[root@classroom ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>等待远程过去之后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@classroom ~]<span class="comment"># tail /etc/httpd/logs/error_log</span></span><br></pre></td></tr></table></figure><p>将那段字母复制(NSS开头，off结尾的那段，具体我也不是带清楚)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@classroom ~]<span class="comment"># vim /etc/httpd/conf.d/nss.conf</span></span><br></pre></td></tr></table></figure><p>将你复制的那段粘贴到最底部，然后保存并退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@classroom ~]<span class="comment"># cd /var/www/html/pub/</span></span><br><span class="line">[root@classroom pub]<span class="comment"># echo "zheshi yige 在 server 上配置一个 web 站点" &gt; example.html</span></span><br><span class="line">[root@classroom pub]<span class="comment"># echo "zheshi yige 在 server 上扩展您的 WEB 服务器" &gt; www.html</span></span><br><span class="line">[root@classroom pub]<span class="comment"># echo "zheshi yige web 访问控制“ &gt; private.html</span></span><br><span class="line">[root@classroom pub]<span class="comment"># vim webapp.wsgi</span></span><br><span class="line">[root@classroom pub]<span class="comment"># cat webapp.wsgi </span></span><br><span class="line">def application(environ, start_response):</span><br><span class="line">    status = <span class="string">'200 OK'</span></span><br><span class="line">    output = <span class="string">'Hello World!'</span></span><br><span class="line"></span><br><span class="line">    response_headers = [(<span class="string">'Content-type'</span>, <span class="string">'text/plain'</span>),</span><br><span class="line">                        (<span class="string">'Content-Length'</span>, str(len(output)))]</span><br><span class="line">    start_response(status, response_headers)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> [output]</span><br><span class="line"></span><br><span class="line">[root@classroom pub]<span class="comment"># vim user</span></span><br><span class="line">[root@classroom pub]<span class="comment"># cat user</span></span><br><span class="line">user1</span><br><span class="line">user2</span><br><span class="line">user3</span><br><span class="line">user4</span><br><span class="line">user5</span><br><span class="line"></span><br><span class="line">[root@foundation0 ~]<span class="comment"># vim /etc/hosts</span></span><br><span class="line">[root@foundation0 ~]<span class="comment"># tail -n 1 /etc/hosts</span></span><br><span class="line">172.25.0.11 server.example.com alt.example.com www.example.com</span><br><span class="line">[root@foundation0 ~]<span class="comment"># ssh root@172.25.0.10</span></span><br><span class="line">Last login: Sat Jul  6 09:08:15 2019 from 172.25.0.10</span><br><span class="line">[root@desktop0 ~]<span class="comment"># vim /etc/hosts</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># tail -n 1 /etc/hosts</span></span><br><span class="line">172.25.0.11 server.example.com alt.example.com www.example.com</span><br><span class="line">[root@foundation0 ~]<span class="comment"># ssh root@172.25.0.11</span></span><br><span class="line">[root@server0 ~]<span class="comment"># vim /etc/hosts</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># tail -n 1 /etc/hosts</span></span><br><span class="line">172.25.0.11 server.example.com alt.example.com www.example.com</span><br></pre></td></tr></table></figure><p>更改网卡在本地切换到root用户（此题需要做后面的链路聚合）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[kiosk@foundation0 ~]$ su -</span><br><span class="line">Password: </span><br><span class="line">[root@foundation0 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><blockquote><p>密码是：Asimov</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@foundation0 ~]<span class="comment"># virt-manager</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/07/08/ZDoh6K.png" alt></p><p><img src="https://s2.ax1x.com/2019/07/08/ZDoWSx.png" alt></p><p><img src="https://s2.ax1x.com/2019/07/08/ZDobtA.png" alt></p><p><img src="https://s2.ax1x.com/2019/07/08/ZDIdqe.png" alt></p><p><img src="https://s2.ax1x.com/2019/07/08/ZDofl6.png" alt></p><blockquote><p>按照这种方式，在server 和 desktop两台虚拟机里面添加两块网卡，保证有三快网卡</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@foundation0 ~]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><blockquote><p>然后直接将整个大虚拟机重启</p></blockquote><blockquote><p>数据库文件因过繁多内容，此处数据库文件请找我进行拷贝。</p></blockquote><p>打开火狐浏览器输入：<a href="http://classroom.example.com/" target="_blank" rel="noopener">http://classroom.example.com/</a></p><blockquote><p>以上是模拟考试前需要做的，真实考试不需要配置以上步骤</p><p>下面就开始模拟考题</p></blockquote><h2 id="开始考题"><a href="#开始考题" class="headerlink" title="开始考题"></a>开始考题</h2><blockquote><p>请注意：由于本机环境原因上述模拟考前配置是正式考试前不需要做的，考者切记正式考试是不用做前面的东西</p><p> 现在正式开始你的考试:</p></blockquote><h3 id="配置信息"><a href="#配置信息" class="headerlink" title="配置信息"></a>配置信息</h3><p>您在考试中将使用到两个系统的信息如下：</p><p><strong>desktop0.example.com : 作为服务器</strong></p><p><strong>server0.example.com : 作为客户端</strong></p><p><strong>两个系统</strong>的<strong>root密码</strong>为<strong>redhat</strong></p><p>系统的IP地址有DHCP提供，您可以视为正常，或者您可以按照一下信息重新设置未静态IP：</p><p><strong>server0.example.com ： 172.24.8.11/24</strong></p><p><strong>desktop0.example.com ： 172.24.8.10/24</strong></p><p>两个系统均为DNS域example.com的成员。除非特别知名，所有要求配置的网络服务都必须能被该域的系统访问。</p><p>classroom.example.com提供了集中认证的服务器为example.com。两个系统desktop0和server0都已经预先配置成此域的客户端。</p><p>classroom.example.com 提供了YUM软件仓库，URL是 <a href="http://classroom.example.com/content/rhel7.0/x86_64/dvd/" target="_blank" rel="noopener">http://classroom.example.com/content/rhel7.0/x86_64/dvd/</a> .</p><p>防火墙是默认打开的，在您认为适当的时候可以关闭。其他防火墙的设置可能在单独的要求中。</p><p>my133.org(172.13.0.0/24)作为不可信网络。</p><p>》 》 》 》 》》》》》》》》》》》》》》》》》》》》》》》》</p><h2 id="参考答案"><a href="#参考答案" class="headerlink" title="参考答案"></a>参考答案</h2><h4 id="1-配置-YUM"><a href="#1-配置-YUM" class="headerlink" title="1.配置 YUM"></a>1.配置 YUM</h4><blockquote><p> 配置yum源考试时候是不作为考题的，需要考者自己去阅读配置文档，里面有说明</p></blockquote><ul><li>分别在 server 和 desktop 上配置 YUM,指向:</li></ul><p><strong>server0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># vim /etc/yum.repos.d/rhce.repo</span></span><br><span class="line">[root@server0 ~]<span class="comment"># cat /etc/yum.repos.d/rhce.repo</span></span><br><span class="line">[rhce]</span><br><span class="line">name=http://classroom.example.com/content/rhel7.0/x86_64/dvd/</span><br><span class="line">baseurl=http://classroom.example.com/content/rhel7.0/x86_64/dvd/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[root@server0 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>desktop0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop0 ~]<span class="comment"># vim /etc/yum.repos.d/rhce.repo</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># cat /etc/yum.repos.d/rhce.repo</span></span><br><span class="line">[rhce]</span><br><span class="line">name=http://classroom.example.com/content/rhel7.0/x86_64/dvd/</span><br><span class="line">baseurl=http://classroom.example.com/content/rhel7.0/x86_64/dvd/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure><blockquote><p>这一题是在真实考试中不做考题，您需要自己配置，yum源就在文中的信息当中，包括后面的各个域名的所归属的网段。您需要去阅读配置信息，这里配置信息在本博客开头部分。</p></blockquote><h4 id="2-配置-SELinux"><a href="#2-配置-SELinux" class="headerlink" title="2.配置 SELinux"></a>2.配置 SELinux</h4><ul><li>SElinux 有三种模式,请将 server 与 desktop 运行于强制模式</li></ul><p><strong>server0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">[root@server0 ~]<span class="comment"># cat /etc/selinux/config | grep SELINUX=en</span></span><br><span class="line">SELINUX=enforcing</span><br><span class="line">[root@server0 ~]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><p><strong>desktop0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop0 ~]<span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># cat /etc/selinux/config | grep SELINUX=en</span></span><br><span class="line">SELINUX=enforcing</span><br><span class="line">[root@desktop0 ~]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><blockquote><p>其实可以不用reboot重启虚拟机，两边改完配置文件之后</p><p>我们可以这样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@desktop0 ~]<span class="comment"># setenforce 1</span></span><br><span class="line">&gt; [root@desktop0 ~]<span class="comment"># getenforce</span></span><br><span class="line">&gt; Enforcing</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>配置文件也改为enforcing</p><p>同样我们也临时获取到Enforcing权限</p><p>接下来可不要忘记了另外一台虚拟机了哦</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@server0 ~]<span class="comment"># setenforce 1</span></span><br><span class="line">&gt; [root@server0 ~]<span class="comment"># getenforce</span></span><br><span class="line">&gt; Enforcing</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="3-配置-SSH"><a href="#3-配置-SSH" class="headerlink" title="3.配置 SSH"></a>3.配置 SSH</h4><ul><li>用户能够从域 example.com 内的客户端通过 SSH 访问您的两个虚拟机系统</li><li>在域 my133t.org 内的客户端不能访问您的两个虚拟机系统</li></ul><p><strong>server0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># systemctl stop iptables ebtables</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl disable iptables ebtables</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl mask iptables ebtables</span></span><br><span class="line">ln -s <span class="string">'/dev/null'</span> <span class="string">'/etc/systemd/system/iptables.service'</span></span><br><span class="line">ln -s <span class="string">'/dev/null'</span> <span class="string">'/etc/systemd/system/ebtables.service'</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl restart firewalld</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl enable firewalld</span></span><br><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --remove-service=ssh --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --add-rich-rule 'rule family=ipv4 source address=172.25.0.0/24 service name=ssh accept' --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --reload </span></span><br><span class="line">success</span><br></pre></td></tr></table></figure><p><strong>desktop0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop0 ~]<span class="comment"># systemctl stop iptables ebtables</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># systemctl disable iptables ebtables</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># systemctl mask iptables ebtables</span></span><br><span class="line">ln -s <span class="string">'/dev/null'</span> <span class="string">'/etc/systemd/system/iptables.service'</span></span><br><span class="line">ln -s <span class="string">'/dev/null'</span> <span class="string">'/etc/systemd/system/ebtables.service'</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># systemctl restart firewalld</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># systemctl enable firewalld</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># firewall-cmd --remove-service=ssh --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@desktop0 ~]<span class="comment"># firewall-cmd --add-rich-rule 'rule family=ipv4 source address=172.25.0.0/24 service name=ssh accept' --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@desktop0 ~]<span class="comment"># firewall-cmd --reload </span></span><br><span class="line">success</span><br></pre></td></tr></table></figure><blockquote><p>做完这些操作之后，我们可以列出来查看一下，看看是否与我们想的一致</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@server0 ~]<span class="comment"># firewall-cmd --list-all</span></span><br><span class="line">&gt; public (default, active)</span><br><span class="line">&gt;   interfaces: eth0</span><br><span class="line">&gt;   sources: </span><br><span class="line">&gt;   services: dhcpv6-client</span><br><span class="line">&gt;   ports: </span><br><span class="line">&gt;   masquerade: no</span><br><span class="line">&gt;   forward-ports: </span><br><span class="line">&gt;   icmp-blocks: </span><br><span class="line">&gt;   rich rules: </span><br><span class="line">&gt; rule family=<span class="string">"ipv4"</span> <span class="built_in">source</span> address=<span class="string">"172.25.0.0/24"</span> service name=<span class="string">"ssh"</span> accept</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>从此处我们可以看出ssh这个服务没有了，从而添加上了允许172.25.0.0/24这个网段的主机去访问，与我们所想的一致，接下来看看另外一个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@desktop0 ~]<span class="comment"># firewall-cmd --list-all</span></span><br><span class="line">&gt; public (default, active)</span><br><span class="line">&gt;   interfaces: eth0</span><br><span class="line">&gt;   sources: </span><br><span class="line">&gt;   services: dhcpv6-client</span><br><span class="line">&gt;   ports: </span><br><span class="line">&gt;   masquerade: no</span><br><span class="line">&gt;   forward-ports: </span><br><span class="line">&gt;   icmp-blocks: </span><br><span class="line">&gt;   rich rules: </span><br><span class="line">&gt; rule family=<span class="string">"ipv4"</span> <span class="built_in">source</span> address=<span class="string">"172.25.0.0/24"</span> service name=<span class="string">"ssh"</span> accept</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="4-命令别名及IP-转发"><a href="#4-命令别名及IP-转发" class="headerlink" title="4.命令别名及IP 转发"></a>4.命令别名及IP 转发</h4><p><strong>1）在系统 server 和 desktop 上创建自定义命令为 tk,此自定义命令将执行/bin/ps aux,此命令对系统中所有用户有效</strong></p><p><strong>server0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop0 ~]<span class="comment"># vim /etc/bashrc</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># tail -n 1 /etc/bashrc </span></span><br><span class="line"><span class="built_in">alias</span> tk=<span class="string">'/bin/ps aux'</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># bash</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># which tk</span></span><br><span class="line"><span class="built_in">alias</span> tk=<span class="string">'/bin/ps aux'</span></span><br><span class="line">/bin/ps</span><br></pre></td></tr></table></figure><p><strong>desktop0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># vim /etc/bashrc </span></span><br><span class="line">[root@server0 ~]<span class="comment"># tail -n 1 /etc/bashrc</span></span><br><span class="line"><span class="built_in">alias</span> tk=<span class="string">'/bin/ps aux'</span></span><br><span class="line">[root@server0 ~]<span class="comment"># bash</span></span><br><span class="line">[root@server0 ~]<span class="comment"># which tk</span></span><br><span class="line"><span class="built_in">alias</span> tk=<span class="string">'/bin/ps aux'</span></span><br><span class="line">/bin/ps</span><br></pre></td></tr></table></figure><blockquote><p>此题过于简单，这里就不过多解释</p></blockquote><p><strong>2）开启 IP 转发功能</strong></p><p><strong>server0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># cat /etc/sysctl.conf </span></span><br><span class="line"><span class="comment"># System default settings live in /usr/lib/sysctl.d/00-system.conf.</span></span><br><span class="line"><span class="comment"># To override those settings, enter new settings here, or in an </span></span><br><span class="line">.........................................</span><br><span class="line">[root@server0 ~]<span class="comment"># vim /usr/lib/sysctl.d/00-system.conf</span></span><br><span class="line">[root@server0 ~]<span class="comment"># cat /usr/lib/sysctl.d/00-system.conf </span></span><br><span class="line">........................................</span><br><span class="line">net.bridge.bridge-nf-call-arptables = 0</span><br><span class="line">net.ipv4.ip_forward = 1 <span class="comment">#在此处添加</span></span><br><span class="line"></span><br><span class="line">........................................</span><br><span class="line">[root@server0 ~]<span class="comment"># sysctl -p /usr/lib/sysctl.d/00-system.conf</span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 0</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 0</span><br><span class="line">net.bridge.bridge-nf-call-arptables = 0</span><br><span class="line">net.ipv4.ip_forward = 1      <span class="comment">#有这个表示成功</span></span><br><span class="line">kernel.shmmax = 4294967295</span><br><span class="line">kernel.shmall = 268435456</span><br></pre></td></tr></table></figure><blockquote><p>同样在desktop 这台虚拟机上也要做，此处不做过多演示</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop0 ~]<span class="comment"># cat /etc/sysctl.conf </span></span><br><span class="line"><span class="comment"># System default settings live in /usr/lib/sysctl.d/00-system.conf.</span></span><br><span class="line"><span class="comment"># To override those settings, enter new settings here, or in an /etc/sysctl.d/&lt;name&gt;.conf file</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For more information, see sysctl.conf(5) and sysctl.d(5).</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># vim /usr/lib/sysctl.d/00-system.conf</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># sysctl -p /usr/lib/sysctl.d/00-system.conf</span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 0</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 0</span><br><span class="line">net.bridge.bridge-nf-call-arptables = 0</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">kernel.shmmax = 4294967295</span><br><span class="line">kernel.shmall = 268435456</span><br><span class="line">[root@desktop0 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h4 id="5-端口转发"><a href="#5-端口转发" class="headerlink" title="5.端口转发"></a>5.端口转发</h4><ul><li>在 server 上配置端口转发,在 172.25.0.0/24 中的系统,访问 server 的本地端口 9527 将被转发到 80,此设置永久生效</li></ul><p><strong>server0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --add-rich-rule 'rule family=ipv4 source address=172.25.0.0/24 forward-port port=9527 protocol=tcp to-port=80' --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --reload </span></span><br><span class="line">success</span><br></pre></td></tr></table></figure><blockquote><p>可以用<code>firewall-cmd --list-all</code>命令来查看是否添加上去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@server0 ~]<span class="comment"># firewall-cmd --list-all</span></span><br><span class="line">&gt; public (default, active)</span><br><span class="line">&gt;   interfaces: eth0</span><br><span class="line">&gt;   sources: </span><br><span class="line">&gt;   services: dhcpv6-client</span><br><span class="line">&gt;   ports: </span><br><span class="line">&gt;   masquerade: no</span><br><span class="line">&gt;   forward-ports: </span><br><span class="line">&gt;   icmp-blocks: </span><br><span class="line">&gt;   rich rules: </span><br><span class="line">&gt; rule family=<span class="string">"ipv4"</span> <span class="built_in">source</span> address=<span class="string">"172.25.0.0/24"</span> forward-port port=<span class="string">"9527"</span> protocol=<span class="string">"tcp"</span> to-port=<span class="string">"80"</span></span><br><span class="line">&gt; rule family=<span class="string">"ipv4"</span> <span class="built_in">source</span> address=<span class="string">"172.25.0.0/24"</span> service name=<span class="string">"ssh"</span> accept</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>切记：此题需要之在<strong>server0</strong>上面操作，而且考试中题目需要你在那操作就在那操作，切勿心急盲目</p></blockquote><h4 id="6-聚合网络"><a href="#6-聚合网络" class="headerlink" title="6.聚合网络"></a>6.聚合网络</h4><p>在 server 和 desktop 之间配置链路聚合</p><p>此链路使用接口 slave1 和 slave2</p><p>此链路在一个接口失效后,仍然能工作</p><p>此链路在 server 上使用地址 192.168.0.1/24</p><p>此链路在 desktop 上使用地址 192.168.0.2/24</p><p>此链路在系统重启后依然保持正常状态</p><p><strong>server0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># nmcli device </span></span><br><span class="line">DEVICE  TYPE      STATE         CONNECTION  </span><br><span class="line">eth0    ethernet  connected     System eth0 </span><br><span class="line">eth1    ethernet  disconnected  --          </span><br><span class="line">eth2    ethernet  disconnected  --          </span><br><span class="line">lo      loopback  unmanaged     --          </span><br><span class="line">[root@server0 ~]<span class="comment"># nmcli connection add type team con-name team0 ifname team0 config '&#123;"runner":&#123;"name":"activebackup"&#125;&#125;'</span></span><br><span class="line">Connection <span class="string">'team0'</span> (f816c00c-0488-455e-8d17-d66004112ef7) successfully added.</span><br><span class="line">[root@server0 ~]<span class="comment"># nmcli connection modify team0 ipv4.addresses "192.168.0.1/24" ipv4.method manual connection.autoconnect yes</span></span><br><span class="line">[root@server0 ~]<span class="comment"># nmcli connection add type team-slave con-name slave1 ifname eth1 master team0 </span></span><br><span class="line">Connection <span class="string">'slave1'</span> (5276955f-cbd6-4ec3-82dc-daf6b0073998) successfully added.</span><br><span class="line">[root@server0 ~]<span class="comment"># nmcli connection add type team-slave con-name slave2 ifname eth2 master team0 </span></span><br><span class="line">Connection <span class="string">'slave2'</span> (26009b44-7428-4cb4-a2b6-41d5aa5f3cac) successfully added.</span><br><span class="line">[root@server0 ~]<span class="comment"># nmcli connection up team0</span></span><br><span class="line">Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/4)</span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl restart network</span></span><br></pre></td></tr></table></figure><p><strong>desktop</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop0 ~]<span class="comment"># nmcli device </span></span><br><span class="line">DEVICE  TYPE      STATE         CONNECTION  </span><br><span class="line">eth0    ethernet  connected     System eth0 </span><br><span class="line">eth1    ethernet  disconnected  --          </span><br><span class="line">eth2    ethernet  disconnected  --          </span><br><span class="line">lo      loopback  unmanaged     --          </span><br><span class="line">[root@desktop0 ~]<span class="comment"># nmcli connection add type team con-name team0 ifname team0 config '&#123;"runner":&#123;"name":"activebackup"&#125;&#125;'</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># nmcli connection modify team0 ipv4.addresses "192.168.0.2/24" ipv4.method manual connection.autoconnect yes</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># nmcli connection add type team-slave con-name slave1 ifname eth1 master team0 </span></span><br><span class="line">Connection <span class="string">'slave1'</span> (5c6c05b2-63b9-4aca-b991-ab570f4e23bd) successfully added.</span><br><span class="line">[root@desktop0 ~]<span class="comment"># nmcli connection add type team-slave con-name slave2 ifname eth2 master team0  </span></span><br><span class="line">Connection <span class="string">'slave2'</span> (546bc410-6a94-4fff-9bef-398e54b2feff) successfully added.</span><br><span class="line">[root@desktop0 ~]<span class="comment"># nmcli connection up team0 </span></span><br><span class="line">Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/4)</span><br><span class="line">[root@desktop0 ~]<span class="comment"># systemctl restart network</span></span><br></pre></td></tr></table></figure><blockquote><p>最后我们验证以下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@desktop0 ~]<span class="comment"># ping 192.168.0.1</span></span><br><span class="line">&gt; PING 192.168.0.1 (192.168.0.1) 56(84) bytes of data.</span><br><span class="line">&gt; 64 bytes from 192.168.0.1: icmp_seq=1 ttl=64 time=1.17 ms</span><br><span class="line">&gt; 64 bytes from 192.168.0.1: icmp_seq=2 ttl=64 time=0.301 ms</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>然后我们断掉一个接口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@desktop0 ~]<span class="comment"># nmcli connection down slave1</span></span><br><span class="line">&gt; [root@desktop0 ~]<span class="comment"># ping 192.168.0.1</span></span><br><span class="line">&gt; PING 192.168.0.1 (192.168.0.1) 56(84) bytes of data.</span><br><span class="line">&gt; 64 bytes from 192.168.0.1: icmp_seq=1 ttl=64 time=0.582 ms</span><br><span class="line">&gt; ^C</span><br><span class="line">&gt; --- 192.168.0.1 ping statistics ---</span><br><span class="line">&gt; 1 packets transmitted, 1 received, 0% packet loss, time 0ms</span><br><span class="line">&gt; rtt min/avg/max/mdev = 0.582/0.582/0.582/0.000 ms</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>我们down掉其中一个接口，还能ping通</p></blockquote><h4 id="7-IPv6-设置"><a href="#7-IPv6-设置" class="headerlink" title="7.IPv6 设置"></a>7.IPv6 设置</h4><p>在您的考试系统上配置接口,在你的默认网卡上使用如下 IPv6 地址</p><p>server 上的 IP 地址应该是 fd00:ba5e:ba11:10::1/64</p><p>desktop 上的 IP 地址应该是 fd00:ba5e:ba11:10::2/64</p><p>两个系统必须能与网络 fd00:ba5e:ba11:10::cc 内的系统通信</p><p>地址必须在重启后依然生效</p><p>两个系统保持当前的 IPv4 地址并能通信</p><p><strong>server0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># nmcli connection show </span></span><br><span class="line">NAME         UUID                                  TYPE            DEVICE </span><br><span class="line">slave1       5276955f-cbd6-4ec3-82dc-daf6b0073998  802-3-ethernet  eth1   </span><br><span class="line">team0        f816c00c-0488-455e-8d17-d66004112ef7  team            team0  </span><br><span class="line">System eth0  5fb06bd0-0bb0-7ffb-45f1-d6edd65f3e03  802-3-ethernet  eth0   </span><br><span class="line">slave2       26009b44-7428-4cb4-a2b6-41d5aa5f3cac  802-3-ethernet  eth2   </span><br><span class="line">[root@server0 ~]<span class="comment"># nmcli connection modify "System eth0" ipv6.addresses fd00:ba5e:ba11:10::1/64 ipv6.method manual connection.autoconnect yes</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl restart network</span></span><br></pre></td></tr></table></figure><p><strong>desktop</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop0 ~]<span class="comment"># nmcli connection show </span></span><br><span class="line">NAME         UUID                                  TYPE            DEVICE </span><br><span class="line">slave1       5c6c05b2-63b9-4aca-b991-ab570f4e23bd  802-3-ethernet  eth1   </span><br><span class="line">team0        8ccca14c-7275-4996-9d06-9bfd33cf7b3e  team            team0  </span><br><span class="line">System eth0  5fb06bd0-0bb0-7ffb-45f1-d6edd65f3e03  802-3-ethernet  eth0   </span><br><span class="line">slave2       546bc410-6a94-4fff-9bef-398e54b2feff  802-3-ethernet  eth2   </span><br><span class="line">[root@desktop0 ~]<span class="comment"># nmcli connection modify "System eth0" ipv6.addresses "fd00:ba5e:ba11:10::2/64" ipv6.method manual connection.autoconnect yes</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># systemctl restart network</span></span><br></pre></td></tr></table></figure><blockquote><p>验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@desktop0 ~]<span class="comment"># ping6 fd00:ba5e:ba11:10::1</span></span><br><span class="line">&gt; PING fd00:ba5e:ba11:10::1(fd00:ba5e:ba11:10::1) 56 data bytes</span><br><span class="line">&gt; 64 bytes from fd00:ba5e:ba11:10::1: icmp_seq=1 ttl=64 time=4.55 ms</span><br><span class="line">&gt; 64 bytes from fd00:ba5e:ba11:10::1: icmp_seq=2 ttl=64 time=0.413 ms</span><br><span class="line">&gt; ^C</span><br><span class="line">&gt; --- fd00:ba5e:ba11:10::1 ping statistics ---</span><br><span class="line">&gt; 2 packets transmitted, 2 received, 0% packet loss, time 1003ms</span><br><span class="line">&gt; rtt min/avg/max/mdev = 0.413/2.485/4.558/2.073 ms</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>有好多考者都在思考这么一个问题，</p><p>两个系统必须能与网络 fd00:ba5e:ba11:10::cc 内的系统通信</p><p>请问：你电脑能平通自己的网段吗，考题说的是能与这个网络里面得系统</p></blockquote><h4 id="8-邮件服务"><a href="#8-邮件服务" class="headerlink" title="8.邮件服务"></a>8.邮件服务</h4><p>在 server 上配置邮件服务</p><p>这些系统不接受外部发来的邮件</p><p>在这些系统上本地发送任何邮件都会被路由到 server1.example.com</p><p>从这些系统上发送的邮件显示来自于 example.com</p><p>您可以通过发送邮件到 harry 来测试您的配置</p><p>您可以通过访问 <a href="http://server1.example.com/email/harry" target="_blank" rel="noopener">http://server1.example.com/email/harry</a> 来验证您的配置(模拟环境上面没有这个地址，所以此题验证不了)</p><p>发给 harry 的邮件同时能被 natasha 收到</p><p><strong>server0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># vim /etc/postfix/main.cf </span></span><br><span class="line">myorigin = example.com    <span class="comment">#大概在99行</span></span><br><span class="line">inet_interfaces = localhost <span class="comment">#大概在117行，默认是localhost</span></span><br><span class="line">mydestination = <span class="comment">#大概在165行，将=号后面的删掉</span></span><br><span class="line">mynetworks =  127.0.0.0/8<span class="comment">#大概在265行，仅需要127.0.0.0/8</span></span><br><span class="line">relayhost = [server1.example.com]<span class="comment">#大概在319行</span></span><br><span class="line"><span class="comment">#保存并退出</span></span><br><span class="line">[root@server0 ~]<span class="comment"># vim  /etc/aliases</span></span><br><span class="line">[root@server0 ~]<span class="comment"># tail -n 1 /etc/aliases</span></span><br><span class="line">harry:harry,natasha</span><br><span class="line">[root@server0 ~]<span class="comment"># useradd harry</span></span><br><span class="line">[root@server0 ~]<span class="comment"># useradd natasha</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl restart postfix.service </span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl enable postfix.service </span></span><br><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --add-service=smtp --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --reload </span></span><br><span class="line">success</span><br></pre></td></tr></table></figure><blockquote><p>因为环境原因此题无法验证，真实考试环境中是可以验证的具体验证如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@server0 ~]<span class="comment"># echo "hello" | mail -s testmail harry</span></span><br><span class="line">&gt; [root@server0 ~]<span class="comment"># curl http://server1.example.com/email/harry</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>然后在最下面可以看到一个hello</p><p>配置文件具体解释：</p><p>myorigin = example.com    #来自哪里<br>mynetworks =  127.0.0.0/8    # 邮件信息仅本地环回<br>relayhost = [server1.example.com]    # 类似中间站，例如B在A和C的中间，A发给C的消息B就会收到。</p></blockquote><h4 id="9-Samba-服务"><a href="#9-Samba-服务" class="headerlink" title="9.Samba 服务"></a>9.Samba 服务</h4><p>在 server 上配置 SAMBA 服务</p><p>您的 samba 服务器必须是 STAFF 工作组的一个成员</p><p>共享/common 目录,共享名为 common</p><p>只有 example.com 域内的客户端可以访问 common 共享</p><p>common 必须是可以浏览的</p><p>用户 natasha 必须能够读取共享中的内容,如果需要的话,验证密码是:tangkai</p><p><strong>server0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># yum install -y samba*</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl restart smb nmb</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl enable smb nmb</span></span><br><span class="line">[root@server0 ~]<span class="comment"># mkdir /common</span></span><br><span class="line">[root@server0 ~]<span class="comment"># vim /etc/samba/smb.conf </span></span><br><span class="line"><span class="comment">#找到：</span></span><br><span class="line">[global]</span><br><span class="line">workgroup = STAFF <span class="comment">#将=后面改为STAFF</span></span><br><span class="line">..................</span><br><span class="line">..................</span><br><span class="line"><span class="comment">#在最下面，新加入：</span></span><br><span class="line">[common]</span><br><span class="line">        path = /common</span><br><span class="line">        browseable = yes</span><br><span class="line">        valid users = natasha</span><br><span class="line"><span class="comment"># 保存并退出</span></span><br><span class="line">[root@server0 ~]<span class="comment"># getsebool -a | grep samba</span></span><br><span class="line">samba_create_home_dirs --&gt; off</span><br><span class="line">samba_domain_controller --&gt; off</span><br><span class="line">samba_enable_home_dirs --&gt; off</span><br><span class="line">samba_export_all_ro --&gt; off</span><br><span class="line">samba_export_all_rw --&gt; off</span><br><span class="line">samba_portmapper --&gt; off</span><br><span class="line">samba_run_unconfined --&gt; off</span><br><span class="line">samba_share_fusefs --&gt; off</span><br><span class="line">samba_share_nfs --&gt; off</span><br><span class="line">sanlock_use_samba --&gt; off</span><br><span class="line">use_samba_home_dirs --&gt; off</span><br><span class="line">virt_sandbox_use_samba --&gt; off</span><br><span class="line">virt_use_samba --&gt; off</span><br><span class="line">[root@server0 ~]<span class="comment"># setsebool -P samba_enable_home_dirs 1</span></span><br><span class="line">[root@server0 ~]<span class="comment"># chcon -Rt samba_share_t /common/</span></span><br><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --add-rich-rule 'rule family=ipv4 source address=172.25.0.0/24 service name=samba accept' --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --add-rich-rule 'rule family=ipv4 source address=172.25.0.0/24 service name=samba-client accept' --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --reload </span></span><br><span class="line">success</span><br><span class="line">[root@server0 ~]<span class="comment"># id natasha</span></span><br><span class="line">uid=1002(natasha) gid=1002(natasha) groups=1002(natasha)</span><br><span class="line">[root@server0 ~]<span class="comment"># smbpasswd -a natasha</span></span><br><span class="line">New SMB password:</span><br><span class="line">Retype new SMB password:</span><br><span class="line">Added user natasha.</span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl restart smb nmb</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl enable smb nmb</span></span><br></pre></td></tr></table></figure><blockquote><p>我们要养成一种习惯，不管之前有没有加入启动项，在每次重启之后，我们都要顺手把他加入到开机启动项里面</p></blockquote><blockquote><p>验证:需要到desktop0里面验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@desktop0 ~]<span class="comment"># yum install -y cifs-util*</span></span><br><span class="line">&gt; [root@desktop0 ~]<span class="comment"># mount -t cifs -o username=natasha,password=tangkai //172.25.0.11/common /media/</span></span><br><span class="line">&gt; [root@desktop0 ~]<span class="comment"># df -h</span></span><br><span class="line">&gt; Filesystem            Size  Used Avail Use% Mounted on</span><br><span class="line">&gt; /dev/vda1              10G  3.1G  7.0G  31% /</span><br><span class="line">&gt; devtmpfs              906M     0  906M   0% /dev</span><br><span class="line">&gt; tmpfs                 921M   80K  921M   1% /dev/shm</span><br><span class="line">&gt; tmpfs                 921M   17M  904M   2% /run</span><br><span class="line">&gt; tmpfs                 921M     0  921M   0% /sys/fs/cgroup</span><br><span class="line">&gt; //172.25.0.11/common   10G  3.1G  7.0G  31% /media</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="10-多用户-samba-挂载"><a href="#10-多用户-samba-挂载" class="headerlink" title="10.多用户 samba 挂载"></a>10.多用户 samba 挂载</h4><p>在 server 上通过 samba 共享目录/storage</p><p>共享名为 share</p><p>共享目录只能被 example.com 域内的客户端使用</p><p>共享目录 share 必须可以被浏览</p><p>用户 sarah 能以读的方式访问此共享,访问密码是 tangkai</p><p>用户 kitty 能以读写的方式访问此共享,访问密码是 tangkai</p><p>此共享永久挂载在 desktop 上的/mnt/dev 目录,并使用用户 sarah 进行认证,任何用户可临时通过 kitty 来获得读写权限</p><p><strong>server0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># vim /etc/samba/smb.conf </span></span><br><span class="line">[root@server0 ~]<span class="comment"># tail n 6 /etc/samba/smb.conf </span></span><br><span class="line">[share]</span><br><span class="line">path = /storage</span><br><span class="line">browseable = yes</span><br><span class="line">    valid users = sarah,kitty</span><br><span class="line">writable = no</span><br><span class="line">write list = kitty</span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl restart smb nmb</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl enable smb nmb</span></span><br><span class="line">[root@server0 ~]<span class="comment"># mkdir /storage</span></span><br><span class="line">[root@server0 ~]<span class="comment"># useradd sarah</span></span><br><span class="line">[root@server0 ~]<span class="comment"># useradd kitty</span></span><br><span class="line">[root@server0 ~]<span class="comment"># chcon -Rt samba_share_t /storage/</span></span><br><span class="line">[root@server0 ~]<span class="comment"># setfacl -m u:sarah:r-x /storage/</span></span><br><span class="line">[root@server0 ~]<span class="comment"># setfacl -m u:kitty:rwx /storage/</span></span><br><span class="line">[root@server0 ~]<span class="comment"># smbpasswd -a sarah</span></span><br><span class="line">New SMB password:</span><br><span class="line">Retype new SMB password:</span><br><span class="line">Added user sarah.</span><br><span class="line">[root@server0 ~]<span class="comment"># smbpasswd -a kitty</span></span><br><span class="line">New SMB password:</span><br><span class="line">Retype new SMB password:</span><br><span class="line">Added user kitty.</span><br></pre></td></tr></table></figure><p><strong>desktop</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop0 ~]<span class="comment"># vim /etc/fstab</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># tail -n 1 /etc/fstab </span></span><br><span class="line">//172.25.0.11/share/mnt/devcifs multiuser,username=sarah,password=tangkai,sec=ntlmssp 0 0</span><br><span class="line">[root@desktop0 ~]<span class="comment"># mkdir /mnt/dev</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># mount -a</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># df -h</span></span><br><span class="line">Filesystem            Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/vda1              10G  3.1G  7.0G  31% /</span><br><span class="line">devtmpfs              906M     0  906M   0% /dev</span><br><span class="line">tmpfs                 921M   80K  921M   1% /dev/shm</span><br><span class="line">tmpfs                 921M   17M  904M   2% /run</span><br><span class="line">tmpfs                 921M     0  921M   0% /sys/fs/cgroup</span><br><span class="line">//172.25.0.11/common   10G  3.1G  7.0G  31% /media</span><br><span class="line">//172.25.0.11/share    10G  3.1G  7.0G  31% /mnt/dev</span><br></pre></td></tr></table></figure><h4 id="11-配置-NFS-服务"><a href="#11-配置-NFS-服务" class="headerlink" title="11.配置 NFS 服务"></a>11.配置 NFS 服务</h4><p>1.) 在 server 上配置 NFS<br>以只读的方式共享/public,同时只能被 example.com 内用户访问</p><p>以读写的方式共享/protected 能被 example.com 内用户访问</p><p>访问/protected 需要通过 kerberos 安全加密,您可以使用下边链接的秘钥: <a href="http://classroom.example.com/pub/keytabs/server0.keytab" target="_blank" rel="noopener">http://classroom.example.com/pub/keytabs/server0.keytab</a></p><p>目录/protected 应该包含名为 project 拥有人为 ldapuser12 的子目录</p><p>用户 ldapuser12 能以读写的方式访问/protected/project</p><p><strong>server0</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># vim /etc/exports</span></span><br><span class="line">[root@server0 ~]<span class="comment"># cat /etc/exports</span></span><br><span class="line">/public172.25.0.0/24(ro)</span><br><span class="line">/protected 172.25.0.0/24(rw,sec=krb5p)</span><br><span class="line">[root@server0 ~]<span class="comment"># mkdir /public</span></span><br><span class="line">[root@server0 ~]<span class="comment"># mkdir /protected</span></span><br><span class="line">[root@server0 ~]<span class="comment"># mkdir /protected/project</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这一栏的步骤有可能考试不需要你操作，但我们要以防万一</span></span><br><span class="line">[root@server0 ~]<span class="comment"># yum install -y krb5* sssd* authconfig*</span></span><br><span class="line">[root@server0 ~]<span class="comment"># cd /etc/openldap/</span></span><br><span class="line">[root@server0 openldap]<span class="comment"># ls</span></span><br><span class="line">certs  ldap.conf  schema</span><br><span class="line">[root@server0 openldap]<span class="comment"># mkdir cacerts</span></span><br><span class="line">[root@server0 openldap]<span class="comment"># cd cacerts/</span></span><br><span class="line">[root@server0 cacerts]<span class="comment"># wget http://classroom.example.com/pub/example-ca.crt</span></span><br><span class="line">[root@server0 cacerts]<span class="comment"># authconfig-tui </span></span><br><span class="line"><span class="comment"># 过程在考rhcse的时候有描述，这里就不再介绍</span></span><br><span class="line">[root@server0 cacerts]<span class="comment"># su - ldapuser12</span></span><br><span class="line">su: warning: cannot change directory to /home/guests/ldapuser12: No such file or directory</span><br><span class="line">mkdir: cannot create directory <span class="string">'/home/guests'</span>: Permission denied</span><br><span class="line">-bash-4.2$</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># chown ldapuser12 /protected/project</span></span><br><span class="line">[root@server0 ~]<span class="comment"># wget -O /etc/krb5.keytab  http://classroom.example.com/pub/keytabs/server0.keytab</span></span><br><span class="line">[root@server0 ~]<span class="comment"># vim /etc/sysconfig/nfs</span></span><br><span class="line">RPCNFSDARGS=<span class="string">"-V 4.2"</span>  <span class="comment"># 在第13行，引号里面加入-V 4.2</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl enable nfs-secure nfs-secure-server nfs-server</span></span><br><span class="line">ln -s <span class="string">'/usr/lib/systemd/system/nfs-secure.service'</span> <span class="string">'/etc/systemd/system/nfs.target.wants/nfs-secure.service'</span></span><br><span class="line">ln -s <span class="string">'/usr/lib/systemd/system/nfs-secure-server.service'</span> <span class="string">'/etc/systemd/system/nfs.target.wants/nfs-secure-server.service'</span></span><br><span class="line">ln -s <span class="string">'/usr/lib/systemd/system/nfs-server.service'</span> <span class="string">'/etc/systemd/system/nfs.target.wants/nfs-server.service'</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl start nfs-secure nfs-secure-server nfs-server</span></span><br><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --add-rich-rule 'rule family=ipv4 source address=172.25.0.0/24 service name=nfs accept' --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --add-rich-rule 'rule family=ipv4 source address=172.25.0.0/24 service name=rpc-bind accept' --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@server0 ~]<span class="comment"># firewall-cmd --reload </span></span><br><span class="line">success</span><br></pre></td></tr></table></figure><p><strong>2.)</strong><br><strong>在 desktop 上挂载来自于 server0 的 NFS 共享</strong></p><p>/public 挂载在目录/mnt/nfsmount 上</p><p>/protected 挂载在目录/mnt/nfssecure,并使用安全的方式,秘钥：</p><p><a href="http://classroom.example.com/pub/keytabs/desktop0.keytab" target="_blank" rel="noopener">http://classroom.example.com/pub/keytabs/desktop0.keytab</a></p><p>用户 ldapuser12 能在/mnt/nfssecure/project 上创建文件</p><p>这些文件系统在系统启动时自动挂载</p><p><strong>desktop</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop0 ~]<span class="comment"># mkdir /mnt/nfsmount</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># mkdir /mnt/nfssecure</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这一栏的步骤有可能考试不需要你操作，但我们要以防万一</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># yum install sssd* krb5* authconfig* -y</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># cd /etc/openldap/</span></span><br><span class="line">[root@desktop0 openldap]<span class="comment"># ls</span></span><br><span class="line">certs  ldap.conf</span><br><span class="line">[root@desktop0 openldap]<span class="comment"># mkdir cacerts</span></span><br><span class="line">[root@desktop0 openldap]<span class="comment"># cd cacerts/</span></span><br><span class="line">[root@desktop0 cacerts]<span class="comment"># wget http://classroom.example.com/pub/example-ca.crt</span></span><br><span class="line">[root@desktop0 cacerts]<span class="comment"># authconfig-tui</span></span><br><span class="line"><span class="comment"># 过程在考rhcse的时候有描述，这里就不再介绍</span></span><br><span class="line">[root@desktop0 cacerts]<span class="comment"># su - ldapuser12</span></span><br><span class="line">su: warning: cannot change directory to /home/guests/ldapuser12: No such file or directory</span><br><span class="line">mkdir: cannot create directory <span class="string">'/home/guests'</span>: Permission denied</span><br><span class="line">-bash-4.2$</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop0 ~]<span class="comment"># wget -O /etc/krb5.keytab http://classroom.example.com/pub/keytabs/desktop0.keytab</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># vim /etc/sysconfig/nfs</span></span><br><span class="line">RPCNFSDARGS=<span class="string">"-V 4.2"</span>  <span class="comment"># 在第13行，引号里面加入-V 4.2</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># systemctl enable nfs-secure</span></span><br><span class="line">ln -s <span class="string">'/usr/lib/systemd/system/nfs-secure.service'</span> <span class="string">'/etc/systemd/system/nfs.target.wants/nfs-secure.service'</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># systemctl start nfs-secure</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># vim /etc/fstab</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># tail -n 2 /etc/fstab </span></span><br><span class="line">172.25.0.11:/public /mnt/nfsmount nfs ro,v4.2 0 0</span><br><span class="line">172.25.0.11:/protected /mnt/nfssecure nfs defaults,v4.2,sec=krb5p 0 0</span><br><span class="line">[root@desktop0 ~]<span class="comment"># mount -a</span></span><br></pre></td></tr></table></figure><h4 id="12-在-server-上配置一个-web-站点-http-server-example-com"><a href="#12-在-server-上配置一个-web-站点-http-server-example-com" class="headerlink" title="12.在 server 上配置一个 web 站点 http://server.example.com"></a>12.在 server 上配置一个 web 站点 <a href="http://server.example.com" target="_blank" rel="noopener">http://server.example.com</a></h4><p>从<a href="http://classroom.example.com/pub/example.html" target="_blank" rel="noopener">http://classroom.example.com/pub/example.html</a> 下载文件,</p><p>并重命名为 index.html，不要修改文件内容。</p><p>将文件 index.html 拷贝到您的 DocumentRoot 目录下</p><p>来自于 example.com 的客户端可以访问该 web 服务器</p><p>来自于 my133t.org 的客户端的访问会被拒绝</p><p><strong>server</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># yum install httpd -y</span></span><br><span class="line">[root@server0 ~]<span class="comment"># cd /var/www/html/</span></span><br><span class="line">[root@server0 html]<span class="comment"># ls</span></span><br><span class="line">[root@server0 html]<span class="comment"># wget -O  index.html http://classroom.example.com/pub/example.html</span></span><br><span class="line">[root@server0 html]<span class="comment"># ls</span></span><br><span class="line">index.html</span><br><span class="line">[root@server0 html]<span class="comment"># systemctl restart httpd</span></span><br><span class="line">[root@server0 html]<span class="comment"># systemctl enable httpd</span></span><br><span class="line">ln -s <span class="string">'/usr/lib/systemd/system/httpd.service'</span> <span class="string">'/etc/systemd/system/multi-user.target.wants/httpd.service'</span></span><br><span class="line">[root@server0 html]<span class="comment"># firewall-cmd --add-rich-rule 'rule family=ipv4 source address=172.25.0.0/24 service name=http accept' --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@server0 html]<span class="comment"># firewall-cmd --reload </span></span><br><span class="line">success</span><br></pre></td></tr></table></figure><blockquote><p>验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;[root@server0 html]<span class="comment"># curl http://server.example.com</span></span><br><span class="line">&gt; zheshi yige 在 server 上配置一个 web 站点</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h4 id="13-为站点-http-server-example-com-配置-TLS-加密"><a href="#13-为站点-http-server-example-com-配置-TLS-加密" class="headerlink" title="13.为站点 http://server.example.com 配置 TLS 加密"></a>13.为站点 <a href="http://server.example.com" target="_blank" rel="noopener">http://server.example.com</a> 配置 TLS 加密</h4><p>已签名证书从 <a href="http://classroom.example.com/pub/tls/certs/server0.crt" target="_blank" rel="noopener">http://classroom.example.com/pub/tls/certs/server0.crt</a> 获取</p><p>证书的秘钥从 <a href="http://classroom.example.com/pub/tls/private/server0.key" target="_blank" rel="noopener">http://classroom.example.com/pub/tls/private/server0.key</a> 获取</p><p>证书的签名授权信息从 <a href="http://classroom.example.com/pub/tls/certs/www0.crt" target="_blank" rel="noopener">http://classroom.example.com/pub/tls/certs/www0.crt</a> 获取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 html]<span class="comment"># yum -y install mod_ssl.x86_64</span></span><br><span class="line">[root@server0 html]<span class="comment"># cd /etc/httpd/conf.d/</span></span><br><span class="line">[root@server0 conf.d]<span class="comment"># vim ssl.conf </span></span><br><span class="line"><span class="comment">#到120行左右</span></span><br><span class="line">SSLCertificateFile /etc/pki/tls/certs/localhost.crt</span><br><span class="line">SSLCertificateKeyFile /etc/pki/tls/private/localhost.key</span><br><span class="line"><span class="comment">#SSLCACertificateFile /etc/pki/tls/certs/ca-bundle.crt</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将这三个的后面的文件名改掉，然后将最后一个的#号去掉，效果如下：</span></span><br><span class="line">SSLCertificateFile /etc/pki/tls/certs/server0.crt</span><br><span class="line">SSLCertificateKeyFile /etc/pki/tls/private/server0.key</span><br><span class="line">SSLCACertificateFile /etc/pki/tls/certs/www0.crt</span><br><span class="line"><span class="comment"># 记住这三个路径之后保存并退出</span></span><br><span class="line">[root@server0 conf.d]<span class="comment"># cd /etc/pki/tls/certs/</span></span><br><span class="line">[root@server0 certs]<span class="comment"># wget http://classroom.example.com/pub/tls/certs/server0.crt</span></span><br><span class="line">[root@server0 certs]<span class="comment"># cd /etc/pki/tls/private/</span></span><br><span class="line">[root@server0 private]<span class="comment"># wget http://classroom.example.com/pub/tls/private/server0.key</span></span><br><span class="line">[root@server0 private]<span class="comment"># cd /etc/pki/tls/certs/</span></span><br><span class="line">[root@server0 certs]<span class="comment"># wget http://classroom.example.com/pub/tls/certs/www0.crt</span></span><br><span class="line"></span><br><span class="line">[root@server0 certs]<span class="comment"># systemctl restart httpd.service </span></span><br><span class="line">[root@server0 certs]<span class="comment"># systemctl enable httpd.service </span></span><br><span class="line">[root@server0 certs]<span class="comment"># firewall-cmd --add-rich-rule 'rule family=ipv4 source address=172.25.0.0/24 service name=https accept' --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@server0 certs]<span class="comment"># firewall-cmd --reload </span></span><br><span class="line">success</span><br></pre></td></tr></table></figure><blockquote><p>验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@server0 certs]<span class="comment"># curl -k https://server.example.com</span></span><br><span class="line">&gt; zheshi yige 在 server 上配置一个 web 站点</span><br><span class="line">&gt; [root@server0 certs]<span class="comment"># curl http://server.example.com</span></span><br><span class="line">&gt; zheshi yige 在 server 上配置一个 web 站点</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="14-在-server-上扩展您的-WEB-服务器"><a href="#14-在-server-上扩展您的-WEB-服务器" class="headerlink" title="14.在 server 上扩展您的 WEB 服务器"></a>14.在 server 上扩展您的 WEB 服务器</h4><ol><li>为站点 <a href="http://www.example.com" target="_blank" rel="noopener">http://www.example.com</a> 创建一个虚拟主机</li><li>设置 DocumentRoot 为/var/www/virtual</li><li>从 <a href="http://classroom.example.com/pub/www.html" target="_blank" rel="noopener">http://classroom.example.com/pub/www.html</a> 下载文件,并重命名为 index.html,不要修改文件内容。</li><li>将文件 index.html 拷贝到 DocumentRoot 目录下</li><li>确保 floyd 用户能够在/var/www/virtual 下创建文件</li></ol><p><strong>server</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># find / -name *vhosts.conf</span></span><br><span class="line">/usr/share/doc/httpd-2.4.6/httpd-vhosts.conf</span><br><span class="line">[root@server0 ~]<span class="comment"># cp /usr/share/doc/httpd-2.4.6/httpd-vhosts.conf /etc/httpd/conf.d/</span></span><br><span class="line">[root@server0 ~]<span class="comment"># cd /etc/httpd/conf.d/</span></span><br><span class="line">[root@server0 conf.d]<span class="comment"># vim httpd-vhosts.conf </span></span><br><span class="line">[root@server0 conf.d]<span class="comment"># tail -n 8 httpd-vhosts.conf </span></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    DocumentRoot <span class="string">"/var/www/html"</span></span><br><span class="line">    ServerName server.example.com</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    DocumentRoot <span class="string">"/var/www/virtual"</span></span><br><span class="line">    ServerName www.example.com</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">[root@server0 ~]<span class="comment"># mkdir /var/www/virtual</span></span><br><span class="line">oot@server0 ~]<span class="comment"># cd /var/www/virtual/</span></span><br><span class="line">[root@server0 virtual]<span class="comment"># wget -O index.html http://classroom.example.com/pub/www.html</span></span><br><span class="line">[root@server0 conf.d]<span class="comment"># useradd floyd</span></span><br><span class="line">[root@server0 conf.d]<span class="comment"># setfacl -m u:floyd:rwx /var/www/virtual</span></span><br><span class="line">[root@server0 conf.d]<span class="comment"># systemctl restart httpd.service </span></span><br><span class="line">[root@server0 conf.d]<span class="comment"># systemctl enable httpd.service</span></span><br></pre></td></tr></table></figure><blockquote><p>验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@server0 conf.d]<span class="comment"># curl www.example.com </span></span><br><span class="line">&gt; zheshi yige 在 server 上扩展您的 WEB 服务器</span><br><span class="line">&gt; [root@server0 conf.d]<span class="comment"># curl -k https://server.example.com</span></span><br><span class="line">&gt; zheshi yige 在 server 上配置一个 web 站点</span><br><span class="line">&gt; [root@server0 conf.d]<span class="comment"># curl http://server.example.com</span></span><br><span class="line">&gt; zheshi yige 在 server 上配置一个 web 站点</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h4 id="15-web-访问控制"><a href="#15-web-访问控制" class="headerlink" title="15.web 访问控制"></a>15.web 访问控制</h4><p>在您 server 上的 web 服务器的 DocumentRoot 目录下创建一个名为 private 的目录</p><p>从<a href="http://classroom.example.com/pub/private.html" target="_blank" rel="noopener">http://classroom.example.com/pub/private.html</a> 下载文件到这个目录,并重命名为index.html,不要修改文件内容</p><p>从 server 上,任何人都可以浏览 private 的内容,但是从其他系统不能访问这个目录的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 conf.d]<span class="comment"># cd /var/www/html/</span></span><br><span class="line">[root@server0 html]<span class="comment"># mkdir private</span></span><br><span class="line">[root@server0 html]<span class="comment"># cd private/</span></span><br><span class="line">[root@server0 private]<span class="comment"># wget -O index.html http://classroom.example.com/pub/private.</span></span><br><span class="line">[root@server0 private]<span class="comment"># vim /etc/httpd/conf/httpd.conf</span></span><br><span class="line"><span class="comment">#搜索Requ，复制</span></span><br><span class="line">&lt;Directory /&gt;</span><br><span class="line">    AllowOverride none</span><br><span class="line">    Require all denied</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">[root@server0 private]<span class="comment"># vim /etc/httpd/conf.d/httpd-vhosts.conf</span></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    DocumentRoot <span class="string">"/var/www/html"</span></span><br><span class="line">    ServerName server.example.com</span><br><span class="line">   <span class="comment">#&lt;Directory "/var/www/html/private"&gt;</span></span><br><span class="line">   <span class="comment">#    Require ip 172.25.0.11</span></span><br><span class="line">   <span class="comment">#&lt;/Directory&gt;</span></span><br><span class="line">&lt;/VirtualHost&gt; </span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    DocumentRoot <span class="string">"/var/www/virtual"</span></span><br><span class="line">    ServerName www.example.com</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"><span class="comment"># 这里#号表示加在这里三个，不要照着敲，把#号都敲进去了</span></span><br><span class="line"></span><br><span class="line">[root@server0 private]<span class="comment"># systemctl restart httpd.service </span></span><br><span class="line">[root@server0 private]<span class="comment"># systemctl enable httpd.service</span></span><br></pre></td></tr></table></figure><blockquote><p>验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@server0 private]<span class="comment"># curl server.example.com/private/ </span></span><br><span class="line">&gt; zheshi yige web 访问控制</span><br><span class="line">&gt; <span class="comment"># 然后我们用客户端去访问</span></span><br><span class="line">&gt; root@desktop0 ~]<span class="comment"># curl server.example.com/private/</span></span><br><span class="line">&gt; &lt;!DOCTYPE HTML PUBLIC <span class="string">"-//IETF//DTD HTML 2.0//EN"</span>&gt;</span><br><span class="line">&gt; &lt;html&gt;&lt;head&gt;</span><br><span class="line">&gt; &lt;title&gt;403 Forbidden&lt;/title&gt;</span><br><span class="line">&gt; &lt;/head&gt;&lt;body&gt;</span><br><span class="line">&gt; &lt;h1&gt;Forbidden&lt;/h1&gt;</span><br><span class="line">&gt; &lt;p&gt;You don<span class="string">'t have permission to access /private/</span></span><br><span class="line"><span class="string">&gt; on this server.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&gt; &lt;/body&gt;&lt;/html&gt;</span></span><br><span class="line"><span class="string">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h4 id="16-在-server-上实现动态-web-内容"><a href="#16-在-server-上实现动态-web-内容" class="headerlink" title="16.在 server 上实现动态 web 内容"></a>16.在 server 上实现动态 web 内容</h4><p>动态内容由名为 alt.example.com 的虚拟主机提供虚拟主机侦听端口为 8909</p><p>从 <a href="http://classroom.example.com/pub/webapp.wsgi" target="_blank" rel="noopener">http://classroom.example.com/pub/webapp.wsgi</a> 下载一个脚本,然后放在适当的位置,不要修改文件内容</p><p>客户端访问 <a href="http://alt.example.com:8909" target="_blank" rel="noopener">http://alt.example.com:8909</a> 时,应该接收到动态生成的 web 页面此 <a href="http://alt.example.com:8909" target="_blank" rel="noopener">http://alt.example.com:8909</a> 必须能被 example.com 内所有的系统访问</p><p><strong>server</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 private]<span class="comment"># yum install mod_wsgi.x86_64 -y</span></span><br><span class="line">[root@server0 private]<span class="comment"># cd /var/www/</span></span><br><span class="line">[root@server0 www]<span class="comment"># mkdir wsgi</span></span><br><span class="line">[root@server0 www]<span class="comment"># cd wsgi/</span></span><br><span class="line">[root@server0 wsgi]<span class="comment"># wget http://classroom.example.com/pub/webapp.wsgi</span></span><br><span class="line">[root@server0 wsgi]<span class="comment"># vim /etc/httpd/conf.d/httpd-vhosts.conf </span></span><br><span class="line">[root@server0 wsgi]<span class="comment"># tail -n 5 /etc/httpd/conf.d/httpd-vhosts.conf </span></span><br><span class="line">Listen 8909</span><br><span class="line">&lt;VirtualHost *:8909&gt;</span><br><span class="line">    WSGIScriptAlias / <span class="string">"/var/www/wsgi/webapp.wsgi"</span></span><br><span class="line">    ServerName alt.example.com:8909</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">[root@server0 wsgi]<span class="comment"># firewall-cmd --add-rich-rule 'rule family=ipv4 port port=8909 protocol=tcp accept' --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@server0 wsgi]<span class="comment"># firewall-cmd --reload </span></span><br><span class="line">success</span><br><span class="line">[root@server0 wsgi]<span class="comment"># curl alt.example.com:8909</span></span><br><span class="line">curl: (7) Failed connect to alt.example.com:8909; Connection refused</span><br><span class="line">[root@server0 wsgi]<span class="comment"># semanage port -l | grep http</span></span><br><span class="line">http_cache_port_t              tcp      8080, 8118, 8123, 10001-10010</span><br><span class="line">http_cache_port_t              udp      3130</span><br><span class="line">http_port_t                    tcp      80, 81, 443, 488, 8008, 8009, 8443, 9000</span><br><span class="line">pegasus_http_port_t            tcp      5988</span><br><span class="line">pegasus_https_port_t           tcp      5989</span><br><span class="line">[root@server0 wsgi]<span class="comment"># semanage port -a -t http_port_t -p tcp 8909</span></span><br><span class="line">[root@server0 wsgi]<span class="comment"># systemctl restart httpd.service </span></span><br><span class="line">[root@server0 wsgi]<span class="comment"># systemctl enable httpd.service</span></span><br></pre></td></tr></table></figure><blockquote><p>验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; [root@server0 wsgi]<span class="comment"># curl http://alt.example.com:8909</span></span><br><span class="line">&gt; Hello World!</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="17-配置-server-提供一个-iSCSI-共享服务"><a href="#17-配置-server-提供一个-iSCSI-共享服务" class="headerlink" title="17.配置 server 提供一个 iSCSI 共享服务"></a>17.配置 server 提供一个 iSCSI 共享服务</h4><p>磁盘名为 iqn.2014-09.com.example:server</p><p>服务端口为 3260</p><p>使用 iscsi_store 作为其后端卷其大小为 3G</p><p>此服务只能被 desktop.example.com 访问</p><p><strong>server</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 wsgi]<span class="comment"># yum install targetcli* -y</span></span><br><span class="line">[root@server0 wsgi]<span class="comment"># lsblk </span></span><br><span class="line">NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT</span><br><span class="line">vda    253:0    0  10G  0 disk </span><br><span class="line">└─vda1 253:1    0  10G  0 part /</span><br><span class="line">vdb    253:16   0  10G  0 disk </span><br><span class="line">[root@server0 wsgi]<span class="comment"># fdisk /dev/vdb</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">Partition number (1-4, default 1): </span><br><span class="line">First sector (2048-20971519, default 2048): </span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-20971519, default 20971519): +3G</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">[root@server0 wsgi]<span class="comment"># partprobe </span></span><br><span class="line">[root@server0 wsgi]<span class="comment"># lsblk </span></span><br><span class="line">NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT</span><br><span class="line">vda    253:0    0  10G  0 disk </span><br><span class="line">└─vda1 253:1    0  10G  0 part /</span><br><span class="line">vdb    253:16   0  10G  0 disk </span><br><span class="line">└─vdb1 253:17   0   3G  0 part </span><br><span class="line">[root@server0 wsgi]<span class="comment"># targetcli </span></span><br><span class="line">/&gt; ls</span><br><span class="line">o- / ................................................ [...]</span><br><span class="line">  o- backstores ..................................... [...]</span><br><span class="line">  | o- block ........................................ [Storage Objects: 0]</span><br><span class="line">  | o- fileio ....................................... [Storage Objects: 0]</span><br><span class="line">  | o- pscsi ........................................ [Storage Objects: 0]</span><br><span class="line">  | o- ramdisk ...................................... [Storage Objects: 0]</span><br><span class="line">  o- iscsi .......................................... [Targets: 0]</span><br><span class="line">  o- loopback ....................................... [Targets: 0]</span><br><span class="line">/&gt; <span class="built_in">cd</span> /backstores/block </span><br><span class="line">/backstores/block&gt; create iscsi_store /dev/vdb1</span><br><span class="line">Created block storage object iscsi_store using /dev/vdb1.</span><br><span class="line">/backstores/block&gt; <span class="built_in">cd</span> /iscsi </span><br><span class="line">/iscsi&gt; create iqn.2014-09.com.example:server</span><br><span class="line">Created target iqn.2014-09.com.example:server.</span><br><span class="line">Created TPG 1.</span><br><span class="line">/iscsi&gt; ls</span><br><span class="line">o- iscsi ........................................... [Targets: 1]</span><br><span class="line">  o- iqn.2014-09.com.example:server ................ [TPGs: 1]</span><br><span class="line">    o- tpg1 ........................................ [no-gen-acls, no-auth]</span><br><span class="line">      o- acls ...................................... [ACLs: 0]</span><br><span class="line">      o- luns ...................................... [LUNs: 0]</span><br><span class="line">      o- portals ................................... [Portals: 0]</span><br><span class="line">/iscsi&gt; <span class="built_in">cd</span> iqn.2014-09.com.example:server/tpg1/acls </span><br><span class="line">/iscsi/iqn.20...ver/tpg1/acls&gt; create iqn.2014-09.com.example:desktop</span><br><span class="line">Created Node ACL <span class="keyword">for</span> iqn.2014-09.com.example:desktop</span><br><span class="line">/iscsi/iqn.20...ver/tpg1/acls&gt; <span class="built_in">cd</span> /iscsi/iqn.2014-09.com.example:server/tpg1/luns </span><br><span class="line">/iscsi/iqn.20...ver/tpg1/luns&gt; create /backstores/block/iscsi_store </span><br><span class="line">Created LUN 0.</span><br><span class="line">Created LUN 0-&gt;0 mapping <span class="keyword">in</span> node ACL iqn.2014-09.com.example:desktop</span><br><span class="line">/iscsi/iqn.20...ver/tpg1/luns&gt; <span class="built_in">cd</span> /iscsi/iqn.2014-09.com.example:server/tpg1/portals </span><br><span class="line">/iscsi/iqn.20.../tpg1/portals&gt; create 172.25.0.11 3260</span><br><span class="line">Using default IP port 3260</span><br><span class="line">Created network portal 172.25.0.11:3260.</span><br><span class="line">/iscsi/iqn.20.../tpg1/portals&gt; <span class="built_in">exit</span></span><br><span class="line">Global pref auto_save_on_exit=<span class="literal">true</span></span><br><span class="line">Last 10 configs saved <span class="keyword">in</span> /etc/target/backup.</span><br><span class="line">Configuration saved to /etc/target/saveconfig.json</span><br><span class="line"></span><br><span class="line">[root@server0 wsgi]<span class="comment"># firewall-cmd --add-rich-rule 'rule family="ipv4" source address="172.25.0.0/24" port port=3260 protocol=tcp accept' --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@server0 wsgi]<span class="comment"># firewall-cmd --reload </span></span><br><span class="line">success</span><br><span class="line">[root@server0 wsgi]<span class="comment"># systemctl restart target</span></span><br><span class="line">[root@server0 wsgi]<span class="comment"># systemctl enable target</span></span><br><span class="line">ln -s <span class="string">'/usr/lib/systemd/system/target.service'</span> <span class="string">'/etc/systemd/system/multi-user.target.wants/target.service'</span></span><br></pre></td></tr></table></figure><blockquote><p>这一题的验证是下一题</p></blockquote><h4 id="18-配置-desktop-使其能连接在-server-上提供的-iscsi"><a href="#18-配置-desktop-使其能连接在-server-上提供的-iscsi" class="headerlink" title="18.配置 desktop 使其能连接在 server 上提供的 iscsi"></a>18.配置 desktop 使其能连接在 server 上提供的 iscsi</h4><p>iSCSI 设备在系统启动的期间自动加载</p><p>块设备 iSCSI 上包含一个大小 1500MiB 的分区,并格式化为 ext4</p><p>此分区挂载在/mnt/netdev 上同时在系统启动的期间自动加载</p><p><strong>desktop</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop0 ~]<span class="comment"># yum install -y iscsi-init*</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># mkdir /mnt/netdev</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># vim /etc/iscsi/initiatorname.iscsi </span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># cat /etc/iscsi/initiatorname.iscsi </span></span><br><span class="line">InitiatorName=iqn.2014-09.com.example:desktop</span><br><span class="line">[root@desktop0 ~]<span class="comment"># systemctl restart iscsi iscsid</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># systemctl enable iscsi iscsid</span></span><br><span class="line">ln -s <span class="string">'/usr/lib/systemd/system/iscsid.service'</span> <span class="string">'/etc/systemd/system/multi-user.target.wants/iscsid.service'</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># iscsiadm -m discovery -t st -p 172.25.0.11</span></span><br><span class="line">172.25.0.11:3260,1 iqn.2014-09.com.example:server</span><br><span class="line">[root@desktop0 ~]<span class="comment"># iscsiadm -m node -l</span></span><br><span class="line">Logging <span class="keyword">in</span> to [iface: default, target: iqn.2014-09.com.example:server, portal: 172.25.0.11,3260] (multiple)</span><br><span class="line">Login to [iface: default, target: iqn.2014-09.com.example:server, portal: 172.25.0.11,3260] successful.</span><br><span class="line">[root@desktop0 ~]<span class="comment"># lsblk </span></span><br><span class="line">NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda      8:0    0   3G  0 disk </span><br><span class="line">vda    253:0    0  10G  0 disk </span><br><span class="line">└─vda1 253:1    0  10G  0 part /</span><br><span class="line">vdb    253:16   0  10G  0 disk </span><br><span class="line">[root@desktop0 ~]<span class="comment"># fdisk /dev/sda</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">Partition number (1-4, default 1): </span><br><span class="line">First sector (8192-6291455, default 8192): </span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (8192-6291455, default 6291455): +1500M</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">[root@desktop0 ~]<span class="comment"># partprobe</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># mkfs.ext4 /dev/sda1</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># blkid | grep sda</span></span><br><span class="line">/dev/sda1: UUID=<span class="string">"142c6ec3-0d06-4f89-91e3-8201e8186d37"</span> TYPE=<span class="string">"ext4"</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># vim /etc/fstab </span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># tail -n 1 /etc/fstab </span></span><br><span class="line">UUID=<span class="string">"142c6ec3-0d06-4f89-91e3-8201e8186d37"</span>/mnt/netdevext4 defaults,_netdev 0 0</span><br><span class="line">[root@desktop0 ~]<span class="comment"># mount -a</span></span><br><span class="line">[root@desktop0 ~]<span class="comment"># df -h</span></span><br><span class="line">/dev/vda1              10G  3.1G  7.0G  31% /</span><br><span class="line">devtmpfs              906M     0  906M   0% /dev</span><br><span class="line">tmpfs                 921M   80K  921M   1% /dev/shm</span><br><span class="line">.............................</span><br><span class="line">/dev/sda1             1.5G  4.5M  1.4G   1% /mnt/netdev</span><br></pre></td></tr></table></figure><h4 id="19-编写一个位于-root-program-的-shell-脚本"><a href="#19-编写一个位于-root-program-的-shell-脚本" class="headerlink" title="19.编写一个位于/root/program 的 shell 脚本"></a>19.编写一个位于/root/program 的 shell 脚本</h4><p>当执行/root/program tang 时,终端显示 kai</p><p>当执行/root/program kai 时,终端显示 tang</p><p>当仅执行/root/program 不加参数,或者加上其他参数时,终端显示标准错误输出/root/program tang|kai</p><p><strong>server</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># vim /root/program</span></span><br><span class="line">[root@server0 ~]<span class="comment"># cat /root/program </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">    tang)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"kai"</span></span><br><span class="line">;;</span><br><span class="line">    kai)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tang"</span></span><br><span class="line">;;</span><br><span class="line">    *)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"/root/program tang|kai"</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">[root@server0 ~]<span class="comment"># chmod +x /root/program</span></span><br><span class="line">[root@server0 ~]<span class="comment"># /root/program tang </span></span><br><span class="line">kai</span><br><span class="line">[root@server0 ~]<span class="comment"># /root/program kai</span></span><br><span class="line">tang</span><br><span class="line">[root@server0 ~]<span class="comment"># /root/program</span></span><br><span class="line">/root/program tang|kai</span><br></pre></td></tr></table></figure><h4 id="20-写一个创建用户的脚本"><a href="#20-写一个创建用户的脚本" class="headerlink" title="20.写一个创建用户的脚本"></a>20.写一个创建用户的脚本</h4><p>脚本名为/root/mkuser,脚本执行时需要添加一个参数,</p><p>请在 <a href="http://classroom.example.com/pub/user" target="_blank" rel="noopener">http://classroom.example.com/pub/user</a> 下载下来,这个 user 就是参数</p><p>如果没有参数,将提示:Usage:/root/mkuser</p><p>如果参数为不存在的文件,则提示:Input file not found</p><p>如果存在,则创建用户,用户不需要设置密码,用户的 shell 为/bin/flase</p><p><strong>server</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># vim /root/mkuser</span></span><br><span class="line">[root@server0 ~]<span class="comment"># cat /root/mkuser </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Usage:/root/mkuser"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> [ -f <span class="variable">$1</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> $(cat <span class="variable">$1</span>);<span class="keyword">do</span></span><br><span class="line">useradd -s /bin/flase <span class="variable">$user</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Input file not found"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">[root@server0 ~]<span class="comment"># chmod +x /root/mkuser </span></span><br><span class="line">[root@server0 ~]<span class="comment"># cd /root</span></span><br><span class="line">[root@server0 ~]<span class="comment"># wget http://classroom.example.com/pub/user </span></span><br><span class="line">[root@server0 ~]<span class="comment"># /root/mkuser</span></span><br><span class="line">Usage:/root/mkuser</span><br><span class="line">[root@server0 ~]<span class="comment"># /root/mkuser dfs</span></span><br><span class="line">Input file not found</span><br><span class="line">[root@server0 ~]<span class="comment"># /root/mkuser user</span></span><br><span class="line">[root@server0 ~]<span class="comment"># id user1</span></span><br><span class="line">uid=1001(user1) gid=1001(user1) groups=1001(user1)</span><br><span class="line">[root@server0 ~]<span class="comment"># id user2</span></span><br><span class="line">uid=1002(user2) gid=1002(user2) groups=1002(user2)</span><br><span class="line">[root@server0 ~]<span class="comment"># id user3</span></span><br><span class="line">uid=1003(user3) gid=1003(user3) groups=1003(user3)</span><br><span class="line">[root@server0 ~]<span class="comment"># cat user </span></span><br><span class="line">user1</span><br><span class="line">user2</span><br><span class="line">user3</span><br><span class="line">user4</span><br><span class="line">user5</span><br><span class="line">[root@server0 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h4 id="21-在你的机器上创建一个-mariadb-数据库"><a href="#21-在你的机器上创建一个-mariadb-数据库" class="headerlink" title="21.在你的机器上创建一个 mariadb 数据库;"></a>21.在你的机器上创建一个 mariadb 数据库;</h4><p>数据库名为 contacts</p><p>数据库应该包含来自数据库复制的内容。复制文件的 URL 为<br><a href="http://classroom.example.com/pub/user.mdb" target="_blank" rel="noopener">http://classroom.example.com/pub/user.mdb</a></p><p>数据库只能被 localhost 访问</p><p>除了 root 用户,此数据库只能被用户 raikon 查询,此用户密码为 redhat</p><p>root 用户密码为 redhat,同时不允许空密码登陆</p><p><strong>server</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@server0 ~]<span class="comment"># yum install mariadb* -y</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl restart mariadb</span></span><br><span class="line">[root@server0 ~]<span class="comment"># systemctl enable mariadb</span></span><br><span class="line">ln -s <span class="string">'/usr/lib/systemd/system/mariadb.service'</span> <span class="string">'/etc/systemd/system/multi-user.target.wants/mariadb.service'</span></span><br><span class="line">[root@server0 ~]<span class="comment"># mysql_secure_installation</span></span><br><span class="line">Set root password? [Y/n] y</span><br><span class="line">New password: <span class="comment">#redhat</span></span><br><span class="line">Re-enter new password: <span class="comment">#redhat</span></span><br><span class="line">Password updated successfully!</span><br><span class="line">Remove anonymous users? [Y/n] y</span><br><span class="line"> ... Success!</span><br><span class="line">Disallow root login remotely? [Y/n] n</span><br><span class="line"> ... skipping.</span><br><span class="line">Remove <span class="built_in">test</span> database and access to it? [Y/n] y</span><br><span class="line"> - Dropping <span class="built_in">test</span> database...</span><br><span class="line"> ... Success!</span><br><span class="line">Reload privilege tables now? [Y/n] y</span><br><span class="line"> ... Success!</span><br><span class="line">[root@server0 ~]<span class="comment"># wget http://classroom.example.com/pub/users.mdb</span></span><br><span class="line"></span><br><span class="line">[root@server0 ~]<span class="comment"># mysql -uroot -predhat</span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 11</span><br><span class="line">Server version: 5.5.35-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2013, Oracle, Monty Program Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; create database Contacts;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use Contacts;</span><br><span class="line">Database changed</span><br><span class="line">MariaDB [Contacts]&gt; <span class="built_in">source</span> /root/user.mdb;</span><br><span class="line">MariaDB [Contacts]&gt; grant select on Contacts .* to <span class="string">'raikon@localhost'</span> identified by <span class="string">'redhat'</span>;</span><br><span class="line">MariaDB [Contacts]&gt; flush privileges;</span><br><span class="line">MariaDB [Contacts]&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h4 id="24-数据库查询"><a href="#24-数据库查询" class="headerlink" title="24.数据库查询"></a>24.数据库查询</h4><p>在 system1 上使用数据库 Contacts ，并使用相应的 SQL 查询以回答下列问题：</p><p> 密码是fadora 的人的名字是什么？</p><p> 有多少人的姓名是 John ，同时居住在 Santa Clara ？</p><h3 id="system1"><a href="#system1" class="headerlink" title="system1"></a>system1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@system1 ~]<span class="comment"># mysql -u root -predhat</span></span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use Contacts;</span><br><span class="line"></span><br><span class="line">MariaDB [Contacts]&gt; SELECT u_name.firstname FROM u_name, u_passwd WHERE u_name.userid = u_passwd.uid AND u_passwd.password = <span class="string">'fadora'</span>;</span><br><span class="line">+-----------+</span><br><span class="line">| firstname |</span><br><span class="line">+-----------+</span><br><span class="line">| John      |</span><br><span class="line">+-----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [Contacts]&gt; SELECT COUNT(*) FROM u_name,u_loc WHERE u_name.userid = u_loc.uid AND u_name.firstname = <span class="string">'John'</span> AND u_loc.location = <span class="string">'Santa Clara'</span>;</span><br><span class="line">+----------+</span><br><span class="line">| COUNT(*) |</span><br><span class="line">+----------+</span><br><span class="line">|        4 |</span><br><span class="line">+----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>密码是fadora 的人的名字是什么？</strong></p><p>John</p><p><strong>有多少人的姓名是 John ，同时居住在 Santa Clara ？</strong></p><p> 4</p><blockquote><p>在这里，考者请切记，查询之后的答案记住一定要填写到所填写的正确地方。</p><p>不要忘记填写进去</p></blockquote><p>》》》》》》》》》》》》》》》》》》》》》》</p><blockquote><p>以上就是本次RHCE 7 版本的认证考试参考答案，如有错误请联系博主进行更改，最后祝愿大家RHCE认证取得好成绩！！！！</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;写在前面的话：考试练习不等于真实考试考题，里面的数据可能也与您考试练习的数据不一样，请认真仔细。祝愿RHCE取得好成绩！！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;模拟考前配置&quot;&gt;&lt;a href=&quot;#模拟考前配
      
    
    </summary>
    
    
      <category term="linux进阶" scheme="https://github.com/chineselijie/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux进阶" scheme="https://github.com/chineselijie/tags/linux%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统磁盘管理</title>
    <link href="https://github.com/chineselijie/2019/08/29/13.linux--linux%E7%B3%BB%E7%BB%9F%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    <id>https://github.com/chineselijie/2019/08/29/13.linux--linux%E7%B3%BB%E7%BB%9F%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/</id>
    <published>2019-08-29T15:44:18.590Z</published>
    <updated>2019-08-22T12:09:27.741Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[toc]</p><h2 id="磁盘基本概述"><a href="#磁盘基本概述" class="headerlink" title="磁盘基本概述"></a>磁盘基本概述</h2><h3 id="磁盘分类"><a href="#磁盘分类" class="headerlink" title="磁盘分类"></a>磁盘分类</h3><ul><li>固态硬盘</li></ul><p><img src="https://s2.ax1x.com/2019/04/28/EMoKrq.jpg" alt></p><p><img src="https://s2.ax1x.com/2019/04/28/EMoas1.jpg" alt></p><ul><li>机械硬盘</li></ul><p><img src="https://s2.ax1x.com/2019/04/28/EMoOLq.jpg" alt></p><p><img src="https://s2.ax1x.com/2019/04/28/EMoxoT.jpg" alt></p><ul><li>服务器硬盘</li></ul><p><img src="https://s2.ax1x.com/2019/04/28/EMT9W4.jpg" alt></p><h3 id="固态硬盘的优缺点"><a href="#固态硬盘的优缺点" class="headerlink" title="固态硬盘的优缺点"></a>固态硬盘的优缺点</h3><p>优点：</p><ul><li>读写速度快</li><li>防震抗摔性</li><li>低功耗</li><li>无噪音</li><li>工作温度范围大</li><li>轻便</li></ul><p>缺点</p><ul><li>容量小</li><li>寿命有限制</li><li>售价高</li></ul><h3 id="Linux中磁盘命令方式"><a href="#Linux中磁盘命令方式" class="headerlink" title="Linux中磁盘命令方式"></a>Linux中磁盘命令方式</h3><p>Linux中磁盘的命名方式与磁盘的接口有关，规则如下：</p><ul><li>传统IDE接口硬盘：<code>/dev/hd[a-z]</code></li><li>SCISI接口硬盘：<code>/dev/sd[a-z]</code></li><li>虚拟化硬盘：<code>/dev/vd[a-z]</code></li></ul><p>在设备名称的定义规则如下, 其他的分区可以以此类推<br>系统的第一块SCSI接口的硬盘名称为<code>/dev/sda</code><br>系统的第二块SCSI接口的硬盘名称为<code>/dev/sdb</code><br>系统中分区由数字编号表示, 1-4留给主分区使用和扩展分区, 逻辑分区从5开始</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//第一块磁盘</span><br><span class="line">/dev/sda</span><br><span class="line">//第一块磁盘的第一个分区</span><br><span class="line">/dev/sda1</span><br><span class="line">//第二块磁盘的第一个分区</span><br><span class="line">/dev/sdb1</span><br></pre></td></tr></table></figure><h3 id="MBR与GPT"><a href="#MBR与GPT" class="headerlink" title="MBR与GPT"></a>MBR与GPT</h3><p>在使用新磁盘之前，你必须对其进行分区。MBR（Master Boot Record）和GPT（GUID Partition Table）是在磁盘上存储分区信息的两种不同方式。这些分区信息包含了分区从哪里开始的信息，这样操作系统才知道哪个扇区是属于哪个分区的，以及哪个分区是可以启动的。在磁盘上创建分区时，你必须在MBR和GPT之间做出选择</p><p>MBR是Master Boot Record的简称，也就是主引导记录，是位于磁盘最前边的一段引导（Loader）代码，主要用来引导操作系统的加载与启动，在传统<a href="https://www.baidu.com/s?wd=硬盘&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">硬盘</a>分区模式中，引导扇区是每个分区（Partition）的第一扇区，而主引导扇区是硬盘的第一扇区。为了方便计算机访问硬盘，把硬盘上的空间划分成许许多多的区块（英文叫sectors，即扇区），然后给每个区块分配一个地址，称为逻辑块地址（即LBA）。</p><blockquote><p>特点：</p><ol><li>MBR支持最大2TB磁盘，它无法处理大于2TB容量的磁盘</li><li>只支持最多4个主分区。若想要更多分区，需要创建扩展分区，并在其中创建逻辑分区</li></ol></blockquote><p>GPT磁盘是指使用GUID分区表的磁盘，GUID磁盘分区表（GUID Partition Table，缩写：GPT）其含义为“全局唯一标识磁盘分区表”，是一个实体硬盘的分区表的结构布局的标准，</p><blockquote><p>特点：</p><ol><li>GPT对磁盘大小没有限制</li><li>最多可以创建128个分区</li></ol></blockquote><p><strong>注意：</strong></p><blockquote><p>MBR与GPT之间互相转换会导致数据丢失</p></blockquote><p><a href="https://baike.baidu.com/item/%E4%B8%BB%E5%BC%95%E5%AF%BC%E8%AE%B0%E5%BD%95/7612638?fromtitle=mbr&fromid=10473976" target="_blank" rel="noopener">MBR</a></p><p><a href="https://baike.baidu.com/item/GPT/15413476" target="_blank" rel="noopener">GPT</a></p><p><a href="https://blog.csdn.net/u011198997/article/details/78734628" target="_blank" rel="noopener">MBR和GPT分区区别</a></p><h2 id="磁盘容量检查"><a href="#磁盘容量检查" class="headerlink" title="磁盘容量检查"></a>磁盘容量检查</h2><p>使用<code>df</code>命令查看磁盘容量，不加参数以k为单位：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">df -i   //查看inode使用情况</span><br><span class="line">df -h   //以G或者T或者M人性化方式显示</span><br><span class="line">df -T   //查看文件类型</span><br><span class="line"></span><br><span class="line">//使用df命令查看磁盘，下面分别介绍每列什么含义</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># df -Th</span></span><br><span class="line">文件系统              类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/rhel-root xfs        17G  3.4G   14G   20% /</span><br><span class="line">devtmpfs              devtmpfs  977M     0  977M    0% /dev</span><br><span class="line">tmpfs                 tmpfs     993M  5.9M  987M    1% /dev/shm</span><br><span class="line">tmpfs                 tmpfs     993M  9.1M  984M    1% /run</span><br><span class="line">tmpfs                 tmpfs     993M     0  993M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sr0              iso9660   3.8G  3.8G     0  100% /mnt/cdrom</span><br><span class="line">/dev/sda1             xfs      1014M  161M  854M   16% /boot</span><br><span class="line">tmpfs                 tmpfs     199M   28K  199M    1% /run/user/0</span><br></pre></td></tr></table></figure><p>使用<code>lsblk</code>查看分区情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment">#  lsblk</span></span><br><span class="line">NAME          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda             8:0    0   20G  0 disk</span><br><span class="line">├─sda1          8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2          8:2    0   19G  0 part</span><br><span class="line">  ├─rhel-root 253:0    0   17G  0 lvm  /</span><br><span class="line">  └─rhel-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">sr0            11:0    1  3.8G  0 rom  /mnt/cdrom</span><br></pre></td></tr></table></figure><p>使用<code>du</code>命令查看目录或者文件的容量，不加参数以k为单位：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">du -sh opt  //人性化输出显示大小</span><br><span class="line">-s：列出总和</span><br><span class="line">-h：人性化显示容量信息</span><br></pre></td></tr></table></figure><blockquote><p>查看etc目录的大小</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># du -sh /etc</span></span><br><span class="line">43M     /etc</span><br></pre></td></tr></table></figure><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>分区之前, 需要先给虚拟机添加一块磁盘，以便于我们做后续的实验vmware虚拟机，请按如下进行操作:</p><blockquote><p>1.找到对应虚拟主机点击右键, 选择设置<br>2.在硬件向导里面点击添加按钮, 在硬件类型中选中“硬盘”, 点击下一步<br>3.磁盘类型选择默认, 然后创建新虚拟磁盘, 调整大小(不要勾选立即分配空间)<br>4.最后点击下一步, 完成即可</p></blockquote><p><strong>分区工具有fdisk和gdisk，当硬盘小于2T的时候我们应该用fdisk来分区，而当硬盘大于2T的时候则应用gdisk来进行分区</strong></p><h3 id="fdisk分区"><a href="#fdisk分区" class="headerlink" title="fdisk分区"></a>fdisk分区</h3><blockquote><p>生产分区建议：如无特殊希求，直接使用整个磁盘即可，无需分区</p></blockquote><blockquote><p>学习分区建议： 1P+1E(3L) 2P+1E(2L) 3P+1E(1L) (仅适用于练习)</p><p>1P:一个主分区</p><p>1E:一个扩展分区</p><p>3L:三个逻辑分区</p></blockquote><blockquote><p> <strong>本章切记 学习分区加入两块磁盘，虚拟机中会出现/dev/sdb，sdc，请使用sdb或者sdc来练习，最好fdisk分区使用/dev/sdb，gdisk分区使用/dev/sdc</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># fdisk -l /dev/sda</span></span><br><span class="line"></span><br><span class="line">磁盘 /dev/sda：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x000bf37c</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># fdisk /dev/sda</span></span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：m     //输入m获取帮助</span><br><span class="line">命令操作</span><br><span class="line">   a   toggle a bootable flag     //切换分区启动标记</span><br><span class="line">   b   edit bsd disklabel          //编辑sdb磁盘标签 </span><br><span class="line">   c   toggle the dos compatibility flag   //切换dos兼容模式 </span><br><span class="line">   d   delete a partition          //删除分区</span><br><span class="line">   g   create a new empty GPT partition table   //创建新的空GPT分区表</span><br><span class="line">   G   create an IRIX (SGI) partition table     //创建IRIX（SGI）分区表</span><br><span class="line">   l   list known partition types     //显示分区类型</span><br><span class="line">   m   <span class="built_in">print</span> this menu               //显示帮助菜单</span><br><span class="line">   n   add a new partition           //新建分区 </span><br><span class="line">   o   create a new empty DOS partition table    //创建新的空白分区表    </span><br><span class="line">   p   <span class="built_in">print</span> the partition table         //显示分区表的信息</span><br><span class="line">   q   quit without saving changes        //不保存退出</span><br><span class="line">   s   create a new empty Sun disklabel   //创建新的Sun磁盘标签</span><br><span class="line">   t   change a partition<span class="string">'s system id      //修改分区ID,可以通过l查看id</span></span><br><span class="line"><span class="string">   u   change display/entry units           //修改容量单位,磁柱或扇区</span></span><br><span class="line"><span class="string">   v   verify the partition table          //检验分区表 </span></span><br><span class="line"><span class="string">   w   write table to disk and exit         //保存退出 </span></span><br><span class="line"><span class="string">   x   extra functionality (experts only)    //拓展功能</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 创建主分区</span></span><br><span class="line"><span class="string">命令(输入 m 获取帮助)：n   //新建分区</span></span><br><span class="line"><span class="string">Partition type:</span></span><br><span class="line"><span class="string">   p   primary (0 primary, 0 extended, 4 free)    //主分区</span></span><br><span class="line"><span class="string">   e   extended       //扩展分区    </span></span><br><span class="line"><span class="string">Select (default p): p      //选择主分区  </span></span><br><span class="line"><span class="string">分区号 (1-4，默认 1)：     //默认回车</span></span><br><span class="line"><span class="string">起始 扇区 (2048-41943039，默认为 2048)：   //默认扇区回车</span></span><br><span class="line"><span class="string">将使用默认值 2048</span></span><br><span class="line"><span class="string">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-41943039，默认为 41943039)：+505M  //分配505M</span></span><br><span class="line"><span class="string">分区 1 已设置为 Linux 类型，大小设为 505 MiB</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 创建扩展分区</span></span><br><span class="line"><span class="string">命令(输入 m 获取帮助)：n    //新建分区</span></span><br><span class="line"><span class="string">Partition type:</span></span><br><span class="line"><span class="string">   p   primary (1 primary, 0 extended, 3 free)</span></span><br><span class="line"><span class="string">   e   extended</span></span><br><span class="line"><span class="string">Select (default p): e     //创建扩展分区</span></span><br><span class="line"><span class="string">分区号 (2-4，默认 2)：     //默认回车</span></span><br><span class="line"><span class="string">起始 扇区 (1036288-41943039，默认为 1036288)：   //默认扇区回车</span></span><br><span class="line"><span class="string">将使用默认值 1036288</span></span><br><span class="line"><span class="string">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (1036288-41943039，默认为 41943039)：     //默认划分所有空间给扩展分区</span></span><br><span class="line"><span class="string">将使用默认值 41943039</span></span><br><span class="line"><span class="string">分区 2 已设置为 Extended 类型，大小设为 19.5 GiB</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 创建逻辑分区</span></span><br><span class="line"><span class="string">命令(输入 m 获取帮助)：n   //新建分区</span></span><br><span class="line"><span class="string">Partition type:</span></span><br><span class="line"><span class="string">   p   primary (1 primary, 1 extended, 2 free)</span></span><br><span class="line"><span class="string">   l   logical (numbered from 5)</span></span><br><span class="line"><span class="string">Select (default p): l      //创建逻辑分区</span></span><br><span class="line"><span class="string">添加逻辑分区 5</span></span><br><span class="line"><span class="string">起始 扇区 (1038336-41943039，默认为 1038336)：</span></span><br><span class="line"><span class="string">将使用默认值 1038336</span></span><br><span class="line"><span class="string">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (1038336-41943039，默认为 41943039)：+10G   //分配10G的逻辑分区</span></span><br><span class="line"><span class="string">分区 5 已设置为 Linux 类型，大小设为 10 GiB</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 查看分区创建</span></span><br><span class="line"><span class="string">命令(输入 m 获取帮助)：p</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">磁盘 /dev/sda：21.5 GB, 21474836480 字节，41943040 个扇区</span></span><br><span class="line"><span class="string">Units = 扇区 of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string">扇区大小(逻辑/物理)：512 字节 / 512 字节</span></span><br><span class="line"><span class="string">I/O 大小(最小/最佳)：512 字节 / 512 字节</span></span><br><span class="line"><span class="string">磁盘标签类型：dos</span></span><br><span class="line"><span class="string">磁盘标识符：0x000bf37c</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   设备 Boot      Start         End      Blocks   Id  System</span></span><br><span class="line"><span class="string">/dev/sda1            2048     1036287      517120   83  Linux</span></span><br><span class="line"><span class="string">/dev/sda2         1036288    41943039    20453376    5  Extended</span></span><br><span class="line"><span class="string">/dev/sda5         1038336    22009855    10485760   83  Linux</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 保存分区</span></span><br><span class="line"><span class="string">命令(输入 m 获取帮助)：w</span></span><br><span class="line"><span class="string">The partition table has been altered!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Calling ioctl() to re-read partition table.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">WARNING: Re-reading the partition table failed with error 16: 设备或资源忙.</span></span><br><span class="line"><span class="string">The kernel still uses the old table. The new table will be used at</span></span><br><span class="line"><span class="string">the next reboot or after you run partprobe(8) or kpartx(8)</span></span><br><span class="line"><span class="string">正在同步磁盘。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 检查磁盘是否是MBR分区方式</span></span><br><span class="line"><span class="string">[root@zhoulijie ~]# fdisk -l /dev/sda | grep 类型</span></span><br><span class="line"><span class="string">磁盘标签类型：dos</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"># 安装parted, 刷新内核立即生效,无需重启</span></span><br><span class="line"><span class="string">[root@zhoulijie ~]# yum -y install parted</span></span><br><span class="line"><span class="string">[root@zhoulijie ~]# partprobe /dev/sda</span></span><br></pre></td></tr></table></figure><h3 id="gdisk分区"><a href="#gdisk分区" class="headerlink" title="gdisk分区"></a>gdisk分区</h3><blockquote><p><strong>在这里可以把刚才加入的磁盘拿出来使用：/dev/sdc，下面sda都皆是指代sdc</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装gdisk工具</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># yum -y install gdisk</span></span><br><span class="line"></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># gdisk /dev/sda</span></span><br><span class="line">Command (? <span class="keyword">for</span> <span class="built_in">help</span>): n       //创建新分区</span><br><span class="line">Partition number (1-128, default 1):     //默认回车 </span><br><span class="line">First sector (34-41943006, default = 2048) or &#123;+-&#125;size&#123;KMGTP&#125;:    //默认扇区回车</span><br><span class="line">Last sector (2048-41943006, default = 41943006) or &#123;+-&#125;size&#123;KMGTP&#125;: +505M   //分配505M空间   </span><br><span class="line">Current <span class="built_in">type</span> is <span class="string">'Linux filesystem'</span></span><br><span class="line">Hex code or GUID (L to show codes, Enter = 8300):     //默认回车 </span><br><span class="line">Changed <span class="built_in">type</span> of partition to <span class="string">'Linux filesystem'</span></span><br><span class="line"></span><br><span class="line">Command (? <span class="keyword">for</span> <span class="built_in">help</span>): p    //打印查看</span><br><span class="line">Disk /dev/sda: 41943040 sectors, 20.0 GiB</span><br><span class="line">Logical sector size: 512 bytes</span><br><span class="line">Disk identifier (GUID): 2EFF9F0B-87D9-4140-9ECE-AFBE23BB0C81</span><br><span class="line">Partition table holds up to 128 entries</span><br><span class="line">First usable sector is 34, last usable sector is 41943006</span><br><span class="line">Partitions will be aligned on 2048-sector boundaries</span><br><span class="line">Total free space is 40908733 sectors (19.5 GiB)</span><br><span class="line"></span><br><span class="line">Number  Start (sector)    End (sector)  Size       Code  Name</span><br><span class="line">   1            2048         1036287   505.0 MiB   8300  Linux filesystem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Command (? <span class="keyword">for</span> <span class="built_in">help</span>): w   //保存分区</span><br><span class="line"></span><br><span class="line">Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING</span><br><span class="line">PARTITIONS!!</span><br><span class="line"></span><br><span class="line">Do you want to proceed? (Y/N): y       //确认</span><br><span class="line">OK; writing new GUID partition table (GPT) to /dev/sda.</span><br><span class="line">Warning: The kernel is still using the old partition table.</span><br><span class="line">The new table will be used at the next reboot.</span><br><span class="line">The operation has completed successfully.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查磁盘是否是gpt格式</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># fdisk -l /dev/sda | grep 类型</span></span><br><span class="line">WARNING: fdisk GPT support is currently new, and therefore <span class="keyword">in</span> an experimental phase. Use at your own discretion.</span><br><span class="line">磁盘标签类型：gpt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装parted, 刷新内核立即生效,无需重启</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># yum -y install parted</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># partprobe /dev/sda</span></span><br></pre></td></tr></table></figure><h2 id="磁盘格式化"><a href="#磁盘格式化" class="headerlink" title="磁盘格式化"></a>磁盘格式化</h2><p>使用<code>mkfs</code>命令格式化磁盘，创建文件系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkfs常用的选项有</span></span><br><span class="line">-b  //设定数据区块占用空间大小，目前支持1024、2048、4096 bytes每个块。</span><br><span class="line">-t  //用来指定什么类型的文件系统，可以是ext3，ext4, xfs</span><br><span class="line">-i  //设定inode的大小</span><br><span class="line">-N  //设定inode数量，防止Inode数量不够导致磁盘不足</span><br><span class="line">-L  //预设该分区的标签label</span><br><span class="line"></span><br><span class="line"><span class="comment"># 首先使用lsblk，列出磁盘分区情况</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># lsblk</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化整个sdb磁盘为ext4文件系统</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mkfs.ext4  /dev/sdb1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以使用-t指定方式创建ext4文件系统</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mkfs -t ext4  /dev/sdb1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以格式化sdb1分区为xfs文件系统</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mkfs.xfs  /dev/sdb1</span></span><br></pre></td></tr></table></figure><h2 id="磁盘挂载"><a href="#磁盘挂载" class="headerlink" title="磁盘挂载"></a>磁盘挂载</h2><p>在上面的内容中讲到了磁盘的分区和格式化, 那么格式化完了后, 如何使用, 这就涉及到了挂载这块磁盘</p><blockquote><p>挂载分区前需要创建挂载点, 挂载点以目录形式出现<br>如果往挂载点目录写入数据, 实际上会写入到该分区<br>挂载点建议是空目录, 不是也不影响挂载分区的使用，但是会隐藏原有的文件</p></blockquote><h3 id="临时挂载磁盘"><a href="#临时挂载磁盘" class="headerlink" title="临时挂载磁盘"></a>临时挂载磁盘</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">命令：mount挂载磁盘，实质为文件系统指定访问入口</span><br><span class="line">mount -t       //指定文件系统挂载分区，如ext3，ext4, xfs</span><br><span class="line">mount -a       //重新读取/etc/fstab配置文件的所有分区</span><br><span class="line">mount -o       //指定挂载参数</span><br><span class="line"></span><br><span class="line"><span class="comment"># fstab被损坏情况下,让只读文件系统可写（正常情况下不使用）</span></span><br><span class="line">[root@localhost ~]<span class="comment">#mount -o rw，remount /  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载/dev/sdb1至db1目录</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mkdir /db1</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mount -t xfs /dev/sdb1  /db1</span></span><br></pre></td></tr></table></figure><h3 id="永久挂载磁盘"><a href="#永久挂载磁盘" class="headerlink" title="永久挂载磁盘"></a>永久挂载磁盘</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//使用blkid命令获取各分区的UUID</span><br><span class="line">[root@localhost ~]# blkid |grep &quot;sdb1&quot;</span><br><span class="line">/dev/sdb1: UUID=&quot;e271b5b2-b1ba-4b18-bde5-66e394fb02d9&quot; TYPE=&quot;xfs&quot;</span><br><span class="line"></span><br><span class="line">//使用UUID挂载磁盘sdb1分区至于db1, 临时挂载</span><br><span class="line">[root@localhost ~]# mount UUID=&quot;e271b5b2-b1ba-4b18-bde5-66e394fb02d9&quot; /db1</span><br><span class="line"></span><br><span class="line">//也可以把下面这行写到/etc/fstab中，永久挂载, 开机自动挂载</span><br><span class="line">[root@localhost ~]# tail -1 /etc/fstab    </span><br><span class="line">UUID=e271b5b2-b1ba-4b18-bde5-66e394fb02d9 /db1 xfs  defaults 0  0</span><br><span class="line"></span><br><span class="line">//加载fstab配置文件, 同时检测语法是否有错误</span><br><span class="line">[root@localhost ~]# mount –a</span><br></pre></td></tr></table></figure><p><code>fstab</code>配置文件介绍：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/fstab</span><br><span class="line"></span><br><span class="line">//分区标识(UUID或设备名)                    挂载点 文件类型    挂载参数    不检查 不备份</span><br><span class="line">UUID=e271b5b2-b1ba-4b18-bde5-66e394fb02d9 /db1     xfs     defaults    0     0</span><br><span class="line"></span><br><span class="line">//挂载参数, 可写fstab配置文件, 也可以mount时使用-o参数指定</span><br><span class="line">参数              参数意义                               系统默认值</span><br><span class="line">async           系统每隔一段时间把内存数据写入磁盘中，</span><br><span class="line">sync            时时同步内存和磁盘中数据；</span><br><span class="line">suid，nosuid     允许/不允许分区有suid属性                suid</span><br><span class="line">rw，ro           可以指定文件系统是只读(ro)或可写(rw)       rw</span><br><span class="line">exec，noexec     允许/不允许可执行文件执行，不要挂载根分区    exec</span><br><span class="line">user，nouser     允许/不允许root外的其他用户挂载分区        nouser</span><br><span class="line">auto，noauto     开机自动挂载/不自动挂载                    auto</span><br><span class="line">default         默认文件系统挂载设置 rw, suid, dev, exec, auto, nouser, async</span><br><span class="line"></span><br><span class="line">//加载所有配置</span><br><span class="line">[root@localhost ~]# mount -a</span><br></pre></td></tr></table></figure><h3 id="卸载挂载磁盘"><a href="#卸载挂载磁盘" class="headerlink" title="卸载挂载磁盘"></a>卸载挂载磁盘</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">umount -lf  //强制卸载挂载</span><br><span class="line"></span><br><span class="line">//使用站点目录卸载</span><br><span class="line">[root@localhost ~]# umount /db1</span><br><span class="line">//使用设备名卸载/dev/sdb1</span><br><span class="line">[root@localhost ~]# umount /dev/sdb1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//umount不能卸载的情况</span><br><span class="line">[root@localhost db1]# umount /db1  </span><br><span class="line">umount: /db1: device is busy.</span><br><span class="line">        (In some cases useful info about processes that use</span><br><span class="line">         the device is found by lsof(8) or fuser(1)</span><br><span class="line">       </span><br><span class="line">//如上情况解决办法有两种, 切换至其他目录 或使用&apos;-l&apos;选项强制卸载    </span><br><span class="line">[root@localhost db1]# umount -l /db1</span><br></pre></td></tr></table></figure><h2 id="学以致用环节"><a href="#学以致用环节" class="headerlink" title="学以致用环节"></a>学以致用环节</h2><blockquote><p>创建/mnt/cdrom目录，首先临时挂载光盘镜像，光盘镜像在/dev/cdrom</p><p>其次卸载挂载磁盘，然后永久挂载，写出详细的命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># mkdir /mnt/cdrom</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># mount /dev/cdrom /mnt/cdrom</span></span><br><span class="line">mount: /dev/sr0 写保护，将以只读方式挂载</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># df -Th</span></span><br><span class="line">文件系统              类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/rhel-root xfs        17G  3.4G   14G   20% /</span><br><span class="line">devtmpfs              devtmpfs  977M     0  977M    0% /dev</span><br><span class="line">tmpfs                 tmpfs     993M  5.9M  987M    1% /dev/shm</span><br><span class="line">tmpfs                 tmpfs     993M  9.1M  984M    1% /run</span><br><span class="line">tmpfs                 tmpfs     993M     0  993M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1             xfs      1014M  161M  854M   16% /boot</span><br><span class="line">tmpfs                 tmpfs     199M   28K  199M    1% /run/user/0</span><br><span class="line">/dev/sr0              iso9660   3.8G  3.8G     0  100% /mnt/cdrom</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># umount /mnt/cdrom</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># df -Th</span></span><br><span class="line">文件系统              类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/rhel-root xfs        17G  3.4G   14G   20% /</span><br><span class="line">devtmpfs              devtmpfs  977M     0  977M    0% /dev</span><br><span class="line">tmpfs                 tmpfs     993M  5.9M  987M    1% /dev/shm</span><br><span class="line">tmpfs                 tmpfs     993M  9.1M  984M    1% /run</span><br><span class="line">tmpfs                 tmpfs     993M     0  993M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1             xfs      1014M  161M  854M   16% /boot</span><br><span class="line">tmpfs                 tmpfs     199M   28K  199M    1% /run/user/0</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># vim /etc/fstab</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># cat /etc/fstab | tail -n 1</span></span><br><span class="line">/dev/cdrom       /mnt/cdrom       iso9660               defaults        0 0</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># mount -a</span></span><br><span class="line">mount: /dev/sr0 写保护，将以只读方式挂载</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># df -Th</span></span><br><span class="line">文件系统              类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/rhel-root xfs        17G  3.4G   14G   20% /</span><br><span class="line">devtmpfs              devtmpfs  977M     0  977M    0% /dev</span><br><span class="line">tmpfs                 tmpfs     993M  5.9M  987M    1% /dev/shm</span><br><span class="line">tmpfs                 tmpfs     993M  9.1M  984M    1% /run</span><br><span class="line">tmpfs                 tmpfs     993M     0  993M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1             xfs      1014M  161M  854M   16% /boot</span><br><span class="line">tmpfs                 tmpfs     199M   28K  199M    1% /run/user/0</span><br><span class="line">/dev/sr0              iso9660   3.8G  3.8G     0  100% /mnt/cdrom</span><br></pre></td></tr></table></figure><h2 id="交换分区swap"><a href="#交换分区swap" class="headerlink" title="交换分区swap"></a>交换分区swap</h2><p>交换分区SWAP就是LINUX下的虚拟内存分区,它的作用是在物理内存使用完之后,将磁盘空间(也就是SWAP分区)虚拟成内存来使用。</p><p>交换分区一般指定虚拟内存的大小为实际内存的1~1.5倍。如果实际内存超过8GB，可以直接划分16GB给虚拟内存即可，如果虚拟内存不够用的情况，须增加一个虚拟磁盘，由于不能给原有的磁盘重新分区，所以可以选择新建。</p><h3 id="创建swapfile"><a href="#创建swapfile" class="headerlink" title="创建swapfile"></a>创建swapfile</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># dd if=/dev/zero of=/opt/newdisk bs=1M count=1024</span></span><br><span class="line">//<span class="keyword">if</span>：指定源  一般写/dev/zero</span><br><span class="line">//of：指定目标</span><br><span class="line">//bs：定义块大小</span><br><span class="line">//count：数量</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一般适用于制作光盘</span></span><br></pre></td></tr></table></figure><h3 id="格式化swap分区"><a href="#格式化swap分区" class="headerlink" title="格式化swap分区"></a>格式化swap分区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># mkswap -f /opt/newdisk</span></span><br><span class="line">正在设置交换空间版本 1，大小 = 1048572 KiB</span><br><span class="line">无标签，UUID=f8ce4f29-2c01-4d93-8e9c-f1f7d7349526</span><br></pre></td></tr></table></figure><h3 id="检测当前swap分区情况"><a href="#检测当前swap分区情况" class="headerlink" title="检测当前swap分区情况"></a>检测当前swap分区情况</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># free -h</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.9G        958M         78M         24M        947M        766M</span><br><span class="line">Swap:          2.0G         16K        2.0G</span><br></pre></td></tr></table></figure><h3 id="开启新建的swap分区情况"><a href="#开启新建的swap分区情况" class="headerlink" title="开启新建的swap分区情况"></a>开启新建的swap分区情况</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># swapon /opt/newdisk</span></span><br><span class="line">swapon: /opt/newdisk：不安全的权限 0644，建议使用 0600。</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># free -h</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.9G        959M         77M         24M        947M        765M</span><br><span class="line">Swap:          3.0G         16K        3.0G</span><br><span class="line">        <span class="comment"># 此时此刻这里多出来1G</span></span><br></pre></td></tr></table></figure><h3 id="关闭新建的swap分区"><a href="#关闭新建的swap分区" class="headerlink" title="关闭新建的swap分区"></a>关闭新建的swap分区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># swapoff /opt/newdisk</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># free -h</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.9G        958M         78M         24M        947M        766M</span><br><span class="line">Swap:          2.0G         16K        2.0G</span><br><span class="line">          <span class="comment"># 还原到原来的2G</span></span><br></pre></td></tr></table></figure><h2 id="生产磁盘故障案例"><a href="#生产磁盘故障案例" class="headerlink" title="生产磁盘故障案例"></a>生产磁盘故障案例</h2><p>Inode被占满，导致磁盘有可用的剩余空间也无法继续使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># dd if=/dev/zero of=/opt/newdisk bs=1k count=1024</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mkfs.ext4 -i 1024 /opt/newdisk</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mkdir /data</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mount -t ext4 -o loop /opt/newdisk /data/</span></span><br><span class="line"></span><br><span class="line">//inode被占满</span><br><span class="line">[root@localhost ~]<span class="comment"># touch &#123;1..20000&#125;</span></span><br><span class="line">touch: cannot touch `19997<span class="string">': No space left on device</span></span><br><span class="line"><span class="string">touch: cannot touch `19998'</span>: No space left on device</span><br><span class="line">touch: cannot touch `19999<span class="string">': No space left on device</span></span><br><span class="line"><span class="string">touch: cannot touch `20000'</span>: No space left on device</span><br><span class="line"></span><br><span class="line">//inode被占满，剩余block也是无法继续使用</span><br><span class="line">[root@localhost ~]<span class="comment"># df -i|grep data</span></span><br><span class="line">/opt/newdisk      1024  1024       0  100% /data</span><br><span class="line">[root@localhost ~]<span class="comment"># df -h|grep data</span></span><br><span class="line">/opt/newdisk    891K   34K  806K   5% /data</span><br></pre></td></tr></table></figure><p>Block空间即将被占满, 但删除大文件也没有释放空间</p><blockquote><p>假设现在线上正在运行Nginx服务, Nginx产生的日志已经达到了20个G, 磁盘眼看就看沾满了, 请问不重启Nginx的方式如何处理</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//是会删除文件, 但Nginx持续占用着文件, 所以空间并不会被释放</span><br><span class="line">rm -f access.log</span><br><span class="line"></span><br><span class="line">//正确做法如下, 清空该文件即可释放文件内容</span><br><span class="line">&gt; access.log</span><br><span class="line"><span class="comment"># 意思就是echo “” &gt; access.log</span></span><br><span class="line"><span class="comment">#  标准覆盖输出</span></span><br></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">例子： 给系统新增加一个交换分区(swap)</span><br><span class="line"></span><br><span class="line">考试题目：一般是要求新建一个分区，并且把分区作为swap分区使用</span><br><span class="line"></span><br><span class="line">查看内存和交换分区的使用情况</span><br><span class="line"><span class="comment"># free -m</span></span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          1841        613       1227         16          0        258</span><br><span class="line">-/+ buffers/cache:        354       1486</span><br><span class="line">Swap:            0          0          0  &lt;--- 没有交换分区</span><br><span class="line"></span><br><span class="line"><span class="comment"># swapon -s  也能用该命令查看，只是默认也是没有交换分区所有没有输出</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fdisk  -l /dev/sdb</span></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sdb2         2099200     6293503     2097152   83  Linux  &lt;---准备把该分区作为交换分区</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、新建一个分区，并且把分区类型更改为82 </span><br><span class="line">    新分区我们在上面的练习已经完成了，所以本例子不用分区，而是需要修改该分区的类型</span><br><span class="line"></span><br><span class="line"><span class="comment"># fdisk  /dev/sdb</span></span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：l  列出所有支持的分区类型对应的id</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：t  修改分区id</span><br><span class="line">分区号 (1-5，默认 5)：2  修改第2个分区</span><br><span class="line">Hex 代码(输入 L 列出所有代码)：82  修改成id为82</span><br><span class="line">已将分区“Linux”的类型更改为“Linux swap / Solaris”</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sdb2         2099200     6293503     2097152   82  Linux swap / Solaris &lt;---修改成功</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：w</span><br><span class="line"></span><br><span class="line">强烈建议： 对分区做了修改后都刷新一下</span><br><span class="line"><span class="comment"># partprobe  /dev/sdb</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、把sdb2格式化为交换分区</span><br><span class="line"><span class="comment"># mkswap  /dev/sdb2</span></span><br><span class="line">正在设置交换空间版本 1，大小 = 2097148 KiB</span><br><span class="line">无标签，UUID=ba08eb90-2003-44e6-9769-9a9351aebb05</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、启动交换分区</span><br><span class="line"><span class="comment"># swapon /dev/sdb2  或者  # swanon -a  启动所有交换分区</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看</span><br><span class="line"><span class="comment"># swapon -s</span></span><br><span class="line">文件名             类型      大小  已用  权限</span><br><span class="line">/dev/sdb2                               partition   2097148 0   -1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、持久化保存交换分区的使用</span><br><span class="line"><span class="comment"># blkid /dev/sdb2</span></span><br><span class="line">/dev/sdb2: UUID=<span class="string">"ba08eb90-2003-44e6-9769-9a9351aebb05"</span> TYPE=<span class="string">"swap"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># vim /etc/fstab </span></span><br><span class="line">/dev/mapper/rhel-root   /                       xfs     defaults        0 0</span><br><span class="line">UUID=cb3299d6-16e0-4644-9686-27907eefb8f3 /boot                   xfs     defaults        0 0</span><br><span class="line">UUID=ba08eb90-2003-44e6-9769-9a9351aebb05  swap         swap    defaults  0 0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>源码安装管理</title>
    <link href="https://github.com/chineselijie/2019/08/29/12.linux--%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    <id>https://github.com/chineselijie/2019/08/29/12.linux--%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85%E5%8C%85%E7%AE%A1%E7%90%86/</id>
    <published>2019-08-29T15:44:18.587Z</published>
    <updated>2019-08-22T12:06:00.027Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[TOC]</p><h2 id="源码包基本概述"><a href="#源码包基本概述" class="headerlink" title="源码包基本概述"></a>源码包基本概述</h2><p>在linux环境下面安装源码包是比较常见的，在早期运维管理工作当中，大部分软件都是通过源码安装的。那么安装一个源码包，是需要我们自己把源代码编译成二进制的可执行文件。</p><p>源码包的编译用到了linux系统里的编译器，通常源码包都是用C语言开发的，这也是因为C语言为linux上最标准的程序语言。Linux上的C语言编译器叫做gcc，利用它就可以把C语言变成可执行的二进制文件。所以如果你的机器上没有安装gcc就没有办法去编译源码。可以使用<code>yum -y install gcc</code>来完成安装。</p><h2 id="源码包的好处"><a href="#源码包的好处" class="headerlink" title="源码包的好处"></a>源码包的好处</h2><ul><li>自定义修改源代码</li><li>定制需要的相关功能</li><li>新版软件优先更新源码</li></ul><h2 id="源码包的获取"><a href="#源码包的获取" class="headerlink" title="源码包的获取"></a>源码包的获取</h2><p>官方网站, 可以获得最新的软件包</p><p><a href="http://www.apache.org/" target="_blank" rel="noopener">Apache官方网站</a> </p><p><a href="http://nginx.org/" target="_blank" rel="noopener">Nginx官方网站</a></p><p> <a href="https://dev.mysql.com/downloads/mysql/5.7.html#downloads" target="_blank" rel="noopener">Mysql官方网站</a></p><p>例如在nginx官网上下载nginx安装包</p><ul><li>首先我们提前在windows上面进入nginx网站，找到下载，找打一个包右键，选择复制链接地址</li><li>进入Linux系统，输入以下命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># wget</span></span><br></pre></td></tr></table></figure><ul><li>将复制的地址粘贴上去</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># wget http://nginx.org/download/nginx-1.14.2.tar.gz</span></span><br></pre></td></tr></table></figure><ul><li>在当前目录就可以ls出我们下载下来的文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ls</span></span><br><span class="line">anaconda-ks.cfg       nginx-1.14.2.tar.gz  模板  图片  下载  桌面</span><br><span class="line">initial-setup-ks.cfg  公共                 视频  文档  音乐</span><br></pre></td></tr></table></figure><h2 id="源码包的分类"><a href="#源码包的分类" class="headerlink" title="源码包的分类"></a>源码包的分类</h2><ul><li>源码格式（需要编译安装）</li><li>二进制格式（解压后可以直接使用）</li></ul><h2 id="源码包的安装"><a href="#源码包的安装" class="headerlink" title="源码包的安装"></a>源码包的安装</h2><p>编译需要编译环境，开发环境，开发库，开发工具。 常用的编译环境有c、c++、perl、java、python5种 c环境的编译器：gcc（GNU C Complier） c++环境的编译器：g++ make：c、c++的统一项目管理工具，编译时有可能调用gcc也有可能调用g++。使用makefile文件定义make按何种次序去编译源程序文件中的源程序</p><p><strong>源码安装三部曲（常见）：</strong><br><strong>第一步: ./configure（定制组件）</strong></p><blockquote><p>1.指定安装路径，例如 –prefix=/opt/nginx-1.12<br>2.启用或禁用某项功能, 例如 –enable-ssl<br>3.和其它软件关联，例如–with-pcre<br>4.检查安装环境，例如是否有编译器 gcc，是否满足软件的依赖需求<br>5.检测通过后生成Makefile文件</p></blockquote><p><strong>第二步: make</strong></p><blockquote><p>1.执行make命令进行编译, 可以使用-j指定CPU核心数进行编译<br>2.按Makefile文件进行编译, 编译成可执行二进制文件<br>3.生成各类模块和主程序</p></blockquote><p><strong>第三步: make install</strong></p><blockquote><p>1.按Makefile定义好的路径拷贝至安装目录中</p></blockquote><p>上面介绍的源码三部曲不能百分百通用于所有源码包, 也就是说源码包的安装并非存在标准安装步骤，但是大部分源码安装都是类似的步骤</p><p><strong>建议:</strong><br>拿到源码包解压后，然后进入到目录找相关的帮助文档，通常会以INSTALL或者README为文件名</p><h4 id="configure脚本的功能"><a href="#configure脚本的功能" class="headerlink" title="configure脚本的功能"></a>configure脚本的功能</h4><ul><li>让用户选定编译特性</li><li>检查编译环境是否符合程序编译的基本需要</li></ul><h4 id="源码包编译事例"><a href="#源码包编译事例" class="headerlink" title="源码包编译事例"></a>源码包编译事例</h4><blockquote><p>下面我们就来实战一番</p><p>在linux中编译nginx 启动nginx服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># tar -xf nginx-1.14.2.tar.gz</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># cd nginx-1.14.2/</span></span><br></pre></td></tr></table></figure><ul><li>源码安装三部曲</li></ul><p><strong>第一步: ./configure</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie nginx-1.14.2]<span class="comment"># ./configure</span></span><br><span class="line">checking <span class="keyword">for</span> OS</span><br><span class="line"> + Linux 3.10.0-693.el7.x86_64 x86_64</span><br><span class="line">checking <span class="keyword">for</span> C compiler ... not found</span><br><span class="line"></span><br><span class="line">./configure: error: C compiler cc is not found</span><br></pre></td></tr></table></figure><blockquote><p>哦霍，完蛋    出征未捷身先死。那么往下看吧</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 解决方法</span><br><span class="line">[root@zhoulijie nginx-1.14.2]<span class="comment"># yum install -y gcc gcc-c++ make</span></span><br></pre></td></tr></table></figure><blockquote><p>再次执行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie nginx-1.14.2]<span class="comment"># ./configure</span></span><br><span class="line">........................省略一大片....................</span><br><span class="line"></span><br><span class="line">./configure: error: the HTTP rewrite module requires the PCRE library.</span><br><span class="line">You can either <span class="built_in">disable</span> the module by using --without-http_rewrite_module</span><br><span class="line">option, or install the PCRE library into the system, or build the PCRE library</span><br><span class="line">statically from the <span class="built_in">source</span> with nginx by using --with-pcre=&lt;path&gt; option.</span><br></pre></td></tr></table></figure><blockquote><p>下面来看解决办法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie nginx-1.14.2]<span class="comment"># yum install -y pcre-devel</span></span><br></pre></td></tr></table></figure><blockquote><p>再次执行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie nginx-1.14.2]<span class="comment"># ./configure</span></span><br><span class="line">........................省略一大片....................</span><br><span class="line"></span><br><span class="line">./configure: error: the HTTP gzip module requires the zlib library.</span><br><span class="line">You can either <span class="built_in">disable</span> the module by using --without-http_gzip_module</span><br><span class="line">option, or install the zlib library into the system, or build the zlib library</span><br><span class="line">statically from the <span class="built_in">source</span> with nginx by using --with-zlib=&lt;path&gt; option.</span><br></pre></td></tr></table></figure><blockquote><p>下面来看解决办法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie nginx-1.14.2]<span class="comment"># yum -y install zlib-devel</span></span><br></pre></td></tr></table></figure><blockquote><p> 再次执行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie nginx-1.14.2]<span class="comment"># ./configure</span></span><br><span class="line">........................省略一大片....................</span><br><span class="line"></span><br><span class="line">  nginx pid file: <span class="string">"/usr/local/nginx/logs/nginx.pid"</span></span><br><span class="line">  nginx error <span class="built_in">log</span> file: <span class="string">"/usr/local/nginx/logs/error.log"</span></span><br><span class="line">  nginx http access <span class="built_in">log</span> file: <span class="string">"/usr/local/nginx/logs/access.log"</span></span><br><span class="line">  nginx http client request body temporary files: <span class="string">"client_body_temp"</span></span><br><span class="line">  nginx http proxy temporary files: <span class="string">"proxy_temp"</span></span><br><span class="line">  nginx http fastcgi temporary files: <span class="string">"fastcgi_temp"</span></span><br><span class="line">  nginx http uwsgi temporary files: <span class="string">"uwsgi_temp"</span></span><br><span class="line">  nginx http scgi temporary files: <span class="string">"scgi_temp"</span></span><br></pre></td></tr></table></figure><blockquote><p>出现这样就表示完成，其实还有一种错误，这里由于我可能安装openssl-devel</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">./configure: error: SSL modules require the OpenSSL library.</span><br><span class="line">You can either <span class="keyword">do</span> not <span class="built_in">enable</span> the modules, or install the OpenSSL </span><br><span class="line">library into the system, or build the OpenSSL library statically</span><br><span class="line">from the <span class="built_in">source</span> with nginx by using --with-openssl=&lt;path&gt; option.</span><br><span class="line"></span><br><span class="line">// 解决办法</span><br><span class="line">yum install openssl-devel</span><br></pre></td></tr></table></figure><p><strong>第二步：make</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie nginx-1.14.2]<span class="comment"># make</span></span><br></pre></td></tr></table></figure><p><strong>第三步:  make instal</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie nginx-1.14.2]<span class="comment"># make install</span></span><br><span class="line"></span><br><span class="line">// 此时未知是否安装好，可以使用<span class="built_in">echo</span> $?</span><br><span class="line">[root@zhoulijie nginx-1.14.2]<span class="comment"># echo $?</span></span><br><span class="line">0</span><br><span class="line"><span class="comment">## 0代表没有错误 1代表错误</span></span><br></pre></td></tr></table></figure><ul><li>启动nginx</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie nginx-1.14.2]<span class="comment"># ls</span></span><br><span class="line">[root@zhoulijie nginx-1.14.2]<span class="comment"># cd objs/</span></span><br><span class="line">[root@zhoulijie objs]<span class="comment"># ./nginx</span></span><br><span class="line">[root@zhoulijie objs]<span class="comment"># ss -antl</span></span><br><span class="line">State      Recv-Q Send-Q Local Address:Port               Peer Address:Port     </span><br><span class="line">LISTEN     0      128          *:111                      *:*</span><br><span class="line">LISTEN     0      128          *:80                       *:*</span><br><span class="line"></span><br><span class="line"><span class="comment">## nginx 80端口</span></span><br></pre></td></tr></table></figure><blockquote><p>实验成果</p></blockquote><p><img src="https://s2.ax1x.com/2019/04/27/EKz4bQ.png" alt></p><h4 id="编译安装注意事项"><a href="#编译安装注意事项" class="headerlink" title="编译安装注意事项"></a>编译安装注意事项</h4><ul><li>如果安装时不是使用的默认路径，则必须要修改PATH环境变量，以能够识别此程序的二进制文件路径；<ul><li>修改/etc/profile文件或在/etc/profile.d/目录建立一个以.sh为后缀的文件，在里面定义export PATH=$PATH:/path/to/somewhere</li></ul></li><li>默认情况下，系统搜索库文件的路径只有/lib，/usr/lib<ul><li>增添额外库文件搜索路径方法：<ul><li>在/etc/ld.so.conf.d/中创建以.conf为后缀名的文件，而后把要增添的路径直接写至此文件中。此时库文件增添的搜索路径重启后有效，若要使用增添的路径立即生效则要使用ldconfig命令</li></ul></li><li>ldconfig：通知系统重新搜索库文件</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/ld.so.conf和/etc/ls.so.conf.d/*.conf    //配置文件</span><br><span class="line">/etc/ld.so.cache            //缓存文件</span><br><span class="line">-v      //显示重新搜索库的过程</span><br><span class="line">-p      //打印出系统启动时自动加载并缓存到内存中的可用库文件名及文件路径映射关系</span><br></pre></td></tr></table></figure><ul><li>头文件：输出给系统<ul><li>默认：系统在/usr/include中找头文件，若要增添头文件搜索路径，使用链接进行</li></ul></li><li>man文件路径：安装在–prefix指定的目录下的man目录<ul><li>默认：系统在/usr/share/man中找man文件。此时因为编译安装的时候不是安装到默认路径下，如果要查找man文件则可以使用以下两种方法：<ul><li>man -M /path/to/man_dir command</li><li>在/etc/man.config文件中添加一条MANPATH</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>网络进阶管理</title>
    <link href="https://github.com/chineselijie/2019/08/29/11.linux--%E7%BD%91%E7%BB%9C%E8%BF%9B%E9%98%B6%E7%AE%A1%E7%90%86/"/>
    <id>https://github.com/chineselijie/2019/08/29/11.linux--%E7%BD%91%E7%BB%9C%E8%BF%9B%E9%98%B6%E7%AE%A1%E7%90%86/</id>
    <published>2019-08-29T15:44:18.585Z</published>
    <updated>2019-08-22T13:23:36.937Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[TOC]</p><h3 id="链路聚合"><a href="#链路聚合" class="headerlink" title="链路聚合"></a>链路聚合</h3><p>网卡的链路聚合就是将多块网卡连接起来，当一块网卡损坏，网络依旧可以正常运行，可以有效的防止因为网卡损坏带来的损失，同时也可以提高网络访问速度。 </p><h3 id="桥接网络"><a href="#桥接网络" class="headerlink" title="桥接网络"></a>桥接网络</h3><p>桥接网络也即网桥，可基于MAC地址在网络间转发流量。网桥识别哪些主机连接到每个网络，构建MAC地址表，然后根据该表做出包转发决策。</p><p>软件网桥的最常见应用是在虚拟化应用程序中，用于在一个或多个虚拟NIC中共享一个硬件NIC。</p><h3 id="链路聚合配置"><a href="#链路聚合配置" class="headerlink" title="链路聚合配置"></a>链路聚合配置</h3><h4 id="配置bond聚合链路"><a href="#配置bond聚合链路" class="headerlink" title="配置bond聚合链路"></a>配置bond聚合链路</h4><h4 id="配置bong0"><a href="#配置bong0" class="headerlink" title="配置bong0"></a>配置bong0</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli device</span></span><br><span class="line">设备        类型      状态    连接   </span><br><span class="line">virbr0      bridge    连接的  virbr0 </span><br><span class="line">eth0        ethernet  连接的  eth0   </span><br><span class="line">eth1        ethernet  已断开  --     </span><br><span class="line">lo          loopback  未托管  --     </span><br><span class="line">virbr0-nic  tun       未托管  --</span><br></pre></td></tr></table></figure><h5 id="创建bond0，-模式为balance-rr，名字为zhoulijie"><a href="#创建bond0，-模式为balance-rr，名字为zhoulijie" class="headerlink" title="创建bond0， 模式为balance-rr，名字为zhoulijie"></a>创建bond0， 模式为balance-rr，名字为zhoulijie</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection add type bond mode balance-rr con-name zhoulijie ifname bond0 ipv4.method manual ipv4.addresses 192.168.83.250/24 ipv4.gateway 192.168.83.2 ipv4.dns 192.168.83.2</span></span><br><span class="line">连接“zhoulijie”(99fe45cb-5d4a-4288-b0b1-1fd2202d25e1) 已成功添加。</span><br></pre></td></tr></table></figure><h5 id="添加物理网卡至bond0"><a href="#添加物理网卡至bond0" class="headerlink" title="添加物理网卡至bond0"></a>添加物理网卡至bond0</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection add type bond-slave con-name zlj ifname eth0 master bond0</span></span><br><span class="line">连接“zlj”(4a185231-5752-4e60-b20d-92fce9ed90e2) 已成功添加。</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection add type bond-slave con-name zlj1 ifname eth1 master bond0</span></span><br><span class="line">连接“zlj1”(2883fd9a-2ce9-4e51-bde2-679b3920fae5) 已成功添加。</span><br></pre></td></tr></table></figure><h5 id="查看bond配置信息"><a href="#查看bond配置信息" class="headerlink" title="查看bond配置信息"></a>查看bond配置信息</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># cat /proc/net/bonding/bond0</span></span><br><span class="line">Ethernet Channel Bonding Driver: v3.7.1 (April 27, 2011)</span><br><span class="line"></span><br><span class="line">Bonding Mode: load balancing (round-robin)</span><br><span class="line">MII Status: up</span><br><span class="line">MII Polling Interval (ms): 100</span><br><span class="line">Up Delay (ms): 0</span><br><span class="line">Down Delay (ms): 0</span><br><span class="line"></span><br><span class="line">Slave Interface: eth1</span><br><span class="line">MII Status: up</span><br><span class="line">Speed: 1000 Mbps</span><br><span class="line">Duplex: full</span><br><span class="line">Link Failure Count: 0</span><br><span class="line">Permanent HW addr: 00:0c:29:ab:cc:71</span><br><span class="line">Slave queue ID: 0</span><br></pre></td></tr></table></figure><h5 id="关闭eth0网卡-测试bond0是否正常"><a href="#关闭eth0网卡-测试bond0是否正常" class="headerlink" title="关闭eth0网卡, 测试bond0是否正常"></a>关闭eth0网卡, 测试bond0是否正常</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli device disconnect eth0</span></span><br><span class="line">成功断开设备 <span class="string">'eth0'</span>。</span><br></pre></td></tr></table></figure><h4 id="配置bong1"><a href="#配置bong1" class="headerlink" title="配置bong1"></a>配置bong1</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli device</span></span><br><span class="line">设备        类型      状态    连接   </span><br><span class="line">virbr0      bridge    连接的  virbr0 </span><br><span class="line">eth0        ethernet  连接的  eth0   </span><br><span class="line">eth1        ethernet  已断开  --     </span><br><span class="line">lo          loopback  未托管  --     </span><br><span class="line">virbr0-nic  tun       未托管  --</span><br></pre></td></tr></table></figure><h5 id="创建bond1，模式为active-backup，名字为zhoulijie"><a href="#创建bond1，模式为active-backup，名字为zhoulijie" class="headerlink" title="创建bond1，模式为active-backup，名字为zhoulijie"></a>创建bond1，模式为active-backup，名字为zhoulijie</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]# nmcli connection add type bond con-name zhoulijie ifname bond1 mode active-backup ipv4.method manual ipv4.addresses 192.168.83.250/24 ipv4.gateway 192.168.83.2 ipv4.dns 192.168.83.2</span><br><span class="line">连接“zhoulijie”(c4c7078e-f912-46fd-af84-6c414267a45b) 已成功添加。</span><br></pre></td></tr></table></figure><h5 id="添加物理网卡连接至bond1"><a href="#添加物理网卡连接至bond1" class="headerlink" title="添加物理网卡连接至bond1"></a>添加物理网卡连接至bond1</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection add type bond-slave con-name zlj ifname eth0 master bond1</span></span><br><span class="line">连接“zlj”(280b5deb-e05f-45f7-b771-1c2a325b63c7) 已成功添加。</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection add type bond-slave con-name zlj1 ifname eth1 master bond1</span></span><br><span class="line">连接“zlj1”(d0c28c77-5808-43cc-86f2-f2aefda5304f) 已成功添加。</span><br></pre></td></tr></table></figure><h5 id="启用连接"><a href="#启用连接" class="headerlink" title="启用连接"></a>启用连接</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection up zhoulijie</span></span><br><span class="line">成功激活（主服务器等待从服务器）连接（D-Bus 激活路径：/org/freedesktop/NetworkManager/ActiveConnection/7）</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection up zlj</span></span><br><span class="line">连接已成功激活（D-Bus 活动路径：/org/freedesktop/NetworkManager/ActiveConnection/9）</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection up zlj1</span></span><br><span class="line">连接已成功激活（D-Bus 活动路径：/org/freedesktop/NetworkManager/ActiveConnection/10）</span><br></pre></td></tr></table></figure><h5 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># cat /proc/net/bonding/bond1</span></span><br><span class="line">Ethernet Channel Bonding Driver: v3.7.1 (April 27, 2011)</span><br><span class="line"></span><br><span class="line">Bonding Mode: fault-tolerance (active-backup)</span><br><span class="line">Primary Slave: None</span><br><span class="line">Currently Active Slave: eth0</span><br><span class="line">MII Status: up</span><br><span class="line">MII Polling Interval (ms): 100</span><br><span class="line">Up Delay (ms): 0</span><br><span class="line">Down Delay (ms): 0</span><br><span class="line"></span><br><span class="line">Slave Interface: eth0</span><br><span class="line">MII Status: up</span><br><span class="line">Speed: 1000 Mbps</span><br><span class="line">Duplex: full</span><br><span class="line">Link Failure Count: 0</span><br><span class="line">Permanent HW addr: 00:0c:29:ab:cc:67</span><br><span class="line">Slave queue ID: 0</span><br><span class="line"></span><br><span class="line">Slave Interface: eth1</span><br><span class="line">MII Status: up</span><br><span class="line">Speed: 1000 Mbps</span><br><span class="line">Duplex: full</span><br><span class="line">Link Failure Count: 0</span><br><span class="line">Permanent HW addr: 00:0c:29:ab:cc:71</span><br><span class="line">Slave queue ID: 0</span><br></pre></td></tr></table></figure><h5 id="停止eth0物理网卡设备"><a href="#停止eth0物理网卡设备" class="headerlink" title="停止eth0物理网卡设备"></a>停止eth0物理网卡设备</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli device disconnect eth0</span></span><br><span class="line">成功断开设备 <span class="string">'eth0'</span>。</span><br></pre></td></tr></table></figure><h5 id="eth1物理网卡设备会进行自动切换"><a href="#eth1物理网卡设备会进行自动切换" class="headerlink" title="eth1物理网卡设备会进行自动切换"></a>eth1物理网卡设备会进行自动切换</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># grep "Currently Active Slave" /proc/net/bonding/bond1</span></span><br><span class="line">Currently Active Slave: eth1</span><br></pre></td></tr></table></figure><h4 id="配置team聚合链路"><a href="#配置team聚合链路" class="headerlink" title="配置team聚合链路"></a>配置team聚合链路</h4><p><code>centos/rhce7</code>使用<code>teaming</code>实现聚合链路,能够提供网卡绑定之后的网络吞吐性能,并且提供网卡的故障切换处理能力。<br><code>Team</code>是基于一个小型内核驱动实现聚合链路，在用户层提供<code>teamd</code>命令实现链路管理。</p><p><code>teamd</code>可以实现以下模式的聚合链路</p><blockquote><p>broadcast 广播容错<br>roundrobin 负载轮询<br>activebackup 主备(必考)<br>loadbalance 负载均衡<br>lacp 需要交换机支持lacp协议</p></blockquote><h5 id="请使用命令行配置，图形界面配置不稳定"><a href="#请使用命令行配置，图形界面配置不稳定" class="headerlink" title="请使用命令行配置，图形界面配置不稳定"></a>请使用命令行配置，图形界面配置不稳定</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]# nmcli connection add type team con-name team0 ifname team0 config &apos;&#123;&quot;runner&quot;:&#123;&quot;name&quot;:&quot;activebackup&quot;&#125;&#125;&apos; ipv4.addresses 192.168.83.222/24 ipv4.gateway 192.168.83.2 ipv4.dns 192.168.83.2 ipv4.method manual</span><br><span class="line">连接“team0”(80474187-7e56-4874-9d24-e228cb39b851) 已成功添加。</span><br></pre></td></tr></table></figure><h5 id="添加物理网卡连接至team0"><a href="#添加物理网卡连接至team0" class="headerlink" title="添加物理网卡连接至team0"></a>添加物理网卡连接至team0</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection add type team-slave con-name team0-port1 ifname eth1 master team0</span></span><br><span class="line">连接“team0-port1”(4c6539de-8ea3-43fc-beb1-598587a8c05f) 已成功添加。</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection add type team-slave con-name team0-port2 ifname eth2 master team0</span></span><br><span class="line">连接“team0-port2”(0798fb06-daee-4b5f-bd1f-8ad455964cb6) 已成功添加。</span><br></pre></td></tr></table></figure><h5 id="检查team0状态"><a href="#检查team0状态" class="headerlink" title="检查team0状态"></a>检查team0状态</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]# ping -I team0 192.168.83.222</span><br><span class="line">[root@zhoulijie ~]# teamdctl team0 state</span><br></pre></td></tr></table></figure><h5 id="断掉后检测"><a href="#断掉后检测" class="headerlink" title="断掉后检测"></a>断掉后检测</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli dev disconnect eth1</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># teamdctl team0 state</span></span><br></pre></td></tr></table></figure><h4 id="动态修改team模式"><a href="#动态修改team模式" class="headerlink" title="动态修改team模式"></a>动态修改team模式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 导出配置进行修改 (man teamd.conf)</span><br><span class="line">[root@zhoulijie ~]# teamdctl team0 config dump &gt; /tmp/team.conf</span><br><span class="line">[root@zhoulijie ~]# vim /tmp/team.conf</span><br><span class="line"></span><br><span class="line">//以最新修改的配置选项修改team0属性</span><br><span class="line">[root@zhoulijie ~]# nmcli con mod team0 team.config /tmp/team.conf</span><br><span class="line"></span><br><span class="line">//修改之后需要重启team0</span><br><span class="line">[root@zhoulijie ~]# nmcli connection down team0;nmcli connection up team0 </span><br><span class="line">[root@zhoulijie ~]# nmcli connection up team0-port1</span><br><span class="line">[root@zhoulijie ~]# nmcli connection up team0-port2</span><br></pre></td></tr></table></figure><h3 id="桥接网络配置"><a href="#桥接网络配置" class="headerlink" title="桥接网络配置"></a>桥接网络配置</h3><h5 id="创建桥接网络br1"><a href="#创建桥接网络br1" class="headerlink" title="创建桥接网络br1"></a>创建桥接网络br1</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]# nmcli connection add type bridge con-name br1 ifname br1 ipv4.addresses 192.168.83.222/24 ipv4.method manual</span><br></pre></td></tr></table></figure><h5 id="桥接至eth1"><a href="#桥接至eth1" class="headerlink" title="桥接至eth1"></a>桥接至eth1</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]# nmcli connection add type bridge-slave con-name br1-port1 ifname eth1 master br1 nmcli connection add type bridge-slave con-name br1-port1 ifname eth1 master br1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ping -I br1 192.168.83.1</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># brctl show</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>ISCSI服务</title>
    <link href="https://github.com/chineselijie/2019/08/29/11.linux--ISCSI%E6%9C%8D%E5%8A%A1/"/>
    <id>https://github.com/chineselijie/2019/08/29/11.linux--ISCSI%E6%9C%8D%E5%8A%A1/</id>
    <published>2019-08-29T15:44:18.583Z</published>
    <updated>2019-08-22T12:22:16.378Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[toc]</p><h2 id="ISCSI技术概述"><a href="#ISCSI技术概述" class="headerlink" title="ISCSI技术概述"></a>ISCSI技术概述</h2><p>硬盘的接口类型</p><ul><li>IDE是一种成熟稳定、价格便宜的并行传输接口。</li><li>SATA是一种传输速度更快、数据校验更完整的串行传输接口。</li><li>SCSI是一种用于计算机和硬盘、光驱等设备之间系统级接口的通用标准，具有系统资源占用率低、转速高、传输速度快等优点。</li></ul><p>IBM公司开始研发ISCSI技术</p><p>​        这是一种将SCSI接口与以太网技术相结合的新型存储技术，可以用来在网络中传输SCSI接口的命令和数据。</p><p>iscsi = internet + scsi硬盘接口</p><p>​        这样，不仅克服了传统SCSI接口设备的物理局限性，实现了跨区域的存储资源共享，还可以在不停机的状态下扩展存储容量。</p><h2 id="配置ISCSI服务端"><a href="#配置ISCSI服务端" class="headerlink" title="配置ISCSI服务端"></a>配置ISCSI服务端</h2><h4 id="添加硬盘"><a href="#添加硬盘" class="headerlink" title="添加硬盘"></a>添加硬盘</h4><p>首先我们提前将虚拟机加入一块硬盘</p><p>开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 ~]<span class="comment"># lsblk</span></span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0   20G  0 disk</span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   19G  0 part</span><br><span class="line">  ├─centos-root 253:0    0   17G  0 lvm  /</span><br><span class="line">  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">sdb               8:16   0   20G  0 disk</span><br><span class="line">sr0              11:0    1  4.2G  0 rom  /mnt/cdrom</span><br></pre></td></tr></table></figure><h4 id="yum安装ISCSI服务端程序"><a href="#yum安装ISCSI服务端程序" class="headerlink" title="yum安装ISCSI服务端程序"></a>yum安装ISCSI服务端程序</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 ~]<span class="comment"># yum install -y targetd targetcli</span></span><br><span class="line">[root@server222 ~]<span class="comment"># systemctl restart targetd</span></span><br><span class="line">[root@server222 ~]<span class="comment"># systemctl enable targetd</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/targetd.service to /usr/lib/systemd/system/targetd.service.</span><br></pre></td></tr></table></figure><h4 id="配置ISCSI服务端共享资源"><a href="#配置ISCSI服务端共享资源" class="headerlink" title="配置ISCSI服务端共享资源"></a>配置ISCSI服务端共享资源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 ~]<span class="comment"># targetcli</span></span><br><span class="line">Warning: Could not load preferences file /root/.targetcli/prefs.bin.</span><br><span class="line">targetcli shell version 2.1.fb46</span><br><span class="line">Copyright 2011-2013 by Datera, Inc and others.</span><br><span class="line">For <span class="built_in">help</span> on commands, <span class="built_in">type</span> <span class="string">'help'</span>.</span><br><span class="line"></span><br><span class="line">/&gt; ls</span><br><span class="line">o- / ..................................................................... [...]</span><br><span class="line">  o- backstores .......................................................... [...]</span><br><span class="line">  | o- block .............................................. [Storage Objects: 0]</span><br><span class="line">  | o- fileio ............................................. [Storage Objects: 0]</span><br><span class="line">  | o- pscsi .............................................. [Storage Objects: 0]</span><br><span class="line">  | o- ramdisk ............................................ [Storage Objects: 0]</span><br><span class="line">  o- iscsi ........................................................ [Targets: 0]</span><br><span class="line">  o- loopback ..................................................... [Targets: 0]</span><br><span class="line">/&gt; <span class="built_in">cd</span> backstores/block</span><br><span class="line">/backstores/block&gt; create disk1 /dev/sdb</span><br><span class="line">Created block storage object disk1 using /dev/sdb.</span><br><span class="line">/backstores/block&gt; <span class="built_in">cd</span> /</span><br><span class="line">/&gt; ls</span><br><span class="line">o- / ..................................................................... [...]</span><br><span class="line">  o- backstores .......................................................... [...]</span><br><span class="line">  | o- block .............................................. [Storage Objects: 1]</span><br><span class="line">  | | o- disk1 ..................... [/dev/sdb (20.0GiB) write-thru deactivated]</span><br><span class="line">  | |   o- alua ............................................... [ALUA Groups: 1]</span><br><span class="line">  | |     o- default_tg_pt_gp ................... [ALUA state: Active/optimized]</span><br><span class="line">  | o- fileio ............................................. [Storage Objects: 0]</span><br><span class="line">  | o- pscsi .............................................. [Storage Objects: 0]</span><br><span class="line">  | o- ramdisk ............................................ [Storage Objects: 0]</span><br><span class="line">  o- iscsi ........................................................ [Targets: 0]</span><br><span class="line">  o- loopback ..................................................... [Targets: 0]</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><h4 id="创建ISCSI-target名称以及配置共享资源"><a href="#创建ISCSI-target名称以及配置共享资源" class="headerlink" title="创建ISCSI target名称以及配置共享资源"></a>创建ISCSI target名称以及配置共享资源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/&gt; <span class="built_in">cd</span> iscsi</span><br><span class="line">/iscsi&gt; .</span><br><span class="line">/iscsi&gt; create</span><br><span class="line">Created target iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab.</span><br><span class="line">Created TPG 1.</span><br><span class="line">Global pref auto_add_default_portal=<span class="literal">true</span></span><br><span class="line">Created default portal listening on all IPs (0.0.0.0), port 3260.</span><br><span class="line">/iscsi&gt; <span class="built_in">cd</span> iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab/</span><br><span class="line">/iscsi/iqn.20....c0e1179441ab&gt; ls</span><br><span class="line">o- iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab ....... [TPGs: 1]</span><br><span class="line">  o- tpg1 ............................................... [no-gen-acls, no-auth]</span><br><span class="line">    o- acls .......................................................... [ACLs: 0]</span><br><span class="line">    o- luns .......................................................... [LUNs: 0]</span><br><span class="line">    o- portals .................................................... [Portals: 1]</span><br><span class="line">      o- 0.0.0.0:3260 ..................................................... [OK]</span><br><span class="line">/iscsi/iqn.20....c0e1179441ab&gt; <span class="built_in">cd</span> tpg1/luns</span><br><span class="line">/iscsi/iqn.20...1ab/tpg1/luns&gt; create /backstores/block/disk1</span><br><span class="line">Created LUN 0.</span><br></pre></td></tr></table></figure><h4 id="设置访问控制列表（ACL）"><a href="#设置访问控制列表（ACL）" class="headerlink" title="设置访问控制列表（ACL）"></a>设置访问控制列表（ACL）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/iscsi/iqn.20...1ab/tpg1/luns&gt; <span class="built_in">cd</span> ..</span><br><span class="line">/iscsi/iqn.20...179441ab/tpg1&gt; ls</span><br><span class="line">o- tpg1 ................................................. [no-gen-acls, no-auth]</span><br><span class="line">  o- acls ............................................................ [ACLs: 0]</span><br><span class="line">  o- luns ............................................................ [LUNs: 1]</span><br><span class="line">  | o- lun0 ........................ [block/disk1 (/dev/sdb) (default_tg_pt_gp)]</span><br><span class="line">  o- portals ...................................................... [Portals: 1]</span><br><span class="line">    o- 0.0.0.0:3260 ....................................................... [OK]</span><br><span class="line">/iscsi/iqn.20...179441ab/tpg1&gt; <span class="built_in">cd</span> acls</span><br><span class="line">/iscsi/iqn.20...1ab/tpg1/acls&gt; create iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab:client</span><br><span class="line">Created Node ACL <span class="keyword">for</span> iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab:client</span><br><span class="line">Created mapped LUN 0.</span><br></pre></td></tr></table></figure><h4 id="设置ISCSI服务端的监听IP地址和端口号"><a href="#设置ISCSI服务端的监听IP地址和端口号" class="headerlink" title="设置ISCSI服务端的监听IP地址和端口号"></a>设置ISCSI服务端的监听IP地址和端口号</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/iscsi/iqn.20...1ab/tpg1/acls&gt; <span class="built_in">cd</span> ..</span><br><span class="line">/iscsi/iqn.20...179441ab/tpg1&gt; <span class="built_in">cd</span> portals/</span><br><span class="line">/iscsi/iqn.20.../tpg1/portals&gt; ls</span><br><span class="line">o- portals ........................................................ [Portals: 1]</span><br><span class="line">  o- 0.0.0.0:3260 ......................................................... [OK]</span><br><span class="line">/iscsi/iqn.20.../tpg1/portals&gt; create 192.168.176.222</span><br><span class="line">Using default IP port 3260</span><br><span class="line">Created network portal 192.168.176.222:3260.</span><br><span class="line">/iscsi/iqn.20.../tpg1/portals&gt;</span><br></pre></td></tr></table></figure><blockquote><p>此处如果报错 请执行下面一步骤 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; /iscsi/iqn.20.../tpg1/portals&gt; create 192.168.176.222</span><br><span class="line">&gt; Using default IP port 3260</span><br><span class="line">&gt; Could not create NetworkPortal <span class="keyword">in</span> configFS</span><br><span class="line">&gt; </span><br><span class="line">&gt; /iscsi/iqn.20.../tpg1/portals&gt; delete 0.0.0.0 3260</span><br><span class="line">&gt; Deleted network portal 0.0.0.0:3260</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="检查配置信息"><a href="#检查配置信息" class="headerlink" title="检查配置信息"></a>检查配置信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">iscsi/iqn.20.../tpg1/portals&gt; ls /</span><br><span class="line">o- / ..................................................................... [...]</span><br><span class="line">  o- backstores .......................................................... [...]</span><br><span class="line">  | o- block .............................................. [Storage Objects: 1]</span><br><span class="line">  | | o- disk1 ....................... [/dev/sdb (20.0GiB) write-thru activated]</span><br><span class="line">  | |   o- alua ............................................... [ALUA Groups: 1]</span><br><span class="line">  | |     o- default_tg_pt_gp ................... [ALUA state: Active/optimized]</span><br><span class="line">  | o- fileio ............................................. [Storage Objects: 0]</span><br><span class="line">  | o- pscsi .............................................. [Storage Objects: 0]</span><br><span class="line">  | o- ramdisk ............................................ [Storage Objects: 0]</span><br><span class="line">  o- iscsi ........................................................ [Targets: 1]</span><br><span class="line">  | o- iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab ... [TPGs: 1]</span><br><span class="line">  |   o- tpg1 ........................................... [no-gen-acls, no-auth]</span><br><span class="line">  |     o- acls ...................................................... [ACLs: 1]</span><br><span class="line">  |     | o- iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab:client  [Mapped LUNs: 1]</span><br><span class="line">  |     |   o- mapped_lun0 ............................. [lun0 block/disk1 (rw)]</span><br><span class="line">  |     o- luns ...................................................... [LUNs: 1]</span><br><span class="line">  |     | o- lun0 .................. [block/disk1 (/dev/sdb) (default_tg_pt_gp)]</span><br><span class="line">  |     o- portals ................................................ [Portals: 1]</span><br><span class="line">  |       o- 192.168.176.222:3260 ......................................... [OK]</span><br><span class="line">  o- loopback ..................................................... [Targets: 0]</span><br><span class="line">/iscsi/iqn.20.../tpg1/portals&gt; <span class="built_in">exit</span></span><br><span class="line">Global pref auto_save_on_exit=<span class="literal">true</span></span><br><span class="line">Last 10 configs saved <span class="keyword">in</span> /etc/target/backup.</span><br><span class="line">Configuration saved to /etc/target/saveconfig.json</span><br></pre></td></tr></table></figure><h4 id="配置防火墙以及重启服务"><a href="#配置防火墙以及重启服务" class="headerlink" title="配置防火墙以及重启服务"></a>配置防火墙以及重启服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@server222 ~]<span class="comment"># systemctl restart targetd</span></span><br><span class="line">[root@server222 ~]<span class="comment"># systemctl enable targetd</span></span><br><span class="line"></span><br><span class="line">[root@server222 ~]<span class="comment"># systemctl stop firewalld</span></span><br><span class="line">[root@server222 ~]<span class="comment"># vim /etc/selinux/config</span></span><br><span class="line">[root@server222 ~]<span class="comment"># setenforce 0</span></span><br><span class="line">[root@server222 ~]<span class="comment"># getenforce</span></span><br><span class="line">Permissive</span><br></pre></td></tr></table></figure><h2 id="配置ISCSI客户端"><a href="#配置ISCSI客户端" class="headerlink" title="配置ISCSI客户端"></a>配置ISCSI客户端</h2><blockquote><p>客户端地址：192.168.176.111</p></blockquote><h4 id="安装ISCSI客户端服务程序initiator"><a href="#安装ISCSI客户端服务程序initiator" class="headerlink" title="安装ISCSI客户端服务程序initiator"></a>安装ISCSI客户端服务程序initiator</h4><blockquote><p>在rhel 7 系统中，ISCSI-initator-utils已经被默认安装了</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># yum install iscsi-initiator-utils</span></span><br></pre></td></tr></table></figure><h4 id="编辑initiatorname配置文件"><a href="#编辑initiatorname配置文件" class="headerlink" title="编辑initiatorname配置文件"></a>编辑initiatorname配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># vim /etc/iscsi/initiatorname.iscsi</span></span><br><span class="line">[root@client111 ~]<span class="comment"># cat /etc/iscsi/initiatorname.iscsi</span></span><br><span class="line">InitiatorName=iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab:client</span><br><span class="line"></span><br><span class="line">[root@client111 ~]<span class="comment"># systemctl restart iscsid</span></span><br><span class="line">[root@client111 ~]<span class="comment"># systemctl enable iscsid</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/iscsid.service to /usr/lib/systemd/system/iscsid.service.</span><br></pre></td></tr></table></figure><h4 id="登录iSCSI服务端"><a href="#登录iSCSI服务端" class="headerlink" title="登录iSCSI服务端"></a>登录iSCSI服务端</h4><blockquote><p> iscsiadm是用于管理、查询、插入、更新或删除iSCSI数据库配置文件的命令行工具，用户需要先使用这个工具扫描发现远程iSCSI服务端，然后查看找到的服务端上有哪些可用的共享存储资源。</p><p>-m discovery参数的目的是扫描并发现可用的存储资源，</p><p>-t st参数为执行扫描操作的类型，</p><p>-p 192.168.176.222 参数为iSCSI服务端的IP地址</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># iscsiadm -m discovery -t st -p 192.168.176.222</span></span><br><span class="line">192.168.176.222:3260,1 iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab</span><br></pre></td></tr></table></figure><blockquote><p>-m node参数为将客户端所在主机作为一台节点服务器，</p><p>-T  iqn.2003-01.org.linux-iscsi.linuxprobe.x8664:sn.d497c356ad80参数为要使用的存储资源 (直接复制前面命令中扫描发现的结果，以免错误)</p><p>-p 192.168.176.222参数依然为服务端iSCSI服务端的IP地址。</p><p>–login或-l参数进行登录验证。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># iscsiadm -m node -T iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab -p 192.168.176.222 --login</span></span><br><span class="line">Logging <span class="keyword">in</span> to [iface: default, target: iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab, portal: 192.168.176.222,3260] (multiple)</span><br><span class="line">Login to [iface: default, target: iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab, portal: 192.168.176.222,3260] successful.</span><br></pre></td></tr></table></figure><blockquote><p>此时我们lsbak看一下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># lsblk</span></span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0   20G  0 disk</span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   19G  0 part</span><br><span class="line">  ├─centos-root 253:0    0   17G  0 lvm  /</span><br><span class="line">  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">sdb               8:16   0   20G  0 disk</span><br><span class="line">sr0              11:0    1  4.2G  0 rom  /mnt/cdrom</span><br></pre></td></tr></table></figure><blockquote><p>发现此处多了一个/dev/sdb的设备文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># file /dev/sdb</span></span><br><span class="line">/dev/sdb: block special</span><br></pre></td></tr></table></figure><h4 id="挂载设备"><a href="#挂载设备" class="headerlink" title="挂载设备"></a>挂载设备</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># file /dev/sdb</span></span><br><span class="line">/dev/sdb: block special</span><br><span class="line">[root@client111 ~]<span class="comment"># mkfs.xfs /dev/sdb</span></span><br><span class="line">meta-data=/dev/sdb               isize=512    agcount=4, agsize=1310720 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0, sparse=0</span><br><span class="line">data     =                       bsize=4096   blocks=5242880, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">[root@client111 ~]<span class="comment"># mkdir /iscsi</span></span><br><span class="line">[root@client111 ~]<span class="comment"># mount /dev/sdb /iscsi/</span></span><br><span class="line">[root@client111 ~]<span class="comment"># df -Th</span></span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/centos-root xfs        17G  4.4G   13G   26% /</span><br><span class="line">devtmpfs                devtmpfs  977M     0  977M    0% /dev</span><br><span class="line">tmpfs                   tmpfs     993M     0  993M    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     993M  9.0M  984M    1% /run</span><br><span class="line">tmpfs                   tmpfs     993M     0  993M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sr0                iso9660   4.3G  4.3G     0  100% /mnt/cdrom</span><br><span class="line">/dev/sda1               xfs      1014M  161M  854M   16% /boot</span><br><span class="line">tmpfs                   tmpfs     199M   12K  199M    1% /run/user/42</span><br><span class="line">tmpfs                   tmpfs     199M     0  199M    0% /run/user/0</span><br><span class="line">/dev/sdb                xfs        20G   33M   20G    1% /iscsi</span><br></pre></td></tr></table></figure><h4 id="永久挂载"><a href="#永久挂载" class="headerlink" title="永久挂载"></a>永久挂载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># blkid | grep /dev/sdb</span></span><br><span class="line">/dev/sdb: UUID=<span class="string">"cc4c5965-a701-4534-85ad-60df267cf5d7"</span> TYPE=<span class="string">"xfs"</span></span><br><span class="line">[root@client111 ~]<span class="comment"># vim /etc/fstab</span></span><br><span class="line">[root@client111 ~]<span class="comment"># tail -n 1 /etc/fstab</span></span><br><span class="line">UUID=<span class="string">"cc4c5965-a701-4534-85ad-60df267cf5d7"</span> /iscsi xfs defaults,_netdev 0 0</span><br><span class="line">[root@client111 ~]<span class="comment"># mount -a</span></span><br></pre></td></tr></table></figure><h4 id="卸载ISCSI共享资源设备"><a href="#卸载ISCSI共享资源设备" class="headerlink" title="卸载ISCSI共享资源设备"></a>卸载ISCSI共享资源设备</h4><blockquote><p> 可以用iscsiadm命令的-u参数将其设备卸载</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@client111 ~]<span class="comment"># umount /iscsi/</span></span><br><span class="line">[root@client111 ~]<span class="comment"># df -Th</span></span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/centos-root xfs        17G  4.4G   13G   26% /</span><br><span class="line">devtmpfs                devtmpfs  977M     0  977M    0% /dev</span><br><span class="line">tmpfs                   tmpfs     993M     0  993M    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     993M  9.0M  984M    1% /run</span><br><span class="line">tmpfs                   tmpfs     993M     0  993M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sr0                iso9660   4.3G  4.3G     0  100% /mnt/cdrom</span><br><span class="line">/dev/sda1               xfs      1014M  161M  854M   16% /boot</span><br><span class="line">tmpfs                   tmpfs     199M   12K  199M    1% /run/user/42</span><br><span class="line">tmpfs                   tmpfs     199M     0  199M    0% /run/user/0</span><br><span class="line">[root@client111 ~]<span class="comment"># iscsiadm -m node -T iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab -u</span></span><br><span class="line">Logging out of session [sid: 1, target: iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab, portal: 192.168.176.222,3260]</span><br><span class="line">Logout of [sid: 1, target: iqn.2003-01.org.linux-iscsi.server222.x8664:sn.c0e1179441ab, portal: 192.168.176.222,3260] successful.</span><br></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1．简述iSCSI存储技术在生产环境中的作用。</p><p>2．在Linux系统中，iSCSI服务端和iSCSI客户端所使用的服务程序分别叫什么？</p><p>3．在使用targetcli命令配置iSCSI服务端配置文件时，acls与portals参数目录中分别存放什么内容？</p><p>4．iSCSI协议占用了服务器哪个协议和端口号？</p><p>5．用户在填写fstab设备挂载配置文件时，一般会把远程存储资源的UUID（而非设备的名称）填写到配置文件中。这是为什么？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux进阶" scheme="https://github.com/chineselijie/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux进阶" scheme="https://github.com/chineselijie/tags/linux%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>网络基础管理</title>
    <link href="https://github.com/chineselijie/2019/08/29/10.linux--%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E7%AE%A1%E7%90%86/"/>
    <id>https://github.com/chineselijie/2019/08/29/10.linux--%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E7%AE%A1%E7%90%86/</id>
    <published>2019-08-29T15:44:18.580Z</published>
    <updated>2019-08-22T13:23:46.830Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[TOC]</p><h2 id="网卡命名"><a href="#网卡命名" class="headerlink" title="网卡命名"></a>网卡命名</h2><h3 id="传统网卡命名机制"><a href="#传统网卡命名机制" class="headerlink" title="传统网卡命名机制"></a>传统网卡命名机制</h3><blockquote><p>传统命名： </p><p>以太网eth[0,1,2,…] </p><p>wlan[0,1,2,…] </p></blockquote><h3 id="redhat7网卡命名机制"><a href="#redhat7网卡命名机制" class="headerlink" title="redhat7网卡命名机制"></a>redhat7网卡命名机制</h3><blockquote><p>systemd对网络设备的命名方式：</p><ol><li>如果Firmware或BIOS为主板上集成的设备提供的索引信息可用，且可预测，则根据此索引进行命名，例如eno1</li><li>如果Firmware或BIOS为PCI-E扩展槽所提供的索引信息可用，且可预测，则根据此索引进行命名，例如ens1</li><li>如果硬件接口的物理位置信息可用，则根据此信息进行命名，例如enp2s0</li><li>如果用户显式启动，也可根据MAC地址进行命名，例如enx2387a1dc56</li><li>上述均不可用时，则使用传统命名机制</li></ol></blockquote><p>上述命名机制中，有的需要biosdevname程序的参与。所以必须安装biosdevname程序且启用它。</p><h3 id="网络接口名称组成格式"><a href="#网络接口名称组成格式" class="headerlink" title="网络接口名称组成格式"></a>网络接口名称组成格式</h3><h3 id="网卡设备的命名过程"><a href="#网卡设备的命名过程" class="headerlink" title="网卡设备的命名过程"></a>网卡设备的命名过程</h3><ol><li>udev，辅助工具程序/lib/udev/rename_device会根据/usr/lib/udev/rules.d/60-net.rules中的信息设定网卡名称</li><li>biosdevname会根据/usr/lib/udev/rules.d/71-biosdevname.rules中的信息设定网卡名称</li><li>通过udev检测网络接口设备，根据/usr/lib/udev/rules.d/75-net-description中的变量信息设定网卡名称</li></ol><h3 id="回归传统命名"><a href="#回归传统命名" class="headerlink" title="回归传统命名"></a>回归传统命名</h3><h5 id="修改网卡配置文件"><a href="#修改网卡配置文件" class="headerlink" title="修改网卡配置文件"></a>修改网卡配置文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># cd /etc/sysconfig/network-scripts/</span></span><br><span class="line">[root@zhoulijie network-scripts]<span class="comment"># mv ifcfg-ens33 ifcfg-eth0</span></span><br><span class="line">[root@zhoulijie network-scripts]<span class="comment"># vim ifcfg-eth0</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">NAME=eth0  //此处要把ens33改成eth0</span><br><span class="line">UUID=bb501ad9-f26f-4310-b857-14a1fc520546</span><br><span class="line">DEVICE=eth0  //此处要把ens33改成eth0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.83.140</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.83.2</span><br><span class="line">DNS1=192.168.83.2</span><br></pre></td></tr></table></figure><h5 id="编辑-etc-default-grub配置文件"><a href="#编辑-etc-default-grub配置文件" class="headerlink" title="编辑/etc/default/grub配置文件"></a>编辑/etc/default/grub配置文件</h5><blockquote><p>在以GRUB_CMDLINE_LINUX开头的行内rhgb的前面加上net.ifnames=0 biosdevname=0 </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie network-scripts]<span class="comment"># vim /etc/default/grub</span></span><br><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=<span class="string">"<span class="variable">$(sed 's, release .*$,,g' /etc/system-release)</span>"</span></span><br><span class="line">GRUB_DEFAULT=saved</span><br><span class="line">GRUB_DISABLE_SUBMENU=<span class="literal">true</span></span><br><span class="line">GRUB_TERMINAL_OUTPUT=<span class="string">"console"</span></span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">"crashkernel=auto rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap net.ifnames=0 biosdevname=0 rhgb quiet"</span></span><br><span class="line">GRUB_DISABLE_RECOVERY=<span class="string">"true"</span></span><br></pre></td></tr></table></figure><h5 id="为grub2生成其配置文件"><a href="#为grub2生成其配置文件" class="headerlink" title="为grub2生成其配置文件"></a>为grub2生成其配置文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie network-scripts]<span class="comment"># grub2-mkconfig -o /etc/grub2.cfg</span></span><br><span class="line">Generating grub configuration file ...</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-0-rescue-fd0bcf5782d24ba5b903b175c35f328e</span><br><span class="line">Found initrd image: /boot/initramfs-0-rescue-fd0bcf5782d24ba5b903b175c35f328e.img</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h5 id="重启系统"><a href="#重启系统" class="headerlink" title="重启系统"></a>重启系统</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie network-scripts]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h2 id="网络管理常用命令"><a href="#网络管理常用命令" class="headerlink" title="网络管理常用命令"></a>网络管理常用命令</h2><h3 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h3><h5 id="查看当前处于活动状态的所有网络接口"><a href="#查看当前处于活动状态的所有网络接口" class="headerlink" title="查看当前处于活动状态的所有网络接口"></a>查看当前处于活动状态的所有网络接口</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ifconfig</span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.83.140  netmask 255.255.255.0  broadcast 192.168.83.255</span><br><span class="line">        inet6 fe80::20c:29ff:feab:cc67  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:ab:cc:67  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 694  bytes 64096 (62.5 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 435  bytes 53145 (51.8 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 18  bytes 1624 (1.5 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 18  bytes 1624 (1.5 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">virbr0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255</span><br><span class="line">        ether 52:54:00:f0:f8:b0  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><h5 id="仅查看单个网卡状态"><a href="#仅查看单个网卡状态" class="headerlink" title="仅查看单个网卡状态"></a>仅查看单个网卡状态</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ifconfig eth0</span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.83.140  netmask 255.255.255.0  broadcast 192.168.83.255</span><br><span class="line">        inet6 fe80::20c:29ff:feab:cc67  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:ab:cc:67  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 726  bytes 66886 (65.3 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 453  bytes 56481 (55.1 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><h5 id="查看所有网卡状态信息-包括禁用和启用"><a href="#查看所有网卡状态信息-包括禁用和启用" class="headerlink" title="查看所有网卡状态信息, 包括禁用和启用"></a>查看所有网卡状态信息, 包括禁用和启用</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ifconfig -a</span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.83.140  netmask 255.255.255.0  broadcast 192.168.83.255</span><br><span class="line">        inet6 fe80::20c:29ff:feab:cc67  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:ab:cc:67  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 763  bytes 70122 (68.4 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 475  bytes 60789 (59.3 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 18  bytes 1624 (1.5 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 18  bytes 1624 (1.5 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">virbr0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255</span><br><span class="line">        ether 52:54:00:f0:f8:b0  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">virbr0-nic: flags=4098&lt;BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        ether 52:54:00:f0:f8:b0  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><h5 id="网卡配置信息含义如下"><a href="#网卡配置信息含义如下" class="headerlink" title="网卡配置信息含义如下"></a>网卡配置信息含义如下</h5><blockquote><p> UP: 网卡处于活动状态</p><p> BROADCAST: 支持广播</p><p> RUNNING: 网线已接入</p><p> MULTICAST: 支持组播</p><p> MTU: 最大传输单元(字节),即此接口一次所能传输的最大封包</p><p> inet: 显示IPv4地址行</p><p> inet6: 显示IPv6地址行</p><p>link/enther: 指设备硬件(MAC)地址</p><p> txqueuelen: 传输缓存区长度大小</p><p>RX packets: 接收的数据包</p><p>TX packets: 发送的数据包</p><p>errors: 总的收包的错误数量</p><p>dropped: 由于各种原因, 导致拷贝在内存过程中被丢弃</p><p>collisions: 网络信号冲突情况, 值不为0则可能存在网络故障</p></blockquote><h3 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h3><blockquote><p>//语法：ip [ OPTIONS ] OBJECT { COMMAND | help }<br>OBJECT：<br>    link：网络接口属性<br>    addr：协议地址<br>    route：路由 </p></blockquote><h5 id="查看网络有接口地址"><a href="#查看网络有接口地址" class="headerlink" title="查看网络有接口地址"></a>查看网络有接口地址</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ip link show</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT qlen 1</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT qlen 1000</span><br><span class="line">    link/ether 00:0c:29:ab:cc:67 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">3: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT qlen 1000</span><br><span class="line">    link/ether 52:54:00:f0:f8:b0 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">4: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast master virbr0 state DOWN mode DEFAULT qlen 1000</span><br><span class="line">    link/ether 52:54:00:f0:f8:b0 brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure><h5 id="显示报文统计信息"><a href="#显示报文统计信息" class="headerlink" title="显示报文统计信息"></a>显示报文统计信息</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ip -s link show</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT qlen 1</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    RX: bytes  packets  errors  dropped overrun mcast</span><br><span class="line">    1624       18       0       0       0       0</span><br><span class="line">    TX: bytes  packets  errors  dropped carrier collsns</span><br><span class="line">    1624       18       0       0       0       0</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT qlen 1000</span><br><span class="line">    link/ether 00:0c:29:ab:cc:67 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    RX: bytes  packets  errors  dropped overrun mcast</span><br><span class="line">    35806      380      0       0       0       0</span><br><span class="line">    TX: bytes  packets  errors  dropped carrier collsns</span><br><span class="line">    27393      240      0       0       0       0</span><br><span class="line">3: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN mode DEFAULT qlen 1000</span><br><span class="line">    link/ether 52:54:00:f0:f8:b0 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    RX: bytes  packets  errors  dropped overrun mcast</span><br><span class="line">    0          0        0       0       0       0</span><br><span class="line">    TX: bytes  packets  errors  dropped carrier collsns</span><br><span class="line">    0          0        0       0       0       0</span><br><span class="line">4: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast master virbr0 state DOWN mode DEFAULT qlen 1000</span><br><span class="line">    link/ether 52:54:00:f0:f8:b0 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    RX: bytes  packets  errors  dropped overrun mcast</span><br><span class="line">    0          0        0       0       0       0</span><br><span class="line">    TX: bytes  packets  errors  dropped carrier collsns</span><br><span class="line">    0          0        0       0       0       0</span><br></pre></td></tr></table></figure><h5 id="启用或禁用网络接口ip-link-set-DEV-up-down"><a href="#启用或禁用网络接口ip-link-set-DEV-up-down" class="headerlink" title="启用或禁用网络接口ip link set DEV {up|down}"></a>启用或禁用网络接口ip link set DEV {up|down}</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ip link set lo down</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># ip link set lo up</span></span><br></pre></td></tr></table></figure><h5 id="查看网络接口的地址"><a href="#查看网络接口的地址" class="headerlink" title="查看网络接口的地址"></a>查看网络接口的地址</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ip addr show eth0</span></span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">    link/ether 00:0c:29:ab:cc:67 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.83.140/24 brd 192.168.83.255 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:feab:cc67/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h5 id="添加IP地址"><a href="#添加IP地址" class="headerlink" title="添加IP地址"></a>添加IP地址</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ip addr add 192.168.83.141/24 dev eth0</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># ip addr show eth0</span></span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">    link/ether 00:0c:29:ab:cc:67 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.83.140/24 brd 192.168.83.255 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 192.168.83.141/24 scope global secondary eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:feab:cc67/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h5 id="删除IP地址"><a href="#删除IP地址" class="headerlink" title="删除IP地址"></a>删除IP地址</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ip addr del 192.168.83.141/24 dev eth0</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># ip addr show eth0</span></span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">    link/ether 00:0c:29:ab:cc:67 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.83.140/24 brd 192.168.83.255 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:feab:cc67/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h3 id="路由管理"><a href="#路由管理" class="headerlink" title="路由管理"></a>路由管理</h3><blockquote><p>ip route：routing table management</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//添加路由：ip route add TARGET via GW dev IFACE src SOURCE_IP</span><br><span class="line">    TARGET：</span><br><span class="line">        主机路由：IP</span><br><span class="line">        网络路由：NETWORK/MASK </span><br><span class="line">        </span><br><span class="line">//删除路由：ip route del TARGET</span><br><span class="line">    TARGET：</span><br><span class="line">        主机路由：IP</span><br><span class="line">        网络路由：NETWORK/MASK</span><br><span class="line">                        </span><br><span class="line">//查看路由：ip route show</span><br><span class="line"></span><br><span class="line">//刷新路由表：ip route flush</span><br><span class="line">    [dev IFACE]</span><br><span class="line">    [via PREFIX]</span><br></pre></td></tr></table></figure><h3 id="route"><a href="#route" class="headerlink" title="route"></a>route</h3><p>Linux主机之间是使用IP进行通信, 假设A主机和B主机同在一个网段内且网卡都处于激活状态, 则A具备和B直接通信的能力, 但如果A主机和B主机处于两个不同的网段, 则A必须通过路由器才能和B通信, 路由器属于IT设备的基础设施, 每一个网段都应该至少有一个网关 </p><h5 id="查看当前路由表"><a href="#查看当前路由表" class="headerlink" title="查看当前路由表"></a>查看当前路由表</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># route</span></span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">default         gateway         0.0.0.0         UG    100    0        0 eth0</span><br><span class="line">192.168.83.0    0.0.0.0         255.255.255.0   U     100    0        0 eth0</span><br><span class="line">192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0</span><br></pre></td></tr></table></figure><h5 id="以数字方式显示各主机或端口等相关信息"><a href="#以数字方式显示各主机或端口等相关信息" class="headerlink" title="以数字方式显示各主机或端口等相关信息"></a>以数字方式显示各主机或端口等相关信息</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># route -n</span></span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">0.0.0.0         192.168.83.2    0.0.0.0         UG    100    0        0 eth0</span><br><span class="line">192.168.83.0    0.0.0.0         255.255.255.0   U     100    0        0 eth0</span><br><span class="line">192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0</span><br></pre></td></tr></table></figure><blockquote><p>增加路由<br>语法：route add [-net|-host] target [netmask Nm][gw Gw]  [[dev] If]</p></blockquote><h5 id="增加网段路由"><a href="#增加网段路由" class="headerlink" title="增加网段路由"></a>增加网段路由</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># route add -net 192.168.83.0/24 gw 192.168.83.2 dev eth0</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># route add -net 0.0.0.0 gw 192.168.83.2 dev eth0</span></span><br></pre></td></tr></table></figure><h5 id="增加主机路由"><a href="#增加主机路由" class="headerlink" title="增加主机路由"></a>增加主机路由</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># route add -host 192.168.83.144 gw 192.168.83.2</span></span><br></pre></td></tr></table></figure><h5 id="删除路由"><a href="#删除路由" class="headerlink" title="删除路由"></a>删除路由</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># route del -net 192.168.83.0/24</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># route del -net 0.0.0.0/0 gw 192.168.83.2</span></span><br></pre></td></tr></table></figure><h3 id="hostname与hostnamectl"><a href="#hostname与hostnamectl" class="headerlink" title="hostname与hostnamectl"></a>hostname与hostnamectl</h3><p>生产环境中必须配置主机名,同时主机名也需要遵循一定的规范, 比如: </p><table><thead><tr><th align="center">地区</th><th align="center">项目</th><th align="center">业务</th><th align="center">服务</th><th align="center">节点</th><th align="center">地址</th></tr></thead><tbody><tr><td align="center">wuhan</td><td align="center">Supermarket</td><td align="center">Library file</td><td align="center">mysql</td><td align="center">master01</td><td align="center">192.168.83.1</td></tr><tr><td align="center">guangzhou</td><td align="center">Bank</td><td align="center">Library file</td><td align="center">mysql</td><td align="center">master01</td><td align="center">192.168.83.111</td></tr><tr><td align="center">shanghai</td><td align="center">Street</td><td align="center">Library file</td><td align="center">mysql</td><td align="center">master01</td><td align="center">192.168.83.10</td></tr></tbody></table><h5 id="查看主机名"><a href="#查看主机名" class="headerlink" title="查看主机名"></a>查看主机名</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># hostname</span></span><br><span class="line">zhoulijie</span><br></pre></td></tr></table></figure><h5 id="hostname临时修改主机名"><a href="#hostname临时修改主机名" class="headerlink" title="hostname临时修改主机名"></a>hostname临时修改主机名</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># hostname 123</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># bash</span></span><br><span class="line">[root@123 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h5 id="设置永久主机名"><a href="#设置永久主机名" class="headerlink" title="设置永久主机名"></a>设置永久主机名</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@123 ~]<span class="comment"># vim /etc/hostname</span></span><br><span class="line">[root@123 ~]<span class="comment"># cat /etc/hostname</span></span><br><span class="line">zhoulijie</span><br><span class="line">[root@123 ~]<span class="comment"># bash</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong> 在Linux中以命令方式修改网络配置只在当前状态有效，重启后将失效。故若想使修改的配置重启后依然有效，则必须编辑配置文件进行配置的修改。 </p></blockquote><h2 id="网络相关配置文件"><a href="#网络相关配置文件" class="headerlink" title="网络相关配置文件"></a>网络相关配置文件</h2><h3 id="网络配置文件"><a href="#网络配置文件" class="headerlink" title="网络配置文件"></a>网络配置文件</h3><blockquote><p>网络配置文件：/etc/sysconfig/network</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NETWORKING=&#123;yes|no&#125;：设定整个系统是否启用网络功能，若设为no，则不论网卡如何设置都不能使用网络功能。</span><br><span class="line">HOSTNAME：设置主机名</span><br></pre></td></tr></table></figure><h4 id="网络接口配置文件"><a href="#网络接口配置文件" class="headerlink" title="网络接口配置文件"></a>网络接口配置文件</h4><p>网络接口即网卡，其配置文件的路径是<code>/etc/sysconfig/network-scripts/ifcfg-INTERFACE_NAME</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth0 </span><br><span class="line">TYPE=Ethernet                //接口类型。常见的接口类型有：Ethernet，Bridge</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static             //引导协议，可选值有｛static｜none｜dhcp｜bootp｝。如果要使用静态地址，使用static或none都可以</span><br><span class="line">DEFROUTE=yes                //将接口设定为默认路由[yes|no]</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">NAME=eth0                   //连接名称</span><br><span class="line">UUID=bb501ad9-f26f-4310-b857-14a1fc520546     //设备的惟一标识</span><br><span class="line">DEVICE=eth0                 //关联的设备名称，要与文件名的后半部&quot;INTERFACE_NAME&quot;保持一致</span><br><span class="line">ONBOOT=yes                  //在系统引导时是否自动激活此网络接口，可选值有&#123; yes ｜ no &#125;</span><br><span class="line">IPADDR=192.168.83.140       //固定IP地址</span><br><span class="line">NETMASK=255.255.255.0       //子网掩码</span><br><span class="line">GATEWAY=192.168.83.2        //默认网关</span><br><span class="line">DNS1=192.168.83.2           //第一个DNS服务器指向(还可以有DNS2、DNS3)</span><br></pre></td></tr></table></figure><h3 id="路由配置文件"><a href="#路由配置文件" class="headerlink" title="路由配置文件"></a>路由配置文件</h3><p>路由配置文件的路径是<code>/etc/sysconfig/network-scripts/route-INTERFACE_NAME</code></p><p>添加格式1：</p><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># vim /etc/sysconfig/network-scripts/route-eth0</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># cat /etc/sysconfig/network-scripts/route-eth0</span></span><br><span class="line">192.168.83.0/24 via 192.168.83.2</span><br></pre></td></tr></table></figure></code></pre><p>添加格式2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># vim /etc/sysconfig/network-scripts/route-eth0</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># cat /etc/sysconfig/network-scripts/route-eth0</span></span><br><span class="line">ADDRESS0=192.168.83.0</span><br><span class="line">NETMASK0=255.255.255.0</span><br><span class="line">GATEWAY0=192.168.83.2</span><br></pre></td></tr></table></figure><h3 id="DNS配置文件"><a href="#DNS配置文件" class="headerlink" title="DNS配置文件"></a>DNS配置文件</h3><p>DNS配置文件的路径是<code>/etc/resolv.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]# vim /etc/resolv.conf</span><br><span class="line">[root@zhoulijie ~]# cat /etc/resolv.conf</span><br><span class="line"># Generated by NetworkManager</span><br><span class="line">nameserver 192.168.83.2</span><br></pre></td></tr></table></figure><h2 id="NerworkManager管理网络"><a href="#NerworkManager管理网络" class="headerlink" title="NerworkManager管理网络"></a>NerworkManager管理网络</h2><p><code>RHEL/CentOS7</code>系统默认使用<code>NetworkManager</code>来提供网络服务，这是一种动态管理网络配置的守护进程，能够让网络设备保持连接状态。<br><code>NetworkManager</code>提供的命令行和图形配置工具对网络进行设定, 设定保存的配置文件在<code>/etc/sysconfig/network-scripts</code>目录下, 工具有 <code>nmcli, nmtui, nm-connect-editor</code></p><p><code>device</code>物理设备, 例如 <code>ens33,enp2s0,virbr0,team0</code><br><code>connection</code>连接设置, 具体网络配置方案</p><blockquote><p>1.不同的网络连接配置可以应用到相同的物理设备，但物理设备同一时间只能应用其中某个网络连接<br>2.针对物理网络接口, 设定不同的网络连接, 在不同的使用环境中激活相应的网络连接，就可以实现网络配置信息的自动切换了</p></blockquote><p>使用<code>nmcli</code>命令查看设备以及连接情况</p><h5 id="查看设备状态"><a href="#查看设备状态" class="headerlink" title="查看设备状态"></a>查看设备状态</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli device</span></span><br><span class="line">设备        类型      状态    连接   </span><br><span class="line">virbr0      bridge    连接的  virbr0 </span><br><span class="line">eth0        ethernet  连接的  eth0   </span><br><span class="line">lo          loopback  未托管  --     </span><br><span class="line">virbr0-nic  tun       未托管  --</span><br></pre></td></tr></table></figure><h5 id="查看指定设备的详细状态"><a href="#查看指定设备的详细状态" class="headerlink" title="查看指定设备的详细状态"></a>查看指定设备的详细状态</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli device show eth0</span></span><br><span class="line">GENERAL.设备:                           eth0</span><br><span class="line">GENERAL.类型:                           ethernet</span><br><span class="line">GENERAL.硬盘:                           00:0C:29:AB:CC:67</span><br><span class="line">GENERAL.MTU:                            1500</span><br><span class="line">GENERAL.状态:                           100 (连接的)</span><br><span class="line">GENERAL.连接:                           eth0</span><br><span class="line">GENERAL.连接路径:                       /org/freedesktop/NetworkManager/ActiveConnection/1</span><br><span class="line">WIRED-PROPERTIES.载波:                  开</span><br><span class="line">IP4.地址[1]:                            192.168.83.140/24</span><br><span class="line">IP4.网关:                               192.168.83.2</span><br><span class="line">IP4.路由[1]:                            dst = 192.168.83.144/32, nh = 192.168.83.2, mt = 0</span><br><span class="line">IP4.DNS[1]:                             192.168.83.2</span><br><span class="line">IP6.地址[1]:                            fe80::20c:29ff:feab:cc67/64</span><br><span class="line">IP6.网关:                               --</span><br></pre></td></tr></table></figure><h5 id="查看连接状态"><a href="#查看连接状态" class="headerlink" title="查看连接状态"></a>查看连接状态</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection</span></span><br><span class="line">名称    UUID                                  类型            设备   </span><br><span class="line">eth0    bb501ad9-f26f-4310-b857-14a1fc520546  802-3-ethernet  eth0   </span><br><span class="line">virbr0  d8b4e76e-b469-4ff4-8937-cef5cc254873  bridge          virbr0</span><br></pre></td></tr></table></figure><h5 id="查看所有活动的连接"><a href="#查看所有活动的连接" class="headerlink" title="查看所有活动的连接"></a>查看所有活动的连接</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection show</span></span><br><span class="line">名称    UUID                                  类型            设备   </span><br><span class="line">eth0    bb501ad9-f26f-4310-b857-14a1fc520546  802-3-ethernet  eth0   </span><br><span class="line">virbr0  d8b4e76e-b469-4ff4-8937-cef5cc254873  bridge          virbr0</span><br></pre></td></tr></table></figure><h5 id="查看指定设备连接的详细情况"><a href="#查看指定设备连接的详细情况" class="headerlink" title="查看指定设备连接的详细情况"></a>查看指定设备连接的详细情况</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># nmcli connection show eth0</span></span><br><span class="line">connection.id:                          eth0</span><br><span class="line">connection.uuid:                        bb501ad9-f26f-4310-b857-14a1fc520546</span><br><span class="line">connection.stable-id:                   --</span><br><span class="line">connection.interface-name:              eth0</span><br><span class="line">connection.type:                        802-3-ethernet</span><br><span class="line">connection.autoconnect:                 yes</span><br><span class="line">connection.autoconnect-priority:        0</span><br><span class="line">connection.autoconnect-retries:         -1 (默认)</span><br><span class="line">connection.timestamp:                   1555937607</span><br><span class="line">connection.read-only:                   no</span><br><span class="line">connection.permissions:                 --</span><br><span class="line">connection.zone:                        --</span><br><span class="line">connection.master:                      --</span><br><span class="line">connection.slave-type:                  --</span><br><span class="line">connection.autoconnect-slaves:          -1 (默认)</span><br><span class="line">connection.secondaries:                 --</span><br><span class="line">connection.gateway-ping-timeout:        0</span><br><span class="line">connection.metered:                     未知</span><br><span class="line">connection.lldp:                        -1 (default)</span><br><span class="line">802-3-ethernet.port:                    --</span><br><span class="line">802-3-ethernet.speed:                   0</span><br><span class="line">802-3-ethernet.duplex:                  --</span><br><span class="line">802-3-ethernet.auto-negotiate:          no</span><br><span class="line">802-3-ethernet.mac-address:             --</span><br><span class="line">802-3-ethernet.cloned-mac-address:      --</span><br><span class="line">802-3-ethernet.generate-mac-address-mask:--</span><br><span class="line">802-3-ethernet.mac-address-blacklist:   --</span><br><span class="line">802-3-ethernet.mtu:                     自动</span><br><span class="line">802-3-ethernet.s390-subchannels:        --</span><br><span class="line">802-3-ethernet.s390-nettype:            --</span><br><span class="line">802-3-ethernet.s390-options:            --</span><br><span class="line">802-3-ethernet.wake-on-lan:             1 (default)</span><br><span class="line">802-3-ethernet.wake-on-lan-password:    --</span><br><span class="line">ipv4.method:                            manual</span><br><span class="line">ipv4.dns:                               192.168.83.2</span><br><span class="line">ipv4.dns-search:                        --</span><br><span class="line">ipv4.dns-options:                       （默认）</span><br><span class="line">ipv4.dns-priority:                      0</span><br><span class="line">ipv4.addresses:                         192.168.83.140/24</span><br><span class="line">ipv4.gateway:                           192.168.83.2</span><br><span class="line">ipv4.routes:                            --</span><br><span class="line">ipv4.route-metric:                      -1</span><br><span class="line">ipv4.ignore-auto-routes:                no</span><br><span class="line">ipv4.ignore-auto-dns:                   no</span><br><span class="line">ipv4.dhcp-client-id:                    --</span><br><span class="line">ipv4.dhcp-timeout:                      0</span><br><span class="line">ipv4.dhcp-send-hostname:                yes</span><br><span class="line">ipv4.dhcp-hostname:                     --</span><br><span class="line">ipv4.dhcp-fqdn:                         --</span><br><span class="line">ipv4.never-default:                     no</span><br><span class="line">ipv4.may-fail:                          yes</span><br><span class="line">ipv4.dad-timeout:                       -1 (默认)</span><br><span class="line">ipv6.method:                            ignore</span><br><span class="line">ipv6.dns:                               --</span><br><span class="line">ipv6.dns-search:                        --</span><br><span class="line">ipv6.dns-options:                       （默认）</span><br><span class="line">ipv6.dns-priority:                      0</span><br><span class="line">ipv6.addresses:                         --</span><br><span class="line">ipv6.gateway:                           --</span><br><span class="line">ipv6.routes:                            --</span><br><span class="line">ipv6.route-metric:                      -1</span><br><span class="line">ipv6.ignore-auto-routes:                no</span><br><span class="line">ipv6.ignore-auto-dns:                   no</span><br><span class="line">ipv6.never-default:                     no</span><br><span class="line">ipv6.may-fail:                          yes</span><br><span class="line">ipv6.ip6-privacy:                       -1 (未知)</span><br><span class="line">ipv6.addr-gen-mode:                     stable-privacy</span><br><span class="line">ipv6.dhcp-send-hostname:                yes</span><br><span class="line">ipv6.dhcp-hostname:                     --</span><br><span class="line">ipv6.token:                             --</span><br><span class="line">proxy.method:                           none</span><br><span class="line">proxy.browser-only:                     no</span><br><span class="line">proxy.pac-url:                          --</span><br><span class="line">proxy.pac-script:                       --</span><br><span class="line">GENERAL.名称:                           eth0</span><br><span class="line">GENERAL.UUID:                           bb501ad9-f26f-4310-b857-14a1fc520546</span><br><span class="line">GENERAL.设备:                           eth0</span><br><span class="line">GENERAL.状态:                           已激活</span><br><span class="line">GENERAL.默认:                           是</span><br><span class="line">GENERAL.默认6:                          否</span><br><span class="line">GENERAL.VPN 参数:                       否</span><br><span class="line">GENERAL.区:                             --</span><br><span class="line">GENERAL.DBUS路径:                       /org/freedesktop/NetworkManager/ActiveConnection/1</span><br><span class="line">GENERAL.连接路径:                       /org/freedesktop/NetworkManager/Settings/1</span><br><span class="line">GENERAL.指定对象:                       --</span><br><span class="line">GENERAL.主路径:                         --</span><br><span class="line">IP4.地址[1]:                            192.168.83.140/24</span><br><span class="line">IP4.网关:                               192.168.83.2</span><br><span class="line">IP4.路由[1]:                            dst = 192.168.83.144/32, nh = 192.168.83.2, mt = 0</span><br><span class="line">IP4.DNS[1]:                             192.168.83.2</span><br><span class="line">IP6.地址[1]:                            fe80::20c:29ff:feab:cc67/64</span><br><span class="line">IP6.网关:                               --</span><br></pre></td></tr></table></figure><h2 id="使用原生network管理网络"><a href="#使用原生network管理网络" class="headerlink" title="使用原生network管理网络"></a>使用原生network管理网络</h2><p><code>CentOS/RHEL</code>的网络配置文件默认目录为<code>/etc/sysconfig/network-scripts</code><br>默认第一块物理网卡配置文件为<code>ifcfg-eth0</code>, 如果有第二块物理网卡, 配置文件则为<code>ifcfg-eth1</code>以此类推。 注意: 如果新增物理网卡没有配置文件，可选择复制系统默认的进行修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">//设置NetworkManger开机不启动, 同时停止NetworkManger服务</span><br><span class="line">[root@zhoulijie ~]# systemctl disable NetworkManager</span><br><span class="line">[root@zhoulijie ~]# systemctl stop NetworkManager</span><br><span class="line"></span><br><span class="line">//添加一块物理网卡, 然后新增网络连接配置文件</span><br><span class="line">//复制配置eth0配置文件为eth1</span><br><span class="line">[root@zhoulijie ~]# cd /etc/sysconfig/network-scripts/</span><br><span class="line">[root@zhoulijie network-scripts]# cp ifcfg-eth0 ifcfg-eth1</span><br><span class="line"></span><br><span class="line">//编辑网卡配置文件</span><br><span class="line">[root@zhoulijie ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth1</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">NAME=eth1</span><br><span class="line">UUID=bb501ad9-f26f-4310-b857-14a1fc520546</span><br><span class="line">DEVICE=eth1</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.83.141</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.83.2</span><br><span class="line">DNS1=192.168.83.2</span><br><span class="line"></span><br><span class="line">//重启network网络服务加载网络并设置开机启动</span><br><span class="line">[root@zhoulijie ~]# systemctl restart network</span><br><span class="line">[root@zhoulijie ~]# systemctl enable network</span><br></pre></td></tr></table></figure><h2 id="网络检测工具与故障排查"><a href="#网络检测工具与故障排查" class="headerlink" title="网络检测工具与故障排查"></a>网络检测工具与故障排查</h2><h3 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h3><p><code>ping</code>命令的目的在于测试另一台主机是否可达, 如果ping不到某台主机,就说明对方主机已经出现了问题, 但是不排除由于链路中的防火墙、ping被丢弃等原因造成ping不通的情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//ping命令常用选项：</span><br><span class="line">    -c 指定ping的次数</span><br><span class="line">    -i 指定ping包的发送间隔</span><br><span class="line">    -w 如果ping没有回应, 则在指定超时时间后退出</span><br></pre></td></tr></table></figure><h3 id="host与nslookup"><a href="#host与nslookup" class="headerlink" title="host与nslookup"></a>host与nslookup</h3><p><code>host/nslookup</code>命令用于查询DNS记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># host www.baidu.com</span></span><br><span class="line">www.baidu.com is an <span class="built_in">alias</span> <span class="keyword">for</span> www.a.shifen.com.</span><br><span class="line">www.a.shifen.com has address 180.97.33.107</span><br><span class="line">www.a.shifen.com has address 180.97.33.108</span><br><span class="line"></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># nslookup  www.baidu.com</span></span><br><span class="line">Server:         192.168.83.2</span><br><span class="line">Address:        192.168.83.2<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">www.baidu.com   canonical name = www.a.shifen.com.</span><br><span class="line">Name:   www.a.shifen.com</span><br><span class="line">Address: 180.97.33.108</span><br><span class="line">Name:   www.a.shifen.com</span><br><span class="line">Address: 180.97.33.107</span><br></pre></td></tr></table></figure><h3 id="traceroute"><a href="#traceroute" class="headerlink" title="traceroute"></a>traceroute</h3><p><code>traceroute</code>命令用于路由跟踪, 检测网络故障出现在ISP运营商或是对端服务无法响应</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># traceroute www.baidu.com</span></span><br><span class="line">traceroute to www.baidu.com (180.97.33.107), 30 hops max, 60 byte packets</span><br><span class="line">1  gateway (192.168.83.2)  0.143 ms  0.066 ms  0.089 ms</span><br><span class="line"> 2  * * *</span><br><span class="line"> 3  * * *</span><br><span class="line"> 4  * * *</span><br><span class="line"> 5  * * *</span><br><span class="line"> 6  * * *</span><br></pre></td></tr></table></figure><blockquote><p>在武汉地区，路由追踪被运营商限制</p><p>在北上广深可以路由追踪</p></blockquote><h3 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h3><p><code>netstat</code>用于查看网络状态</p><h5 id="显示路由表"><a href="#显示路由表" class="headerlink" title="显示路由表"></a>显示路由表</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># netstat -r</span></span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface</span><br><span class="line">default         gateway         0.0.0.0         UG        0 0          0 eth0</span><br><span class="line">192.168.83.0    0.0.0.0         255.255.255.0   U         0 0          0 eth0</span><br><span class="line">192.168.83.144  gateway         255.255.255.255 UGH       0 0          0 eth0</span><br><span class="line">192.168.122.0   0.0.0.0         255.255.255.0   U         0 0          0 virbr0</span><br></pre></td></tr></table></figure><h5 id="以数字方式显示路由表"><a href="#以数字方式显示路由表" class="headerlink" title="以数字方式显示路由表"></a>以数字方式显示路由表</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># netstat -rn</span></span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface</span><br><span class="line">0.0.0.0         192.168.83.2    0.0.0.0         UG        0 0          0 eth0</span><br><span class="line">192.168.83.0    0.0.0.0         255.255.255.0   U         0 0          0 eth0</span><br><span class="line">192.168.83.144  192.168.83.2    255.255.255.255 UGH       0 0          0 eth0</span><br><span class="line">192.168.122.0   0.0.0.0         255.255.255.0   U         0 0          0 virbr0</span><br></pre></td></tr></table></figure><h5 id="显示建立的tcp连接"><a href="#显示建立的tcp连接" class="headerlink" title="显示建立的tcp连接"></a>显示建立的tcp连接</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># netstat -t</span></span><br><span class="line">Active Internet connections (w/o servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State</span><br></pre></td></tr></table></figure><h5 id="显示udp连接"><a href="#显示udp连接" class="headerlink" title="显示udp连接"></a>显示udp连接</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># netstat -u</span></span><br><span class="line">Active Internet connections (w/o servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State</span><br></pre></td></tr></table></figure><h5 id="显示监听状态的连接"><a href="#显示监听状态的连接" class="headerlink" title="显示监听状态的连接"></a>显示监听状态的连接</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># netstat -l</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State      </span><br><span class="line">tcp        0      0 0.0.0.0:sunrpc          0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 zhoulijie:domain        0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 0.0.0.0:ssh             0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 localhost:ipp           0.0.0.0:*               LISTEN    </span><br><span class="line">..................以下省略.......................</span><br></pre></td></tr></table></figure><h5 id="显示所有状态的连接"><a href="#显示所有状态的连接" class="headerlink" title="显示所有状态的连接"></a>显示所有状态的连接</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># netstat -a</span></span><br><span class="line">Active Internet connections (servers and established)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State      </span><br><span class="line">tcp        0      0 0.0.0.0:sunrpc          0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 zhoulijie:domain        0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 0.0.0.0:ssh             0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 localhost:ipp           0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 localhost:smtp          0.0.0.0:*               LISTEN   </span><br><span class="line">..................以下省略.......................</span><br></pre></td></tr></table></figure><h5 id="常用选项"><a href="#常用选项" class="headerlink" title="常用选项"></a>常用选项</h5><blockquote><p> -antlp</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># netstat -antlp</span></span><br><span class="line">Active Internet connections (servers and established)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class="line">tcp        0      0 0.0.0.0:55033           0.0.0.0:*               LISTEN      1732/rpc.statd</span><br><span class="line">tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      1726/rpcbind</span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     </span><br><span class="line">..................以下省略.......................</span><br></pre></td></tr></table></figure><h3 id="ss"><a href="#ss" class="headerlink" title="ss"></a>ss</h3><p><code>ss</code>是一种网络状态查看工具，取代netstat</p><blockquote><p>语法：ss [options][ FILTER ]<br>常用的options：<br>    -t：tcp协议相关<br>    -u：udp协议相关<br>    -w：裸套接字相关<br>    -x：unix套接字相关<br>    -l：listen状态的连接<br>    -a：所有<br>    -n：数字格式<br>    -p：相关的程序及pid<br>    -e：扩展的信息<br>    -m：内存用量<br>    -o：显示计时器信息</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">常见的FILTER：</span><br><span class="line">    FILTER := [ state TCP-STATE ] [ EXPRESSION ]</span><br><span class="line">    如：ss -tan state ESTABLISHED</span><br><span class="line">                        </span><br><span class="line">常见的state：</span><br><span class="line">    //tcp finite state machine：有限状态机</span><br><span class="line">        LISTEN：监听</span><br><span class="line">        ESTABLISHED：已建立的连接</span><br><span class="line">        </span><br><span class="line">EXPRESSION：</span><br><span class="line">dport =</span><br><span class="line">sport =</span><br><span class="line">示例：&apos;( dport = :ssh or sport = :ssh)&apos;，此处的ssh也即服务名可以使用其对应的端口号代替，等号两边必须有空格</span><br></pre></td></tr></table></figure><h5 id="常用组合"><a href="#常用组合" class="headerlink" title="常用组合"></a>常用组合</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ss -tan</span></span><br><span class="line">State      Recv-Q Send-Q                Local Address:Port                               Peer Address:Port</span><br><span class="line">LISTEN     0      128                               *:22                                            *:*</span><br><span class="line">LISTEN     0      100                       127.0.0.1:25                                            *:*</span><br><span class="line">ESTAB      0      0                     172.16.12.128:22                                  172.16.12.1:56187</span><br><span class="line">ESTAB      0      0                     172.16.12.128:22                                  172.16.12.1:53808</span><br><span class="line">LISTEN     0      128                              :::22                                           :::*</span><br><span class="line">LISTEN     0      100                             ::1:25                                           :::*</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ss -tanl</span></span><br><span class="line">State      Recv-Q Send-Q                Local Address:Port                               Peer Address:Port</span><br><span class="line">LISTEN     0      128                               *:22                                            *:*</span><br><span class="line">LISTEN     0      100                       127.0.0.1:25                                            *:*</span><br><span class="line">LISTEN     0      128                              :::22                                           :::*</span><br><span class="line">LISTEN     0      100                             ::1:25                                           :::*</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ss -antlp</span></span><br><span class="line">State      Recv-Q Send-Q                Local Address:Port                               Peer Address:Port</span><br><span class="line">LISTEN     0      128                               *:22                                            *:*                   users:((<span class="string">"sshd"</span>,pid=889,fd=3))</span><br><span class="line">LISTEN     0      100                       127.0.0.1:25                                            *:*                   users:((<span class="string">"master"</span>,pid=1007,fd=13))</span><br><span class="line">LISTEN     0      128                              :::22                                           :::*                   users:((<span class="string">"sshd"</span>,pid=889,fd=4))</span><br><span class="line">LISTEN     0      100                             ::1:25                                           :::*                   users:((<span class="string">"master"</span>,pid=1007,fd=14))</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ss -anu</span></span><br><span class="line">State      Recv-Q Send-Q                Local Address:Port                               Peer Address:Port</span><br><span class="line">UNCONN     0      0                                 *:23511                                         *:*</span><br><span class="line">UNCONN     0      0                                 *:68                                            *:*</span><br><span class="line">UNCONN     0      0                                :::35299                                        :::*</span><br></pre></td></tr></table></figure><h5 id="常见端口"><a href="#常见端口" class="headerlink" title="常见端口"></a>常见端口</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">http    80/tcp </span><br><span class="line">https   443/tcp </span><br><span class="line">ssh     22/tcp </span><br><span class="line">ftp     20,21/tcp</span><br><span class="line">mysql   3306/tcp</span><br><span class="line">rsync   873/rsync</span><br><span class="line">redis   6379/tcp</span><br></pre></td></tr></table></figure><h3 id="网络故障排查"><a href="#网络故障排查" class="headerlink" title="网络故障排查"></a>网络故障排查</h3><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1.如何查看系统中每个ip的连接数 </p><blockquote><p> netstat -ntu | awk ‘{print $5}’ | cut -d: -f1 | sort | uniq -c | sort -n</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># netstat -ntu | awk '&#123;print $5&#125;' | cut -d: -f1 | sort | uniq -c | sort -n</span></span><br><span class="line">      1 Address</span><br><span class="line">      1 servers)</span><br></pre></td></tr></table></figure><p>2.请列出下列服务使用的端口,http,ftp,ssh,telnet,mysql,dns </p><blockquote><p> http      80 </p><p> ftp        20,21 </p><p> ssh       22</p><p> telnet    23</p><p> mysql    3306 </p><p> dns       53</p></blockquote><p>3.如何在虚拟机上新增加一块网卡，并配置IP为172.16.0.10，指定网关为172.16.0.1 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># cd /etc/sysconfig/network-scripts/</span></span><br><span class="line">[root@zhoulijie network-scripts]<span class="comment"># cp ifcfg-eth0 ifcfg-eth1</span></span><br><span class="line">[root@zhoulijie network-scripts]<span class="comment"># vim ifcfg-eth1</span></span><br><span class="line">[root@zhoulijie network-scripts]<span class="comment"># cat ifcfg-eth1</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">NAME=eth1      //此处eth0改成eth1</span><br><span class="line">UUID=bb501ad9-f26f-4310-b857-14a1fc520546</span><br><span class="line">DEVICE=eth1    //此处eth0改成eth1</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=172.16.0.10  //此处更改IP</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=172.16.0.1  //此处更改网关</span><br><span class="line">DNS1=172.16.0.1     //此处更改DNS1</span><br><span class="line">[root@zhoulijie network-scripts]<span class="comment"># systemctl restart network</span></span><br></pre></td></tr></table></figure><p>4.详细描述dns解析过程，以访问<a href="http://www.baidu.com为例" target="_blank" rel="noopener">www.baidu.com为例</a> </p><blockquote><p>打开浏览器，输入一个域名:<a href="http://www.baidu.com，这时，你使用的电脑会发出一个DNS请求到本地DNS服务器。本地DNS服务器一般都是你的网络接入服务器商提供，比如中国电信，中国移动。" target="_blank" rel="noopener">www.baidu.com，这时，你使用的电脑会发出一个DNS请求到本地DNS服务器。本地DNS服务器一般都是你的网络接入服务器商提供，比如中国电信，中国移动。</a></p><p>查询<a href="http://www.baidu.com的DNS请求到达本地DNS服务器之后，本地DNS服务器会首先查询它的缓存记录，如果缓存中有此条记录，就可以直接返回结果。如果没有，本地DNS服务器还要向DNS根服务器进行查询。" target="_blank" rel="noopener">www.baidu.com的DNS请求到达本地DNS服务器之后，本地DNS服务器会首先查询它的缓存记录，如果缓存中有此条记录，就可以直接返回结果。如果没有，本地DNS服务器还要向DNS根服务器进行查询。</a></p><p>根DNS服务器没有记录具体的域名和IP地址的对应关系，而是告诉本地DNS服务器，你可以到域服务器上去继续查询，并给出域服务器的地址。</p><p>本地DNS服务器继续向域服务器发出请求，在这个例子中，请求的对象是.com域服务器。.com域服务器收到请求之后，也不会直接返回域名和IP地址的对应关系，而是告诉本地DNS服务器，你的域名的解析服务器的地址。</p><p>最后，本地DNS服务器向域名的解析服务器发出请求，这时就能收到一个域名和IP地址对应关系，本地DNS服务器不仅要把IP地址返回给用户电脑，还要把这个对应关系保存在缓存中，以备下次别的用户查询时，可以直接返回结果，加快网络访问。</p></blockquote><p>5.如何查看系统中运行了多少个进程 </p><blockquote><p> ps -aux | wc -l</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie network-scripts]<span class="comment"># ps -aux | wc -l</span></span><br><span class="line">243</span><br></pre></td></tr></table></figure><p>6.如何查看系统中启动了哪些端口</p><blockquote><p>ss -tan</p></blockquote> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment">#  ss -tan</span></span><br><span class="line">State      Recv-Q Send-Q                         Local Address:Port                                        Peer Address:Port              </span><br><span class="line">LISTEN     0      128                                        *:111                                                    *:*                  </span><br><span class="line">LISTEN     0      5                              192.168.122.1:53                                                     *:*                  </span><br><span class="line">LISTEN     0      128                                        *:22                                                     *:*                  </span><br><span class="line">LISTEN     0      128                                127.0.0.1:631                                                    *:*                  </span><br><span class="line">LISTEN     0      100                                127.0.0.1:25                                                     *:*                  </span><br><span class="line">LISTEN     0      128                                       :::111                                                   :::*                  </span><br><span class="line">LISTEN     0      128                                       :::22                                                    :::*                  </span><br><span class="line">LISTEN     0      128                                      ::1:631                                                   :::*                  </span><br><span class="line">LISTEN     0      100                                      ::1:25</span><br></pre></td></tr></table></figure><p>7.如何查看是否开启80端口，及查看sshd进程是否存在 </p><blockquote><p>netstat   -nultp | grep 80</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># netstat   -nultp | grep 80</span></span><br><span class="line"></span><br><span class="line">[root@zhoulijie ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><blockquote><p>ps -aux | grep sshd</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ps -aux | grep sshd</span></span><br><span class="line">root       1193  0.0  0.2 105996  4076 ?        Ss   18:48   0:00 /usr/sbin/sshd -D</span><br><span class="line">root       6448  0.0  0.0 112676   984 pts/0    R+   22:23   0:00 grep --color=auto sshd</span><br></pre></td></tr></table></figure><p>8.列出所有处于监听状态的tcp端口 </p><blockquote><p>netstat -l | grep tcp</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># netstat -l | grep tcp</span></span><br><span class="line">tcp        0      0 0.0.0.0:sunrpc          0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 zhoulijie:domain        0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 0.0.0.0:ssh             0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 localhost:ipp           0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 localhost:smtp          0.0.0.0:*               LISTEN     </span><br><span class="line">tcp6       0      0 [::]:sunrpc             [::]:*                  LISTEN     </span><br><span class="line">tcp6       0      0 [::]:ssh                [::]:*                  LISTEN     </span><br><span class="line">tcp6       0      0 localhost:ipp           [::]:*                  LISTEN     </span><br><span class="line">tcp6       0      0 localhost:smtp          [::]:*                  LISTEN</span><br></pre></td></tr></table></figure><p>9.查看所有的端口信息, 包括 PID 和进程名称 </p><blockquote><p>netstat -antlp</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># netstat -antlp</span></span><br><span class="line">Active Internet connections (servers and established)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      1/systemd           </span><br><span class="line">tcp        0      0 192.168.122.1:53        0.0.0.0:*               LISTEN      1391/dnsmasq        </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1193/sshd           </span><br><span class="line">tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      1197/cupsd          </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      1321/master         </span><br><span class="line">tcp6       0      0 :::111                  :::*                    LISTEN      1/systemd           </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      1193/sshd           </span><br><span class="line">tcp6       0      0 ::1:631                 :::*                    LISTEN      1197/cupsd          </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      1321/master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本笔记(脚本)</title>
    <link href="https://github.com/chineselijie/2019/08/29/10.linux--shell%E8%84%9A%E6%9C%AC%E7%AC%94%E8%AE%B0(%E8%84%9A%E6%9C%AC)/"/>
    <id>https://github.com/chineselijie/2019/08/29/10.linux--shell%E8%84%9A%E6%9C%AC%E7%AC%94%E8%AE%B0(%E8%84%9A%E6%9C%AC)/</id>
    <published>2019-08-29T15:44:18.578Z</published>
    <updated>2019-08-22T12:21:18.403Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ----------------猜数字-----------------</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">num=50</span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请输入你所猜到的数字："</span> user_num</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num</span> -eq <span class="variable">$user_num</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"哇瑟！好厉害！"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"你猜错了，哈哈哈"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------计算年龄-------------------</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">age=100</span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请输入您今年的年龄："</span> user_age</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$user_age</span> |egrep <span class="string">'^[0-9]+$'</span> &amp;&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"您输入的有误，请重新执行并且输入1-100之前任意数值！"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$user_age</span> -lt <span class="variable">$age</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您还可以活"</span> $[ <span class="variable">$age</span> - <span class="variable">$user_age</span> ] <span class="string">"岁。"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您输入的有误，请重新执行并且输入1-100之前任意数值！"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------输入三个数值，自动取出最大值与最小值----------</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 3);<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">read</span> -p <span class="string">"请输入一个数字："</span> num</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$num</span> |egrep <span class="string">'^[0-9]+$'</span> &amp;&gt;/dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"请输入一个整数"</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$i</span> -eq 1 ];<span class="keyword">then</span></span><br><span class="line">        max=<span class="variable">$num</span></span><br><span class="line">        min=<span class="variable">$num</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$num</span> -gt <span class="variable">$max</span> ];<span class="keyword">then</span></span><br><span class="line">        max=<span class="variable">$num</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$num</span> -lt <span class="variable">$min</span> ];<span class="keyword">then</span></span><br><span class="line">        min=<span class="variable">$num</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"最大的数字为: "</span><span class="variable">$max</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"最小的数字为: "</span><span class="variable">$min</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#------成绩：90上优秀、80上良好、70上中等、60上及格、60下差-----------</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请输入您的成绩："</span> user_chengji</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$user_chengji</span> |egrep <span class="string">'^[0-9]+$'</span> &amp;&gt;/dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"请输入一个整数"</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$user_chengji</span> -gt 100 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"请输入0-100以内的数值"</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$user_chengji</span> -ge 90 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您的成绩为优秀"</span></span><br><span class="line">    <span class="keyword">elif</span> [ <span class="variable">$user_chengji</span> -ge 80 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您的成绩为良好"</span></span><br><span class="line">    <span class="keyword">elif</span> [ <span class="variable">$user_chengji</span> -ge 70 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您的成绩为中等"</span></span><br><span class="line">    <span class="keyword">elif</span> [ <span class="variable">$user_chengji</span> -ge 60 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您的成绩为及格"</span></span><br><span class="line">    <span class="keyword">elif</span> [ <span class="variable">$user_chengji</span> -le 60 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您的成绩为差"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------case语法---------</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span> </span><br><span class="line">    <span class="string">"start"</span>|<span class="string">"Start"</span>|<span class="string">"START"</span>)</span><br><span class="line">        /usr/<span class="built_in">local</span>/httpd/apachectl start</span><br><span class="line">        ;;</span><br><span class="line">    <span class="string">"stop"</span>|<span class="string">"STOP"</span>)</span><br><span class="line">        /usr/<span class="built_in">local</span>/httpd/apachectl stop</span><br><span class="line">    ;;</span><br><span class="line">    <span class="string">"restart"</span>)</span><br><span class="line">        /usr/<span class="built_in">local</span>/httpd/apachectl stop</span><br><span class="line">        /usr/<span class="built_in">local</span>/httpd/apachectl start</span><br><span class="line">        ;;</span><br><span class="line">    <span class="string">"status"</span>)</span><br><span class="line">        count=$(ps -ef | egrep -v <span class="string">"grep | <span class="variable">$0</span>"</span> | grep -c httpd &amp;&gt; /dev/null)</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$count</span> -ne 0 ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"httpd is running."</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"httpd is stopped."</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage：service httpd</span></span><br><span class="line"><span class="string">        start|stop|restart|status"</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cp httpd /etc/init.d/</span><br><span class="line">chmod +x /etc/init.d/httpd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请输入你的分数："</span> user_num</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$user_num</span> | egrep <span class="string">'^[0-9]+$'</span> &amp;&gt;/dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"请正确地输入您的分数！"</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$user_num</span> <span class="keyword">in</span></span><br><span class="line">    -gt100)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"请正确输入您的分数！"</span></span><br><span class="line">    ；；</span><br><span class="line">    )</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您的成绩为优秀！"</span></span><br><span class="line">    ；；</span><br><span class="line">    *）</span><br><span class="line">    ；；</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#取出/etc/passwd的用户以及UID</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">Fa=/etc/passwd</span><br><span class="line"><span class="keyword">for</span> (( i=1;i&lt;=$(cat <span class="variable">$Fa</span> | wc -l);i++ ));<span class="keyword">do</span></span><br><span class="line">    user_name=$(awk -F <span class="string">':'</span> <span class="string">"NR==<span class="variable">$i</span> &#123;print $ 1&#125;"</span> <span class="variable">$Fa</span>)</span><br><span class="line">    user_UID=$(awk -F <span class="string">':'</span> <span class="string">"NR==<span class="variable">$i</span> &#123;print $ 3&#125;"</span> <span class="variable">$Fa</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"hello!<span class="variable">$user_name</span>,you UID is <span class="variable">$user_UID</span>."</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"一共有<span class="variable">$(cat $Fa | wc -l)</span>个用户."</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">man=<span class="variable">$1</span></span><br><span class="line">min=<span class="variable">$2</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -eq 2 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"请输入两个或以上数字。"</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $* ; <span class="keyword">do</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span> | egrep <span class="string">'^[0-9]+$'</span> &amp;&gt; /dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"无效，请输入数字，特殊字符以及字母等均无效"</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$man</span> -lt <span class="variable">$i</span> ];<span class="keyword">then</span></span><br><span class="line">        man=<span class="variable">$i</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$min</span> -gt <span class="variable">$i</span> ];<span class="keyword">then</span></span><br><span class="line">        min=<span class="variable">$i</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$man</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$min</span>"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;0..100&#125;;<span class="keyword">do</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">man=<span class="variable">$1</span></span><br><span class="line">min=<span class="variable">$2</span></span><br><span class="line">[ <span class="variable">$#</span> -eq 2 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"请输入两个或以上的数字！"</span> &amp;&amp; <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $*;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span> | egrep <span class="string">'^[0-9]+$'</span> &amp;&gt; /dev/null</span><br><span class="line">    [ $? -ne 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"请输入数字，字母、特殊字符等均无效！"</span> &amp;&amp; <span class="built_in">exit</span></span><br><span class="line">    [ <span class="variable">$man</span> -lt <span class="variable">$i</span> ] &amp;&amp; man=<span class="variable">$i</span></span><br><span class="line">    [ <span class="variable">$man</span> -gt <span class="variable">$i</span> ] &amp;&amp; min=<span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$man</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$min</span>"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 100);<span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ $[ <span class="variable">$i</span> % 2 ] -eq 1 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">        <span class="built_in">echo</span> ------</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 2 100);<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">    <span class="built_in">echo</span> -------</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 100);<span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ $[ <span class="variable">$i</span> % 2 ] -ne 2 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">    <span class="built_in">echo</span> ------</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 2 2 100);<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">    <span class="built_in">echo</span> ------</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 100);<span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$i</span> -lt 50 -o <span class="variable">$i</span> -gt 70 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">        <span class="built_in">echo</span> -----</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 10);<span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$i</span> -gt 5 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">        <span class="built_in">echo</span> ------</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">break</span> [num]</span><br><span class="line">中止循环</span><br><span class="line">    <span class="built_in">break</span>语句后面的内容不会被执行</span><br><span class="line"></span><br><span class="line"><span class="built_in">continue</span> [num]</span><br><span class="line">提前进入下一轮循环</span><br><span class="line">    <span class="built_in">continue</span>语句后面不会被执行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 100);<span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$i</span> -lt 50 -o <span class="variable">$i</span> -gt 70 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">        <span class="built_in">echo</span> ----</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#变量</span></span><br><span class="line">name=tom</span><br><span class="line">passwd=123321</span><br><span class="line"></span><br><span class="line"><span class="comment">#输入用户名以及密码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (( i=1;i&gt;=1;i++ ));<span class="keyword">do</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请输入用户名："</span> user_name</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请输入用户名："</span> user_passwd</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$i</span> -gt 3 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您已三次输入有误，系统默认锁定账户，寻找管理员解锁！”</span></span><br><span class="line"><span class="string">        exit</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">    if [ <span class="variable">$user_name</span> != <span class="variable">$name</span> ] &amp;&amp; [ <span class="variable">$passwd</span> != <span class="variable">$user_passwd</span> ];then</span></span><br><span class="line"><span class="string">        echo "</span>您的用户名或者密码有误，请重试！<span class="string">"</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">        echo "</span>hello <span class="variable">$user_name</span>.欢迎来到这里！<span class="string">"</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># while循环</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">i=1</span></span><br><span class="line"><span class="string">while [ <span class="variable">$i</span> -le 10 ];do</span></span><br><span class="line"><span class="string">    echo <span class="variable">$i</span></span></span><br><span class="line"><span class="string">    ehco -----</span></span><br><span class="line"><span class="string">    ((i++))</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">i=1</span></span><br><span class="line"><span class="string">while [ <span class="variable">$i</span> -le 10 ];do</span></span><br><span class="line"><span class="string">    echo <span class="variable">$i</span></span></span><br><span class="line"><span class="string">    echo ----</span></span><br><span class="line"><span class="string">    ((i+=2))</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">i=1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">while [ <span class="variable">$i</span> -lt 10 ];do</span></span><br><span class="line"><span class="string">    if [ $[ <span class="variable">$i</span> % 2 ] -eq 0 ];then</span></span><br><span class="line"><span class="string">        echo <span class="variable">$i</span></span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">    ((i++))</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">i=0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">while [ <span class="variable">$i</span> -lt 10 ];do</span></span><br><span class="line"><span class="string">    ((i++))</span></span><br><span class="line"><span class="string">    if [ <span class="variable">$i</span> -lt 5 -o <span class="variable">$i</span> -gt 7 ];then</span></span><br><span class="line"><span class="string">        echo <span class="variable">$i</span></span></span><br><span class="line"><span class="string">        echo ----</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">i=1</span></span><br><span class="line"><span class="string">while [ <span class="variable">$i</span> -lt 10 ];do</span></span><br><span class="line"><span class="string">    ((i++))</span></span><br><span class="line"><span class="string">    if [ <span class="variable">$i</span> -ge 5 ];then</span></span><br><span class="line"><span class="string">        echo <span class="variable">$i</span></span></span><br><span class="line"><span class="string">        echo ----</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">i=1</span></span><br><span class="line"><span class="string">while :;do</span></span><br><span class="line"><span class="string">    echo <span class="variable">$i</span></span></span><br><span class="line"><span class="string">    echo -----</span></span><br><span class="line"><span class="string">    ((i++))</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">while read line;do</span></span><br><span class="line"><span class="string">    echo <span class="variable">$line</span></span></span><br><span class="line"><span class="string">    echo -------------------------</span></span><br><span class="line"><span class="string">done &lt; /etc/passwd</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#! /bin/bash</span></span><br><span class="line"><span class="string">Fa=/etc/passwd</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">while read line;do</span></span><br><span class="line"><span class="string">    user_name=<span class="variable">$(echo $line | awk -F ':' 'NR==1 &#123; print $1 &#125;')</span></span></span><br><span class="line"><span class="string">    user_UID=<span class="variable">$(echo $line | awk -F ':' 'NR==1 &#123; print $3 &#125;')</span></span></span><br><span class="line"><span class="string">    echo “hello! <span class="variable">$user_name</span> 您的UID是 <span class="variable">$user_UID</span>”</span></span><br><span class="line"><span class="string">    echo -------------------------</span></span><br><span class="line"><span class="string">done &lt; <span class="variable">$Fa</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">i=0</span></span><br><span class="line"><span class="string">num=$[<span class="variable">$RANDOM</span> %100]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">while :;do</span></span><br><span class="line"><span class="string">    ((i++))</span></span><br><span class="line"><span class="string">    read -p "</span>请输入一个数字<span class="string">" user_num</span></span><br><span class="line"><span class="string">    echo <span class="variable">$user_num</span>　| egrep '^[0-9]+$' &amp;&gt; /dev/null</span></span><br><span class="line"><span class="string">    if [ $? -ne 0 ];then</span></span><br><span class="line"><span class="string">        echo "</span>您输入的不是数字！请重试！<span class="string">"</span></span><br><span class="line"><span class="string">        exit</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">    if [ <span class="variable">$user_num</span> -gt <span class="variable">$num</span> ];then</span></span><br><span class="line"><span class="string">        echo "</span>您输入的数字大了！<span class="string">"</span></span><br><span class="line"><span class="string">    elif [ <span class="variable">$user_num</span> -lt <span class="variable">$num</span> ];then</span></span><br><span class="line"><span class="string">        echo "</span>您输入的数字小了！<span class="string">"</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">        ehco "</span>您输入正确！<span class="string">"</span></span><br><span class="line"><span class="string">        echo "</span>您一共回答了<span class="variable">$i</span>次.<span class="string">"</span></span><br><span class="line"><span class="string">        exit</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">flag=ture</span></span><br><span class="line"><span class="string">i=3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">while <span class="variable">$flag</span>;do</span></span><br><span class="line"><span class="string">    if [ <span class="variable">$i</span> -le 50 ];then</span></span><br><span class="line"><span class="string">        echo <span class="variable">$i</span></span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">        flag=false</span></span><br><span class="line"><span class="string">    let i++</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#用for循环写个九九乘法表</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#！/bin/bash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">for i in <span class="variable">$(seq 9)</span>;do</span></span><br><span class="line"><span class="string">    for j in <span class="variable">$(seq $i)</span>;do</span></span><br><span class="line"><span class="string">        echo -en "</span><span class="variable">$&#123;j&#125;</span>x<span class="variable">$&#123;i&#125;</span>=$[<span class="variable">$i</span> * <span class="variable">$j</span>]\t<span class="string">"</span></span><br><span class="line"><span class="string">    done</span></span><br><span class="line"><span class="string">    echo </span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">until循环猜数字随机</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#!/bg=false</span></span><br><span class="line"><span class="string">i=0</span></span><br><span class="line"><span class="string">num=$[<span class="variable">$RANDOM</span> % 100]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">until <span class="variable">$flag</span>;do</span></span><br><span class="line"><span class="string">    read -p "</span>请输入所猜的数字：<span class="string">" user_num</span></span><br><span class="line"><span class="string">    ((i++))</span></span><br><span class="line"><span class="string">    echo <span class="variable">$user_num</span> | egrep '^[0-9]+$' &amp;&gt;/dev/null</span></span><br><span class="line"><span class="string">    if [ $? -ne 0 ];then</span></span><br><span class="line"><span class="string">        echo "</span>您输入的不是数字！<span class="string">"</span></span><br><span class="line"><span class="string">        break</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">    if [ <span class="variable">$user_num</span> -gt <span class="variable">$num</span> ];then</span></span><br><span class="line"><span class="string">        echo "</span>您输入的数字大了！<span class="string">"</span></span><br><span class="line"><span class="string">    elif [ <span class="variable">$user_num</span> -lt <span class="variable">$num</span> ];then</span></span><br><span class="line"><span class="string">        echo "</span>您输入的数字小了！<span class="string">"</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">        echo "</span>猜对了！<span class="string">"</span></span><br><span class="line"><span class="string">        echo "</span>您一共回答了<span class="variable">$&#123;i&#125;</span>次！<span class="string">"</span></span><br><span class="line"><span class="string">        flag=true</span></span><br><span class="line"><span class="string">        continue</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux进阶" scheme="https://github.com/chineselijie/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux进阶" scheme="https://github.com/chineselijie/tags/linux%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本进阶</title>
    <link href="https://github.com/chineselijie/2019/08/29/9.linux--shell%E8%84%9A%E6%9C%AC%E8%BF%9B%E9%98%B6/"/>
    <id>https://github.com/chineselijie/2019/08/29/9.linux--shell%E8%84%9A%E6%9C%AC%E8%BF%9B%E9%98%B6/</id>
    <published>2019-08-29T15:44:18.575Z</published>
    <updated>2019-08-22T12:22:35.430Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[TOC]</p><h2 id="bash条件判断"><a href="#bash条件判断" class="headerlink" title="bash条件判断"></a>bash条件判断</h2><h3 id="条件测试类型"><a href="#条件测试类型" class="headerlink" title="条件测试类型"></a>条件测试类型</h3><p>条件测试分为<strong>整数测试</strong>、<strong>字符测试</strong>、<strong>文件测试</strong></p><h3 id="条件测试的表达式"><a href="#条件测试的表达式" class="headerlink" title="条件测试的表达式"></a>条件测试的表达式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ echoes ]</span><br><span class="line">[[ echoes ]]</span><br><span class="line"><span class="built_in">test</span> echoes</span><br></pre></td></tr></table></figure><h3 id="整数测试（双目）"><a href="#整数测试（双目）" class="headerlink" title="整数测试（双目）"></a>整数测试（双目）</h3><blockquote><p> -eq    测试两个整数是否相等</p><p> -ne    测试两个整数是否不等</p><p>-gt    测试一个数是否大于另一个数</p><p> -lt    测试一个数是否小于另一个数</p><p>-ge    大于或小于</p><p> -le    小于或等于</p></blockquote><h3 id="字符测试"><a href="#字符测试" class="headerlink" title="字符测试"></a>字符测试</h3><blockquote><p> ==     等值比较，检查两边的内容是否一致，切记 == 两边要有空格</p><p>!=     检查两边内容是否不一致，不一致为真，一致为假</p><p>=~    左侧字符穿能否被右侧的所匹配到，此表达式应用于双中括号[[]]中</p><p>-z “string”    测试指定字符串是否为空，空则为真，不空则为假<br>-n “string”    测试指定字符串是否不空，不空则为真，空则为假</p></blockquote><h3 id="文件测试"><a href="#文件测试" class="headerlink" title="文件测试"></a>文件测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 存在性测试</span></span><br><span class="line">-e测试文件是否存在</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 存在性及类别测试</span></span><br><span class="line">-b测试文件是否为块设备文件</span><br><span class="line">-c测试文件是否为字符设备文件</span><br><span class="line">-f测试文件是否为普通文件</span><br><span class="line">-d测试指定路径是否为目录</span><br><span class="line">-h测试文件是否为目录</span><br><span class="line">-l测试文件是否为符号链接文件</span><br><span class="line">-p测试文件是否为命名管道文件</span><br><span class="line">-s测试文件是否为套接字文件</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件权限测试</span></span><br><span class="line">-r测试当前用户对指定文件是否有读权限</span><br><span class="line">-w测试当前用户对指定文件是否有写入权限</span><br><span class="line">-x测试当前用户对指定文件是否有执行权限</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件特殊权限测试</span></span><br><span class="line">-g测试文件是否有sgid权限</span><br><span class="line">-u测试文件是否有suid权限</span><br><span class="line">-k测试文件是否有sticky权限</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件大小测试</span></span><br><span class="line">-s测试文件是否非空</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件是否打开测试</span></span><br><span class="line">-t fdfd表示的文件描述是否已经打开并且与某终端相关</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 双目测试</span></span><br><span class="line">file1 -ef file2测试文件1与文件2是否为同一文件</span><br><span class="line">file1 -ef file2测试文件1是否比文件2新</span><br><span class="line">file1 -ef file2测试文件1是否比文件2旧</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 无分类</span></span><br><span class="line">-N测试文件自从上一次被录取之后是否被修改过</span><br><span class="line">-O测试文件是否存在并且被当前用户拥有</span><br><span class="line">-G测试文件是否存在并且默认组是否为当前用户组</span><br></pre></td></tr></table></figure><h3 id="组合测试条件"><a href="#组合测试条件" class="headerlink" title="组合测试条件"></a>组合测试条件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-a与关系</span><br><span class="line">-o或关系</span><br><span class="line">！非关系</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 总计个数 大于 1 与 总计个数 小于 3</span></span><br><span class="line">[ <span class="variable">$#</span> -gt 1 -a <span class="variable">$#</span> -le 3 ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 总计个数 大于 1 后再次统计 总计个数 小于 3</span></span><br><span class="line">[<span class="variable">$#</span> -gt 1 ] &amp;&amp; [<span class="variable">$#</span> -le 3]</span><br></pre></td></tr></table></figure><h3 id="条件判断，控制结构"><a href="#条件判断，控制结构" class="headerlink" title="条件判断，控制结构"></a>条件判断，控制结构</h3><h4 id="单分支if语句"><a href="#单分支if语句" class="headerlink" title="单分支if语句"></a>单分支if语句</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件；<span class="keyword">then</span></span><br><span class="line">陈述1</span><br><span class="line">陈述2</span><br><span class="line">........</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="双分支if语句"><a href="#双分支if语句" class="headerlink" title="双分支if语句"></a>双分支if语句</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件；<span class="keyword">then</span></span><br><span class="line">陈述1</span><br><span class="line">陈述2</span><br><span class="line">.........</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">陈述1</span><br><span class="line">陈述2</span><br><span class="line">.........</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h5 id="if语句小游戏"><a href="#if语句小游戏" class="headerlink" title="if语句小游戏"></a>if语句小游戏</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ----------------猜数字-----------------</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">num=50</span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请输入你所猜到的数字："</span> user_num</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num</span> -eq <span class="variable">$user_num</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"哇瑟！好厉害！"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"你猜错了，哈哈哈"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="多分支if语句"><a href="#多分支if语句" class="headerlink" title="多分支if语句"></a>多分支if语句</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件1；<span class="keyword">then</span></span><br><span class="line">陈述1</span><br><span class="line">陈述2</span><br><span class="line">.........</span><br><span class="line"><span class="keyword">elif</span> 判断条件2；<span class="keyword">then</span></span><br><span class="line">陈述3</span><br><span class="line">陈述4</span><br><span class="line">.........</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">陈述5</span><br><span class="line">陈述6</span><br><span class="line">.........</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="分支选择"><a href="#分支选择" class="headerlink" title="分支选择"></a>分支选择</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> $变量名 <span class="keyword">in</span>            </span><br><span class="line">value1)                </span><br><span class="line">    陈述               </span><br><span class="line">    ...                </span><br><span class="line">    ;;            </span><br><span class="line">value2)                </span><br><span class="line">    陈述                </span><br><span class="line">    ...                </span><br><span class="line">    ;;            </span><br><span class="line">*)                </span><br><span class="line">    陈述                </span><br><span class="line">    ...                </span><br><span class="line">    ;;        </span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">另：<span class="keyword">case</span>支持glob风格的通配符：</span><br><span class="line">    *       任意长度任意字符</span><br><span class="line">    ?       任意单个字符</span><br><span class="line">    []      指字范围内的任意单个字符</span><br><span class="line">    abc|bcd abc或bcd</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p>循环语句通常需要有一个进入条件和一个退出条件</p><ul><li>for循环</li><li>while循环</li><li>until循环</li></ul><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><p>for循环当列表不为空时进入循环，否则退出循环</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 变量 <span class="keyword">in</span> 列表; <span class="keyword">do</span></span><br><span class="line">    循环体</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((expr1;expr2;expr3))</span><br><span class="line">&#123;</span><br><span class="line">    循环体</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (( expr1 ; expr2 ; expr3 ));<span class="keyword">do</span></span><br><span class="line">    循环体</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">expr1   //用于指定初始条件，给控制变量一个初始值</span><br><span class="line">expr2   //判定什么时候退出循环</span><br><span class="line">expr3   //修正expr1指定的变量的值</span><br><span class="line"></span><br><span class="line">//如何生成列表：</span><br><span class="line">    &#123;1..100&#125;</span><br><span class="line">    seq [起始数] [步进长度] 结束数</span><br></pre></td></tr></table></figure><h4 id="for循环取出-etc-passwd用户"><a href="#for循环取出-etc-passwd用户" class="headerlink" title="for循环取出/etc/passwd用户"></a>for循环取出/etc/passwd用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#------取出/etc/passwd的用户以及UID---------</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">Fa=/etc/passwd</span><br><span class="line"><span class="keyword">for</span> (( i=1;i&lt;=$(cat <span class="variable">$Fa</span> | wc -l);i++ ));<span class="keyword">do</span></span><br><span class="line">    user_name=$(awk -F <span class="string">':'</span> <span class="string">"NR==<span class="variable">$i</span> &#123;print $ 1&#125;"</span> <span class="variable">$Fa</span>)</span><br><span class="line">    user_UID=$(awk -F <span class="string">':'</span> <span class="string">"NR==<span class="variable">$i</span> &#123;print $ 3&#125;"</span> <span class="variable">$Fa</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"hello!<span class="variable">$user_name</span>,you UID is <span class="variable">$user_UID</span>."</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"一共有<span class="variable">$(cat $Fa | wc -l)</span>个用户."</span></span><br></pre></td></tr></table></figure><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><p>while循环适用于循环次数未知的场景，注意要有退出条件。<br>条件满足时进入循环，条件不满足了退出循环。</p><h4 id="while循环正常用法"><a href="#while循环正常用法" class="headerlink" title="while循环正常用法"></a>while循环正常用法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 条件; <span class="keyword">do</span></span><br><span class="line">    陈述</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="while循环特殊用法"><a href="#while循环特殊用法" class="headerlink" title="while循环特殊用法"></a>while循环特殊用法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//while循环特殊用法一：死循环</span><br><span class="line">while :;do</span><br><span class="line">    陈述</span><br><span class="line">    ...</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">//这里的冒号可以改成任何非空值</span><br><span class="line"></span><br><span class="line">while循环特殊用法二：逐行读取某文件，将值存入line变量中</span><br><span class="line">while read line;do</span><br><span class="line">    陈述</span><br><span class="line">    ...</span><br><span class="line">done &lt; /etc/passwd</span><br></pre></td></tr></table></figure><p>#####while循环脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-----while特殊用法二取用户-------</span></span><br><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line">Fa=/etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line;<span class="keyword">do</span></span><br><span class="line">    user_name=$(<span class="built_in">echo</span> <span class="variable">$line</span> | awk -F <span class="string">':'</span> <span class="string">'NR==1 &#123; print $1 &#125;'</span>)</span><br><span class="line">    user_UID=$(<span class="built_in">echo</span> <span class="variable">$line</span> | awk -F <span class="string">':'</span> <span class="string">'NR==1 &#123; print $3 &#125;'</span>)</span><br><span class="line">    <span class="built_in">echo</span> “hello! <span class="variable">$user_name</span> 您的UID是 <span class="variable">$user_UID</span>”</span><br><span class="line">    <span class="built_in">echo</span> -------------------------</span><br><span class="line"><span class="keyword">done</span> &lt; <span class="variable">$Fa</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-------用while循环猜数字-------</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">i=0</span><br><span class="line">num=$[<span class="variable">$RANDOM</span> %100]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> :;<span class="keyword">do</span></span><br><span class="line">    ((i++))</span><br><span class="line">    <span class="built_in">read</span> -p <span class="string">"请输入一个数字"</span> user_num</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$user_num</span>　| egrep <span class="string">'^[0-9]+$'</span> &amp;&gt; /dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您输入的不是数字！请重试！"</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$user_num</span> -gt <span class="variable">$num</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您输入的数字大了！"</span></span><br><span class="line">    <span class="keyword">elif</span> [ <span class="variable">$user_num</span> -lt <span class="variable">$num</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您输入的数字小了！"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ehco <span class="string">"您输入正确！"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"您一共回答了<span class="variable">$i</span>次."</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="until循环"><a href="#until循环" class="headerlink" title="until循环"></a>until循环</h3><p>条件不满足时进入循环，条件满足了退出循环。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">until 条件; <span class="keyword">do</span></span><br><span class="line">    陈述</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="循环语句特殊情况"><a href="#循环语句特殊情况" class="headerlink" title="循环语句特殊情况"></a>循环语句特殊情况</h3><blockquote><p>break [num]：提前退出循环。当循环语句中出现break时，将提前退出循环，不再执行循环后面的语句</p><p>continue [num]：提前结束本轮循环而进入下一轮循环。当循环语句执行到continue时，continue后面的语句将不再执行，提前进入下一轮循环</p></blockquote><h2 id="定义脚本退出状态码"><a href="#定义脚本退出状态码" class="headerlink" title="定义脚本退出状态码"></a>定义脚本退出状态码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//<span class="built_in">exit</span>命令用于定义执行状态结果</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> <span class="comment">#      //此处的#号是一个数字，其范围可以是0-255</span></span><br><span class="line"></span><br><span class="line">如果脚本没有明确定义退出状态码，那么，最后执行的一条命令的退出码即为脚本的退出状态码</span><br><span class="line"></span><br><span class="line">注意：脚本中一旦遇到<span class="built_in">exit</span>命令，脚本会立即终止</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux进阶" scheme="https://github.com/chineselijie/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux进阶" scheme="https://github.com/chineselijie/tags/linux%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>linux进程管理</title>
    <link href="https://github.com/chineselijie/2019/08/29/9.linux--linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    <id>https://github.com/chineselijie/2019/08/29/9.linux--linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</id>
    <published>2019-08-29T15:44:18.571Z</published>
    <updated>2019-08-22T13:23:33.808Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[TOC]</p><h2 id="进程基本概述"><a href="#进程基本概述" class="headerlink" title="进程基本概述"></a>进程基本概述</h2><p>进程是已启动的可执行程序的运行中实例。</p><p>/proc目录下以数字为名的目录，每一个目录代表一个进程，保存着进程的属性信息。每一个进程的PID是唯一的，就算进程退出了，其它进程也不会占用其PID。</p><h4 id="进程的组成部分"><a href="#进程的组成部分" class="headerlink" title="进程的组成部分"></a>进程的组成部分</h4><ul><li>已分配内存的地址空间</li><li>安全属性，包括所有权凭据和特权</li><li>程序代码的一个或多个执行线程</li><li>进程状态</li></ul><h4 id="进程的环境"><a href="#进程的环境" class="headerlink" title="进程的环境"></a>进程的环境</h4><ul><li>本地和全局变量</li><li>当前调度上下文</li><li>分配的系统资源，如文件描述符和网络端口</li></ul><h4 id="进程的产生"><a href="#进程的产生" class="headerlink" title="进程的产生"></a>进程的产生</h4><p>现有的（父）进程复制自己的地址空间（fork）来创建一个新的（子）进程结构。 每个新进程分配有一个唯一的进程ID（PID），满足跟踪和安全性之需。PID与父进程ID（PPID）是新进程环境的元素。 任何进程可创建子进程。所有进程都是第一个系统进程的后代。RHEL7上，第一个系统进程是systemd。 </p><p><img src="https://s2.ax1x.com/2019/04/09/AoEPY9.png" alt></p><p>通过fork例程，子进程继承安全性身份、过去和当前的文件描述符、端口和资源特权、环境变量，以及程序代码。随后，子进程可能exec其自己的程序代码。通常，父进程在子进程运行期间处于睡眠状态，设置一个在子进程完成时发出信号的请求（wait）。在退出时，子进程可能已经关闭或丢弃了其资源和环境，剩余的部分被称作僵停。父进程在子进程退出时收到信号而被唤醒，清理剩余结构，然后继续执行其自己的程序代码。 </p><h4 id="进程的分类"><a href="#进程的分类" class="headerlink" title="进程的分类"></a>进程的分类</h4><ul><li>前台进程：与终端相关的进程，通过终端启动的进程 <ul><li>注意：也可把在前台启动的进程送往后台，以守护模式运行</li></ul></li></ul><ul><li>守护进程：daemon，与终端无关的进程（如内核），在系统引导过程中启动的进程</li></ul><h2 id="进程状态"><a href="#进程状态" class="headerlink" title="进程状态"></a>进程状态</h2><p><img src="https://s2.ax1x.com/2019/04/09/AoE86P.png" alt></p><blockquote><p>Excuting                          //运行态<br>Ready                              //就绪态，也可以称作睡眠态<br>Uninterruptible sleep   //不可中断的睡眠。不可随时唤醒，只有当IO资源加载成功后才能唤醒<br>Interruptible sleep      //可中断的睡眠。可随时唤醒<br>Zombie                        //僵尸进程。正常运行结束了，但是不释放占据的内存<br>Stopped                       //停止态，暂停于内存中，但不会被调度，除非手动启动之</p></blockquote><blockquote><p>进程睡眠的原因： 当一个执行中的进程，需要加载额外的IO资源的时候，由于IO设备的速度太慢，所以会转入睡眠状态等待，交出CPU给其他进程，以免浪费剩余执行时间 </p></blockquote><p>在多任务处理操作系统中，每个CPU（或CPU核心）在一个时间点上处理一个进程。在进程运行时，它对CPU时间和资源分配的直接要求会有变化。进程分配有一个状态，它随着环境要求而改变。 </p><h6 id="Linux进程状态"><a href="#Linux进程状态" class="headerlink" title="Linux进程状态"></a>Linux进程状态</h6><table><thead><tr><th>标志</th><th>内核定义的状态名称和描述</th></tr></thead><tbody><tr><td>R</td><td>TASK_RUNNING：进程正在CPU上执行，或者正在等待运行。处于运行中（或可运行）状态时，进程可能正在执行用户例程或内核例程（系统调用），或者已排队并就绪</td></tr><tr><td>S</td><td>TASK_INTERRUPTIBLE：进程处于睡眠状态且正在等待某一条件：硬件请求、系统资源访问或信号。当事件或信号满足该条件时，该进程将返回到运行中</td></tr><tr><td>D</td><td>TASK_UNINTERRUPTIBLE：此进程也在睡眠，但与S状态不同，不会响应传递的信号。仅在特定的条件下使用，其中进程中断可能会导致意外的设备状态</td></tr><tr><td>K</td><td>TASK_KILLABLE：进程处于睡眠状态，与不可中断的D状态相同，但有所修改，允许等待中的任务通过响应信号而被中断（彻底退出）。实用程序通常将可中断的进程显示为D状态</td></tr><tr><td>T</td><td>TASK_STOPPED：进程已被停止（暂停），通常是通过用户或其他进程发出的信号。进程可以通过另一信号返回到运行中状态，继续执行（恢复）</td></tr><tr><td>T</td><td>TASK_TRACED：正在被调试的进程也会临时停止，并且共享同一个T状态标志</td></tr><tr><td>Z</td><td>EXIT_ZOMBIE：子进程在退出时向父进程发出信号。除进程身份（PID）之外的所有资源都已释放</td></tr><tr><td>X</td><td>EXIT_DEAD：当父进程清理（获取）剩余的子进程结构时，进程现在已彻底释放。此状态从不会在进程列出实用程序中看到</td></tr><tr><td>&lt;</td><td>高优先级进程</td></tr><tr><td>N</td><td>低优先级进程</td></tr><tr><td>+</td><td>前台进程组中的进程</td></tr><tr><td>|</td><td>多线程进程</td></tr><tr><td>s</td><td>会话进程首进程</td></tr></tbody></table><h2 id="进程优先级"><a href="#进程优先级" class="headerlink" title="进程优先级"></a>进程优先级</h2><h4 id="linux进程调度与多任务"><a href="#linux进程调度与多任务" class="headerlink" title="linux进程调度与多任务"></a>linux进程调度与多任务</h4><p>现代计算机系统中既包含每次只能执行一个指令的低端处理器，也包含高性能超级计算机，这些超级计算机每台配备数百个CPU，每个CPU上具有多个核心，它们可以并行执行数以百计的指令。但是所有这些系统往往具有一个共同点：它们需要运行的进程数量总是超出实际具有的核心数。</p><p>通过时间分片技术，Linux（和其他操作系统）实际能够运行的进程数（和线程数）可以超出可用的实际处理单元数。操作系统进程调度程序将在单个核心上的进程之间进行快速切换，从而给用户一种有多个进程在同时运行的印象。</p><p>执行此切换的Linux内核部分称为进程调度程序。</p><h4 id="进程优先级-1"><a href="#进程优先级-1" class="headerlink" title="进程优先级"></a>进程优先级</h4><ul><li>进程优先级范围：0-139，数字越小，优先级越高 <ul><li>0-99：实时优先级，内核调整</li><li>100-139：静态优先级，用户可控制</li></ul></li><li>进程优先级高的特点： <ul><li>获得更多的CPU运行时间</li><li>更优先获得CPU运行的机会</li></ul></li></ul><p>要修改进程的优先级可以通过调整进程的nice值来实现，nice值越小，优先级越高： nice值的范围是（-20，19），-20对应100，19对应139 </p><h4 id="相对优先级"><a href="#相对优先级" class="headerlink" title="相对优先级"></a>相对优先级</h4><p>由于不是每种进程都与其他进程同样重要，可告知调度程序为不同的进程使用不同的调度策略。常规系统上运行的大多数进程所使用的调度策略称为<code>SCHED_OTHER</code>(也称为<code>SCHED_NORMAL</code>)，但还有一些其他策略可用于不同的目的。</p><p>由于并非所有进程都以同样的方式创建，可为采用<code>SCHED_NORMAL</code>策略运行的进程指定相对优先级。此优先级称为进程的<code>nice</code>值。一个进程可以有40种不同级别的<code>nice</code>值。</p><p>这些<code>nice</code>级别的范围是从-20到19。默认情况下，进程将继承其父进程的<code>nice</code>级别，通常为0</p><blockquote><p><code>nice</code>级别越高，表示优先级越低（该进程容易将其CPU使用量让给其他进程）<br><code>nice</code>级别越低，表示优先级越高（该进程更加不倾向于让出CPU）<br>如果不存在资源争用（例如当活动进程数少于可用CPU核心数时），即使<code>nice</code>级别高的进程也将仍使用它们可使用的所有可用CPU资源。但当请求CPU时间的进程数超过可用核心数时，<code>nice</code>级别较高的进程将比<code>nice</code>级别较低的进程收到更少的CPU时间</p></blockquote><h4 id="nice级别与权限"><a href="#nice级别与权限" class="headerlink" title="nice级别与权限"></a>nice级别与权限</h4><p>为很占CPU资源的进程设置较低的<code>nice</code>级别可能会对同一系统上运行的其他进程的性能造成负面影响，所以仅允许root用户设置负<code>nice</code>级别以及降低现有进程的<code>nice</code>级别。</p><p>普通非特权用户仅允许设置正的<code>nice</code>级别。只能对现有进程提升<code>nice</code>级别，而不能降低<code>nice</code>级别。</p><h4 id="进程优先级调整"><a href="#进程优先级调整" class="headerlink" title="进程优先级调整"></a>进程优先级调整</h4><p>进程优先级调整：调整nice值</p><blockquote><p>//调整已经启动的进程的nice值：<br>    renice NI PID（例：renice 3 3704）<br>//在启动时指定nice值：（-20，19）<br>    nice -n NI COMMAND</p></blockquote><h2 id="进程管理命令"><a href="#进程管理命令" class="headerlink" title="进程管理命令"></a>进程管理命令</h2><p>Linux系统各进程的相关信息均保存在/proc/PID目录下的各文件中 </p><h4 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h4><p>ps命令用于查看系统中的进程状态</p><blockquote><p>-a  显示所有进程（包括其他用户的进程） </p><p>-u  用户以及其他详细信息 </p><p>-x  显示没有控制终端的进程 </p></blockquote><p>Linux系统中时刻运行着许多进程，如果能够合理地管理它们，则可以优化系统的性能。在Linux系统中，有5种常见的进程状态，分别为运行、中断、不可中断、僵死与停止，其各自含义如下所示。 </p><blockquote><p><strong>R（运行）：</strong>进程正在运行或在运行队列中等待。</p><p><strong>S（中断）：</strong>进程处于休眠中，当某个条件形成后或者接收到信号时，则脱离该   状态。</p><p><strong>D（不可中断）：</strong>进程不响应系统异步信号，即便用kill命令也不能将其中断。</p><p><strong>Z（僵死）：</strong>进程已经终止，但进程描述符依然存在, 直到父进程调用wait4()系统函数后将进程释放。</p><p><strong>T（停止）：</strong>进程收到停止信号后停止运行。</p></blockquote><p>当执行ps aux命令后通常会看到如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># ps aux</span></span><br><span class="line">USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root          1  0.0  0.3  50776  7212 ?        Ss   4月08   0:01 /usr/lib/syst</span><br><span class="line">root          2  0.0  0.0      0     0 ?        S    4月08   0:00 [kthreadd]</span><br><span class="line">root          3  0.0  0.0      0     0 ?        S    4月08   0:00 [ksoftirqd/0]</span><br><span class="line">root          5  0.0  0.0      0     0 ?        S&lt;   4月08   0:00 [kworker/0:0H</span><br><span class="line">root          7  0.0  0.0      0     0 ?        S    4月08   0:00 [migration/0]</span><br><span class="line">root          8  0.0  0.0      0     0 ?        S    4月08   0:00 [rcu_bh]</span><br><span class="line">...............................以下省略...............................</span><br></pre></td></tr></table></figure><h4 id="pstree"><a href="#pstree" class="headerlink" title="pstree"></a>pstree</h4><p>pstree用于显示当前系统上的进程树 </p><blockquote><p> 如果没有 使用yum安装</p><p>yum install -y psmisc</p></blockquote><h4 id="pgrep"><a href="#pgrep" class="headerlink" title="pgrep"></a>pgrep</h4><p>以grep风格指定只显示哪些进程，在当前系统中找符合某些特性的进程。只显示进程号 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># pgrep vim</span></span><br><span class="line">3469</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># ps aux | grep vim</span></span><br><span class="line">root       3469  0.0  0.2 151920  5036 pts/0    S+   01:24   0:00 vim 1</span><br><span class="line">root       3502  0.0  0.0 112656   988 pts/2    R+   01:32   0:00 grep --color=auto vim</span><br></pre></td></tr></table></figure><h4 id="pidof"><a href="#pidof" class="headerlink" title="pidof"></a>pidof</h4><p>pidof命令用于查询某个指定服务进程的PID值</p><p>每个进程的进程号码值（PID）是唯一的，因此可以通过PID来区分不同的进程。例如，可以使用如下命令来查询本机上正在运行的vim的PID：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开两个终端</span></span><br><span class="line"><span class="comment"># 在第一个终端上输入：</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># vim a</span></span><br><span class="line"><span class="comment"># 在第二个终端上输入：</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># pidof vim</span></span><br><span class="line">3358</span><br></pre></td></tr></table></figure><h4 id="vmstat"><a href="#vmstat" class="headerlink" title="vmstat"></a>vmstat</h4><p>虚拟内存状态查看命令 </p><blockquote><p>vmstat 2        //表示每2秒刷新一次<br>vmstat 2   5      //表示每2秒刷新一次，刷新5次后退出</p><p> -s          //显示内存的统计数据  </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># vmstat</span></span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy id wa st</span><br><span class="line"> 2  0      0 1489572   1524 152768    0    0     8     2   12   21  0  0 100  0  0</span><br></pre></td></tr></table></figure><blockquote><p>procs：<br>    r（running）  //表示等待运行的队列长度，也即等待运行的进程的个数<br>    b（block）    //表示阻塞队列长度，也即处于不可中断睡眠态的进程个数<br>memory：<br>    swpd        //交换内存的使用总量<br>    free        //空闲物理内存总量<br>    buffer      //用于buffer的内存总量<br>    cache       //用于cache的内存总量<br>swap：<br>    si（swap in）     //表示从物理内存有多少页面换进swap，也即数据进入swap的数据速率（kb/s）<br>    so（swap out）    //表示从swap有多少页面换进物理内存，也即数据离开swap的数据速率（kb/s）<br>io：<br>    bi（block in）    //表示磁盘块有多少个被调入内存中，也即从块设备读入数据到系统的速率（kb/s）<br>    bo（block out）   //表示有多少个磁盘块从内存中被同步到硬盘上去了，也即保存数据至块设备的速率（kb/s）<br>system：<br>    in（ interrupts）     //表示中断的个数，也即中断速率（kb/s）<br>    cs（context switch）  //表示上下文切换的次数，也即进程切换速率（kb/s）<br>CPU：<br>    us      //表示用户空间<br>    sy      //表示内核空间<br>    id      //表示空闲百分比<br>    wa      //表示等待IO完成所占据的时间百分比<br>    st      //表示steal，被虚拟化技术偷走的时间（比如运行虚拟机）</p></blockquote><h2 id="控制作业"><a href="#控制作业" class="headerlink" title="控制作业"></a>控制作业</h2><h4 id="作业与会话"><a href="#作业与会话" class="headerlink" title="作业与会话"></a>作业与会话</h4><p>作业控制是<code>shell</code>的一种功能，它允许单个shell实例运行和管理多个命令。</p><p>作业与在<code>shell</code>提示符中输入的每个管道相关联。该管道中的所有进程均是作业的一部分，并且是同一个进程组的成员。（如果在<code>shell</code>提示符中仅输入了一条命令，则这条命令可视为命令的最小管道。该命令将是该作业的唯一成员）</p><p>一次只能有一个作业从特定终端窗口读取输入和键盘生成的信号。属于该作业的进程是该控制终端的前台进程。</p><p>该控制终端的后台进程是与该终端相关联的任何其他作业的成员。终端的后台进程无法从终端读取输入或接收键盘生成的中断，但可以写入终端。后台中的作业可能已停止（暂停），也可能正在运行。如果某个正在运行的后台作业尝试从终端读取内容，则该作业将自动暂停。</p><p>每个终端是其自身的会话，并且可以具有一个前台进程和多个独立的后台进程。一个作业只能属于一个会话，也就是属于其控制终端的会话。</p><h4 id="作业分类"><a href="#作业分类" class="headerlink" title="作业分类"></a>作业分类</h4><p>Linux作业分为前台作业与后台作业两种。其各自的特点如下：</p><ul><li>前台作业：通过终端启动，且启动后一直占据了命令提示符</li><li>后台作业：可以通过终端启动，但启动之后，释放命令提示符，后续的操作在后台完成<ul><li>此类作业虽然被送往后台运行，但其依然与终端相关。如果希望送往后台后，剥离与终端的关系需要执行（nohup COMMAND &amp;）</li></ul></li></ul><h4 id="在后台运行作业"><a href="#在后台运行作业" class="headerlink" title="在后台运行作业"></a>在后台运行作业</h4><p>在命令后跟上&amp;符号可以生成一个后台作业</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># sleep 1000 &amp;</span></span><br><span class="line">[1] 3538</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># sleep 1000 &amp;</span></span><br><span class="line">[2] 3540</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># ps</span></span><br><span class="line">   PID TTY          TIME CMD</span><br><span class="line">  3475 pts/2    00:00:00 bash</span><br><span class="line">  3538 pts/2    00:00:00 sleep</span><br><span class="line">  3540 pts/2    00:00:00 sleep</span><br><span class="line">  3541 pts/2    00:00:00 ps</span><br></pre></td></tr></table></figure><p>jobs命令用于显示当前所有的后台作业</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># jobs</span></span><br><span class="line">[1]-  运行中               sleep 1000 &amp;</span><br><span class="line">[2]+  运行中               sleep 1000 &amp;</span><br></pre></td></tr></table></figure><p>fg命令用于将后台作业调至前台运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># fg</span></span><br><span class="line">sleep 1000</span><br></pre></td></tr></table></figure><blockquote><p> 当只有一个后台作业时，直接使用fg命令，不跟任何参数即可将后台作业调至前台运行，但是当有多个作业时则必须跟上%+作业号，也就是上面命令执行结果中以[]括起来的数字。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># jobs</span></span><br><span class="line">[1]-  运行中               sleep 1000 &amp;</span><br><span class="line">[2]+  运行中               sleep 1000 &amp;</span><br></pre></td></tr></table></figure><blockquote><p> 使用ctrl+z可将前台进程发送到后台，此时作业将处于停止状态</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># fg %1</span></span><br><span class="line">sleep 1000</span><br><span class="line">^Z</span><br><span class="line">[1]+  已停止               sleep 1000</span><br></pre></td></tr></table></figure><blockquote><p>使用bg命令+作业号可使后台已停止的作业重新运行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># bg %1</span></span><br><span class="line">[1]+ sleep 1000 &amp;</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># jobs</span></span><br><span class="line">[1]-  运行中               sleep 1000 &amp;</span><br><span class="line">[2]+  运行中               sleep 1000 &amp;</span><br></pre></td></tr></table></figure><blockquote><p>kill加上作业号可以手动杀死指定作业</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># jobs</span></span><br><span class="line">[1]-  运行中               sleep 1000 &amp;</span><br><span class="line">[2]+  运行中               sleep 1000 &amp;</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># kill %1</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># jobs</span></span><br><span class="line">[1]-  已终止               sleep 1000</span><br><span class="line">[2]+  运行中               sleep 1000 &amp;</span><br></pre></td></tr></table></figure><blockquote><p> jobs命令的结果中</p><ul><li>//命令将默认操作的作业<ul><li>//命令将第二个默认操作的作业</li></ul></li></ul></blockquote><h2 id="进程间通信"><a href="#进程间通信" class="headerlink" title="进程间通信"></a>进程间通信</h2><p>进程间通信（IPC：Inter Process Communication）</p><p>进程间通信方式：</p><ul><li><p>同一主机</p><ul><li>共享内存</li><li>信号：Signal</li></ul></li><li><p>不同主机</p><ul><li><p>rpc：remote procecure call</p><ul><li><p>基于socket实现进程间通信</p><blockquote><p>socket 套接字  ip加接口   ss -natl</p></blockquote></li></ul></li></ul></li></ul><h2 id="使用信号控制进程"><a href="#使用信号控制进程" class="headerlink" title="使用信号控制进程"></a>使用信号控制进程</h2><p>信号是传递至进程的软件中断。信号向执行中的程序报告事件。生成信号的事件可以是错误或外部事件（如I/O请求或计时器过期），或者来自于明确请求（如使用信号发送命令）</p><p>下表列出了系统管理员用于日常进程管理的基本信号。请通过短名称（HUP）或正确名称（SIGHUP）指代信号。</p><ul><li>指定一个信号的方法： <ul><li>信号号码（数字标识）：<code>kill -1</code></li><li>信号完整名称：<code>kill -SIGKILL</code></li><li>信号简写名称：<code>kill -TERM或kill -KILL或kill -INT或kill -HUP</code></li></ul></li></ul><p>基本进程管理信号 </p><table><thead><tr><th>信号编号 ID</th><th>短名称</th><th>定义</th><th>用途</th></tr></thead><tbody><tr><td>1</td><td>HUP</td><td>挂起</td><td>让一个进程不用重启就可以重读配置文件，并让新的配置信息生效</td></tr><tr><td>2</td><td>INT</td><td>键盘中断</td><td>中断一个前台进程。ctrl+c就是用的SIGINT信号</td></tr><tr><td>9</td><td>KILL</td><td>中断，无法拦截</td><td>导致立即终止程序。无法被拦截、忽略或处理</td></tr><tr><td>15 默认值</td><td>TERM</td><td>终止</td><td>导致程序终止。和SIGKILL不同，可以被拦截、忽略或处理。要求程序终止的友好方式，允许自我清理</td></tr></tbody></table><p>用户可以中断自己的进程，但只有root才能终止由其他人拥有的进程。</p><h4 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h4><p>kill命令根据ID向进程发送信号。虽其名称为kill，但该命令可用于发送任何信号，而不仅仅是终止程序的信号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># kill -l</span></span><br><span class="line"> 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL       5) SIGTRAP</span><br><span class="line"> 6) SIGABRT      7) SIGBUS       8) SIGFPE       9) SIGKILL     10) SIGUSR1</span><br><span class="line">11) SIGSEGV     12) SIGUSR2     13) SIGPIPE     14) SIGALRM     15) SIGTERM</span><br><span class="line">16) SIGSTKFLT   17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP</span><br><span class="line">21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU     25) SIGXFSZ</span><br><span class="line">26) SIGVTALRM   27) SIGPROF     28) SIGWINCH    29) SIGIO       30) SIGPWR</span><br><span class="line">31) SIGSYS      34) SIGRTMIN    35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3</span><br><span class="line">38) SIGRTMIN+4  39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13</span><br><span class="line">48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12</span><br><span class="line">53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7</span><br><span class="line">58) SIGRTMAX-6  59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-1  64) SIGRTMAX</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># kill 3571</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment"># ps</span></span><br><span class="line">   PID TTY          TIME CMD</span><br><span class="line">  3475 pts/2    00:00:00 bash</span><br><span class="line">  3610 pts/2    00:00:00 ps</span><br><span class="line">[2]+  已终止               sleep 1000</span><br></pre></td></tr></table></figure><h2 id="监控进程活动"><a href="#监控进程活动" class="headerlink" title="监控进程活动"></a>监控进程活动</h2><h4 id="IO负载"><a href="#IO负载" class="headerlink" title="IO负载"></a>IO负载</h4><p>负载平均值代表一段时间内感知的系统负载。Linux通过预期服务等待时间的表示来实施平均负载计算。</p><p>Linux不仅计算进程数，也作为独立的任务计算线程数。运行中线程和等待I/O资源的线程的CPU请求队列对应于R和D进程状态。等待I/O包括处于睡眠而等待预期磁盘和网络响应的任务。</p><p>负载数属于全局计数器计算，是所有CPU的总和数。由于从睡眠返回的任务可能会重新调度到不同的CPU，难以精确的每CPU计数，但累计数的准确度可以保障。显示的平均负载代表所有的CPU。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># grep 'model name' /proc/cpuinfo</span></span><br><span class="line">model name      : Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz</span><br></pre></td></tr></table></figure><p>一些UNIX系统仅考虑CPU使用率或运行队列长度来指示系统负载。由于具有空闲CPU的系统可能会因为磁盘或网络资源忙而遇到很长时间的等待，因此Linux负载平均值中包含了对I/O的考量。遇到负载平均值很高但CPU活动很低时，请检查磁盘和网络活动。</p><p>Linux中可以使用<code>top</code>、<code>uptime</code>显示负载平均值的情况。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># uptime</span></span><br><span class="line"> 02:11:29 up  5:54,  3 users,  load average: 0.00, 0.01, 0.05</span><br></pre></td></tr></table></figure><p>将显示的负载平均值除以系统中的逻辑CPU数。当值低于1表示资源利用率较好，等待时间很短。当值高于1表示资源饱和，而且有一定的服务等待时间。</p><p>空闲CPU队列的负载数为0。每个就绪和等待的线程使计数增加1。总队列数为1时，资源（CPU、磁盘或网络）正在使用中，但没有请求把时间花在等待上。增加的请求数会累积该计数，但由于许多请求可以在时限内处理，资源使用率会很高，而等待时间则不会。</p><p>因为磁盘或网络资源忙碌等待I/O而处于睡眠的进程包含在该计数内，而且使负载平均值增大。虽然不能表示CPU使用率，队列数依然表明用户和程序正在等待资源服务。</p><p>在资源饱和前，平均负载将保持在1以下，因为几乎不会在队列中发现等待的任务。只有资源饱和导致请求留在排队状态并且被负载计算例程计数时，负载平均才会增大。当资源使用率接近100%时，每个增加的请求将开始遭遇服务等待时间。</p><h4 id="实时进程监控"><a href="#实时进程监控" class="headerlink" title="实时进程监控"></a>实时进程监控</h4><h4 id="top"><a href="#top" class="headerlink" title="top"></a>top</h4><p>top命令用于动态地监视进程活动与系统负载等信息 </p><blockquote><p>top命令相当强大，能够动态地查看系统运维状态，完全将它看作Linux中的“强化版的Windows任务管理器” .</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">top - 01:07:42 up  4:50,  4 users,  load average: 0.00, 0.01, 0.05</span><br><span class="line">Tasks: 412 total,   2 running, 410 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem:   1870760 total,   323388 used,  1547372 free,      780 buffers</span><br><span class="line">KiB Swap:  2097148 total,        0 used,  2097148 free.   101676 cached Mem</span><br><span class="line"></span><br><span class="line">   PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND</span><br><span class="line">     1 root      20   0   50776   7212   2480 S  0.0  0.4   0:01.26 systemd</span><br><span class="line">     2 root      20   0       0      0      0 S  0.0  0.0   0:00.00 kthreadd</span><br><span class="line">     3 root      20   0       0      0      0 S  0.0  0.0   0:00.04 ksoftirqd/0</span><br><span class="line">     5 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 kworker/0:+</span><br><span class="line">     7 root      rt   0       0      0      0 S  0.0  0.0   0:00.00 migration/0</span><br><span class="line">     8 root      20   0       0      0      0 S  0.0  0.0   0:00.00 rcu_bh</span><br><span class="line">     9 root      20   0       0      0      0 S  0.0  0.0   0:00.00 rcuob/0</span><br><span class="line">...............................以下省略..................................</span><br></pre></td></tr></table></figure><blockquote><p>第1行：系统时间、运行时间、登录终端数、系统负载（三个数值分别为1分钟、5分钟、15分钟内的平均值，数值越小意味着负载越低）。</p><p>第2行：进程总数、运行中的进程数、睡眠中的进程数、停止的进程数、僵死的进程数。</p><p>第3行：用户占用资源百分比、系统内核占用资源百分比、改变过优先级的进程资源百分比、空闲的资源百分比等。其中数据均为CPU数据并以百分比格式显示，例如“97.1 id”意味着有97.1%的CPU处理器资源处于空闲。</p><p>第4行：物理内存总量、内存使用量、内存空闲量、作为内核缓存的内存量。</p><p>第5行：虚拟内存总量、虚拟内存使用量、虚拟内存空闲量、已被提前加载的内存量。</p></blockquote><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p><strong>写出以下描述对应的进程状态标志：</strong></p><table><thead><tr><th>描述</th><th align="center">状态标志</th></tr></thead><tbody><tr><td>进程已被停止(暂停)</td><td align="center">T</td></tr><tr><td>进程已释放了其所有资源(pid除外)</td><td align="center">Z</td></tr><tr><td>进程正在CPU上运行或者正在等待于CPU上运行</td><td align="center">R</td></tr><tr><td>进程正处于睡眠状态，直至满足某些条件后才会启动</td><td align="center">S</td></tr><tr><td>进程正在等待I/O或某些条件得到满足，并且绝对不会影响信号</td><td align="center">D</td></tr></tbody></table><p><strong>按以下顺序练习后台与前台进程操作：</strong></p><p>并排打开两个终端窗口，分别称为左窗口和右窗口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># 1</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># 2</span></span><br></pre></td></tr></table></figure><p>在左窗口中，启动一个进程，该进程以一秒为间隔持续向~/outfile文件附加单词”rock”和一个空格。整个命令集必须包含在括号内，以便作业控制可以将该集合解译为一个作业</p><blockquote><p>[root@localhost ~]# (while true;do echo -n ‘rock ‘ &gt;&gt; ~/outfile;sleep 1;done)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># (while true;do echo -n 'rock ' &gt;&gt; ~/outfile;sleep 1;done)</span></span><br></pre></td></tr></table></figure><p>在右窗口中，使用<code>tail</code>确认新进程正在写入该文件</p><blockquote><p> [root@localhost ~]# tail -f ~/outfile</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie yum.repos.d]<span class="comment"># tail -f ~/outfile</span></span><br><span class="line">rock rock rock rock rock rock rock rock rock rock rock rock rock rock rock rock rock rock rock rock rock rock rock rock rock rock</span><br></pre></td></tr></table></figure><p>在左窗口中，使用<code>ctrl+z</code>快捷键暂停正在运行的进程。<code>shell</code>将返回作业ID并用方括号括起。在右窗口中确认进程输出已经停止</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment">#  (while true;do echo -n 'rock ' &gt;&gt; ~/outfile;sleep 1;done)</span></span><br><span class="line">^Z</span><br><span class="line">[1]+  已停止               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'rock '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> )</span><br></pre></td></tr></table></figure><p>在左窗口中，查看jobs列表。+表示当前的作业。使用<code>bg</code>命令在后台重新启动该作业，并再次查看jobs列表，在右窗口中，确认进程输出再次处于活动状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># jobs</span></span><br><span class="line">[1]+  已停止               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'rock '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> )</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># bg</span></span><br><span class="line">[1]+ ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'rock '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> ) &amp;</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># jobs</span></span><br><span class="line">[1]+  运行中               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'rock '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> ) &amp;</span><br></pre></td></tr></table></figure><p>在左窗口中，再启动两个进程，以便向同一输出文件附加内容。将”rock”替换为”paper”，再替换为”scissors”。要将进程正确置于后台，整个命令集必须包含在括号内，并且以&amp;符号结尾</p><blockquote><p>[root@localhost ~]# (while true;do echo -n ‘paper ‘ &gt;&gt; ~/outfile;sleep 1;done) &amp;</p></blockquote><blockquote><p>[root@localhost ~]# (while true;do echo -n ‘scissors ‘ &gt;&gt; ~/outfile;sleep 1;done) &amp;</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment">#  (while true;do echo -n 'paper ' &gt;&gt; ~/outfile;sleep 1;done) &amp;</span></span><br><span class="line">[3] 3858</span><br><span class="line">[root@zhoulijie ~]<span class="comment">#  (while true;do echo -n 'scissors ' &gt;&gt; ~/outfile;sleep 1;done) &amp;</span></span><br><span class="line">[4] 3887</span><br></pre></td></tr></table></figure><p>在左窗口中，检查jobs，以查看所有三个进程都在运行中。在右窗口中，确认所有三个进程都附加内容到文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># jobs</span></span><br><span class="line">[1]   运行中               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'rock '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> ) &amp;</span><br><span class="line">[2]-  运行中               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'paper '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> ) &amp;</span><br><span class="line">[3]+  运行中               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'scissors '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> ) &amp;</span><br></pre></td></tr></table></figure><p>仅使用之前学习的命令，暂停”rock”进程。在左窗口中，使用从jobs列表中确定的作业ID使作业进入前台，然后使用ctrl+z暂停该作业，确认”rock”进程为已停止。在右窗口中，确认”rock”输出不再活动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># jobs</span></span><br><span class="line">[1]   运行中               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'rock '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> ) &amp;</span><br><span class="line">[2]-  运行中               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'paper '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> ) &amp;</span><br><span class="line">[3]+  运行中               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'scissors '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> ) &amp;</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># fg %1</span></span><br><span class="line">( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'rock '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> )</span><br><span class="line">^Z</span><br><span class="line">[1]+  已停止               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'rock '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> )</span><br></pre></td></tr></table></figure><p>终止”paper”进程。在左窗口中，使作业进入前台，然后使用ctrl+c终止该作业，确认”paper”进程已经消失。在右窗口中，确认”paper”输出不再活动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># jobs</span></span><br><span class="line">[3]-  运行中               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'scissors '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> ) &amp;</span><br><span class="line">[4]+  运行中               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'paper '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> ) &amp;</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># fg %4</span></span><br><span class="line">( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'paper '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> )</span><br><span class="line">^C</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scissors scissors scissors scissors scissors scissors scissors scissors scissors scissors scissors scissors scissors scissors scissors scissors scissors scissors scissors scissors</span><br></pre></td></tr></table></figure><p>在左窗口中，使用ps查看剩余的作业。暂停中的作业具有状态T标志。其他后台作业为睡眠中(S)，因为ps在显示时处于”CPU上”(R)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]# ps j</span><br><span class="line">  PPID    PID   PGID    SID TTY       TPGID STAT   UID   TIME COMMAND</span><br><span class="line">   960   2580   2580   2580 tty1       2580 Ss+      0   0:00 -bash</span><br><span class="line">  3333   3337   3337   3337 pts/0      4653 Ss       0   0:00 -bash</span><br><span class="line">  3470   3475   3475   3475 pts/2      5657 Ss       0   0:00 -bash</span><br><span class="line">  3337   3690   3690   3337 pts/0      4653 T        0   0:00 tail -f /root/outfil</span><br><span class="line">  3337   4653   4653   3337 pts/0      4653 S+       0   0:00 tail -f /root/outfil</span><br><span class="line">  3475   4699   4699   3475 pts/2      5657 S        0   0:00 -bash</span><br><span class="line">  4699   5656   4699   3475 pts/2      5657 S        0   0:00 sleep 1</span><br><span class="line">  3475   5657   5657   3475 pts/2      5657 R+       0   0:00 ps j</span><br></pre></td></tr></table></figure><p>停止剩余的两个作业。在左窗口中，使其中一个作业进入前台。使用ctrl+c将其终止，对剩余的作业重复此操作。停止的作业在前入前台时会临时重新启动。确认没有剩余的作业，输出也已停止。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># jobs</span></span><br><span class="line">[1]+  运行中               ( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'scissors '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> ) &amp;</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># fg %1</span></span><br><span class="line">( <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">'scissors '</span> &gt;&gt; ~/outfile; sleep 1;</span><br><span class="line"><span class="keyword">done</span> )</span><br><span class="line">^C</span><br><span class="line">[root@zhoulijie ~]<span class="comment"># jobs</span></span><br><span class="line">[root@zhoulijie ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>在右窗口中，停止tail命令。关闭多余的终端窗口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie yum.repos.d]<span class="comment"># ps</span></span><br><span class="line">   PID TTY          TIME CMD</span><br><span class="line">  3337 pts/0    00:00:00 bash</span><br><span class="line">  3690 pts/0    00:00:00 tail</span><br><span class="line">  5870 pts/0    00:00:00 ps</span><br><span class="line">[root@zhoulijie yum.repos.d]<span class="comment"># kill 3690</span></span><br><span class="line">[root@zhoulijie yum.repos.d]<span class="comment"># ps</span></span><br><span class="line">   PID TTY          TIME CMD</span><br><span class="line">  5876 pts/0    00:00:00 bash</span><br><span class="line">  5897 pts/0    00:00:00 ps</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>python文件处理</title>
    <link href="https://github.com/chineselijie/2019/08/29/8.python%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/"/>
    <id>https://github.com/chineselijie/2019/08/29/8.python%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/</id>
    <published>2019-08-29T15:44:18.569Z</published>
    <updated>2019-08-25T13:18:34.634Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[TOC]</p><h1 id="python文件处理"><a href="#python文件处理" class="headerlink" title="python文件处理"></a>python文件处理</h1><p>python对文件处理分为两种，一种是本地处理，而另外一种就是通过网络数据处理（也就是爬虫相关），而本地的数据处理，主要是通过文件的都和写完成</p><blockquote><p> 我们先想一想平时对文件处理一般遇到过哪些问题:</p><ul><li>如何读取一个文件的内容，然后处理，最后写到一个新的文件</li><li>如何更改一个文件夹下面的某一些文件名</li></ul></blockquote><p>python的文件处理简单来说分为以下几点：</p><ul><li>文件的读写和关闭</li><li>文件的模式</li><li>文件的读取位置</li></ul><h2 id="文件的读取和关闭"><a href="#文件的读取和关闭" class="headerlink" title="文件的读取和关闭"></a>文件的读取和关闭</h2><p>python中想要获取文件里的内容，先要打开文件，然后才能都和写，而且写完之后一定要记得关闭</p><p>python中对文件的打开是通过open函数来获取一个句柄</p><ul><li>获取<code>读</code>的句柄，可以用<code>f.read()</code>进行读入</li><li>获取<code>写</code>的句柄<code>f</code>之后，就可以<code>f.weite()</code>进行写入</li><li>当你文件处理完毕之后，要关闭文件</li></ul><blockquote><p>应该会有人和博主思考的问题一样：为什么要关闭文件？</p><p>因为如果不正常关闭文件，缓冲在内存中的数据就不能真正地写入到文件中，可能造成数据丢失的现象</p></blockquote><h3 id="文件的打开"><a href="#文件的打开" class="headerlink" title="文件的打开"></a>文件的打开</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">file_obj=open(filename,mode=<span class="string">'r'</span>,buffering=<span class="number">-1</span>)</span><br><span class="line"><span class="comment"># 这里一共有3个参数，第一个是强制参数，后面两个是可选的</span></span><br><span class="line"><span class="comment"># mode可以是读，也可以是写，或者是追加，一般默认的是读文件</span></span><br><span class="line"><span class="comment"># buffering主要是设置缓冲区，一般我们都是用-1表示系统默认的缓冲区，若写100，则表示缓冲区为100</span></span><br></pre></td></tr></table></figure><h3 id="文件的读取"><a href="#文件的读取" class="headerlink" title="文件的读取"></a>文件的读取</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">r'somefile.txt'</span>)</span><br><span class="line">f.readline() <span class="comment"># 表示读文件的一行</span></span><br><span class="line">f.readlines() <span class="comment"># 表示把文件从头到位都读出来，并保存为一个列表</span></span><br></pre></td></tr></table></figure><blockquote><p>例如我们现在在D盘的python目录里面新建</p><p>123321.txt</p><p>123321.py</p><p>打开123321.txt输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">123456789</span></span><br><span class="line">&gt; ABCDEFGHI</span><br><span class="line">&gt; IHGFEDCBA</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>打开123321.py，写入代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">r'123321.txt'</span>)</span><br><span class="line">print(f.readline())</span><br><span class="line">print(f.readlines())</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123456789</span></span><br><span class="line"></span><br><span class="line">[<span class="string">'ABCDEFGHI\n'</span>, <span class="string">'IHGFEDCBA'</span>]</span><br></pre></td></tr></table></figure><h3 id="文件的写入"><a href="#文件的写入" class="headerlink" title="文件的写入"></a>文件的写入</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">r'somefile.txt,'</span>w<span class="string">')</span></span><br><span class="line"><span class="string">f.write() # 表示把字符串写入</span></span><br><span class="line"><span class="string">f.writelines() # 表示把一个列表写入</span></span><br><span class="line"><span class="string">f.close() # 表示关闭文件</span></span><br></pre></td></tr></table></figure><blockquote><p>例如我们现在在D盘的python目录里面新建</p><p>ABCCBA.txt</p><p>ABCCBA.py</p></blockquote><p>打开ABCCBA.py，写入代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">r'ABCCBA.txt'</span>,<span class="string">'w'</span>)</span><br><span class="line">f.write(<span class="string">'123321'</span>)</span><br><span class="line">f.writelines([<span class="string">'\nABCDEFGHI\n'</span>, <span class="string">'IHGFEDCBA'</span>])</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><blockquote><p>此处在后面如果没写入<code>f.close()</code>,那么在最后你打开ABCCBA.txt文件后是看不到你写入的内容的</p></blockquote><p>运行结果：</p><p>打开D盘的python目录下的ABCCBA.txt文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123321</span></span><br><span class="line">ABCDEFGHI</span><br><span class="line">IHGFEDCBA</span><br></pre></td></tr></table></figure><h3 id="文件的关闭"><a href="#文件的关闭" class="headerlink" title="文件的关闭"></a>文件的关闭</h3><blockquote><p>此处我介绍两种关闭方法</p></blockquote><p>1）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">r'somefile.txt'</span>)</span><br><span class="line">.............</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>2）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">r'somefile.txt'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.readlines()</span><br></pre></td></tr></table></figure><blockquote><p>with用法是python极力推荐的一种使用方法，因为它能够自动帮你关掉文件，你只需要专注对文件的处理就可以了</p></blockquote><h2 id="文件的模式"><a href="#文件的模式" class="headerlink" title="文件的模式"></a>文件的模式</h2><p>在上面我仅仅只列举了python的读和写，那么其他的模式该怎么办呢？</p><p>其实python只需要改变一下open里面的模式参数就可以了</p><p>​                                    open函数中的模式参数</p><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">‘r’</td><td align="center">读模式</td></tr><tr><td align="center">‘w’</td><td align="center">写模式</td></tr><tr><td align="center">‘a’</td><td align="center">追加模式</td></tr><tr><td align="center">‘b’</td><td align="center">二进制模式</td></tr><tr><td align="center">‘+’</td><td align="center">读/写模式</td></tr><tr><td align="center">‘r+’</td><td align="center">以读写模式打开</td></tr><tr><td align="center">‘w+’</td><td align="center">以读写模式打开</td></tr><tr><td align="center">‘a+’</td><td align="center">以读写模式打开</td></tr><tr><td align="center">‘rb’</td><td align="center">以二进制读模式打开</td></tr></tbody></table><h2 id="文件的读取位置"><a href="#文件的读取位置" class="headerlink" title="文件的读取位置"></a>文件的读取位置</h2><p>有时候我们就只想读取文件中的某一部分，或者我们需要从文章的某一部分开始读取</p><p>那么这就要用到<code>seek()</code>函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file_obj.seek(offset,whence=<span class="number">0</span>)</span><br><span class="line"><span class="comment"># seek 主要是在文件中移动指针，从`whence`(0表示文件的开头，1表示当前位置，2表示文件的末尾)偏移offset个字符</span></span><br></pre></td></tr></table></figure><blockquote><p>例如在D盘python目录下的123321.txt文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">123456789</span></span><br><span class="line">&gt; ABCDEFGHI</span><br><span class="line">&gt; IHGFEDCBA</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="从头读取3个字符"><a href="#从头读取3个字符" class="headerlink" title="从头读取3个字符"></a>从头读取3个字符</h3><p>在当前目录下创建seek1.py文件，写入代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">r'123321.txt'</span>)</span><br><span class="line">f.seek(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">print(f.read(<span class="number">3</span>))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure><h3 id="从尾部读取3个字符"><a href="#从尾部读取3个字符" class="headerlink" title="从尾部读取3个字符"></a>从尾部读取3个字符</h3><p>在当前目录下创建seek2.py文件，写入代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">b'123321.txt'</span>)</span><br><span class="line">f.seek(<span class="number">-3</span>,<span class="number">2</span>)</span><br><span class="line">print(f.read(<span class="number">3</span>))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实战1"><a href="#实战1" class="headerlink" title="实战1"></a>实战1</h2><blockquote><p>在D盘python目录里面创建2019.txt文件，写入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; hahaha</span><br><span class="line">&gt; hary</span><br><span class="line">&gt; natasha</span><br><span class="line">&gt; mary</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>请把2019.txt文件里面的内容都出来，写到一个新的文件，文件名：9102.txt，格式按照下面这种：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">1</span>:hahaha</span><br><span class="line">&gt; <span class="number">2</span>:hary</span><br><span class="line">&gt; <span class="number">3</span>:natasha</span><br><span class="line">&gt; <span class="number">4</span>:mary</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>在当前目录下创建test.py，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">'2019.txt'</span>) <span class="comment"># 打开文件</span></span><br><span class="line">count=f.readlines() <span class="comment"># 从文件中把内容都读出来，保存到列表中</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(count)): <span class="comment"># 关闭文件</span></span><br><span class="line">    count[i]=str(i+<span class="number">1</span>)+<span class="string">'：'</span>+count[i] <span class="comment"># 遍历列表，将每一行都加上下标</span></span><br><span class="line">print(count)</span><br><span class="line">f.close() <span class="comment"># 关闭文件</span></span><br><span class="line"></span><br><span class="line">f=open(<span class="string">'9102.txt'</span>,<span class="string">'w'</span>) <span class="comment"># 打开文件</span></span><br><span class="line">f.writelines(count) <span class="comment"># 把新的内容写入文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>优化重构代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_File</span><span class="params">()</span>:</span>    <span class="comment"># 把读文件抽成一个函数</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">r'2019.txt'</span>,<span class="string">'r'</span>)<span class="keyword">as</span> f:</span><br><span class="line">        read_lines_from_file=f.readlines()</span><br><span class="line">        <span class="keyword">return</span> read_lines_from_file</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_File</span><span class="params">(count=[])</span>:</span>   <span class="comment"># 把写文件抽成一个函数</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">r'9102.txt'</span>,<span class="string">'w'</span>)<span class="keyword">as</span> f:</span><br><span class="line">        f.writelines(count)</span><br><span class="line"></span><br><span class="line">new_lines=[]</span><br><span class="line"><span class="comment"># 遍历列表，将每一行都加上下标</span></span><br><span class="line"><span class="keyword">for</span> index,line <span class="keyword">in</span> enumerate(read_File()):</span><br><span class="line">    new_lines.append(str(index+<span class="number">1</span>)+<span class="string">'：'</span>+line)</span><br><span class="line"></span><br><span class="line">write_File(new_lines)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&apos;1：hahaha\n&apos;, &apos;2：hary\n&apos;, &apos;3：natasha\n&apos;, &apos;4：mary&apos;]</span><br></pre></td></tr></table></figure><p>打开9102.txt文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>：hahaha</span><br><span class="line"><span class="number">2</span>：hary</span><br><span class="line"><span class="number">3</span>：natasha</span><br><span class="line"><span class="number">4</span>：mary</span><br></pre></td></tr></table></figure><h2 id="实战2"><a href="#实战2" class="headerlink" title="实战2"></a>实战2</h2><blockquote><p>在D盘python目录下创建hahaha文件夹，网上下载几张图片放进去，用代码将全部照片重命名为1.jpg，2.jpg，3.jpg,…….以此类推</p></blockquote><p>在D盘python目录下创建test2.py，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">renameall</span><span class="params">()</span>:</span></span><br><span class="line">    fileList = os.listdir(<span class="string">r"D:\python\hahaha"</span>)  <span class="comment">#待修改文件夹</span></span><br><span class="line">    print(<span class="string">"修改前："</span>+str(fileList))  <span class="comment">#输出文件夹中包含的文件</span></span><br><span class="line">    currentpath = os.getcwd()  <span class="comment">#得到进程当前工作目录</span></span><br><span class="line">    os.chdir(<span class="string">r"D:\python\hahaha"</span>)  <span class="comment">#将当前工作目录修改为待修改文件夹的位置</span></span><br><span class="line">    num=<span class="number">1</span>  <span class="comment">#名称变量</span></span><br><span class="line">    <span class="keyword">for</span> fileName <span class="keyword">in</span> fileList:  <span class="comment">#遍历文件夹中所有文件</span></span><br><span class="line">        pat=<span class="string">".+\.(jpg|png|gif)"</span>  <span class="comment">#匹配文件名正则表达式</span></span><br><span class="line">        pattern = re.findall(pat,fileName)  <span class="comment">#进行匹配</span></span><br><span class="line">        os.rename(fileName,(str(num)+<span class="string">'.'</span>+pattern[<span class="number">0</span>]))  <span class="comment">#文件重新命名</span></span><br><span class="line">        num = num+<span class="number">1</span>  <span class="comment">#改变编号，继续下一项</span></span><br><span class="line">    print(<span class="string">"---------------------------------------------------"</span>)</span><br><span class="line">    os.chdir(currentpath)  <span class="comment">#改回程序运行前的工作目录</span></span><br><span class="line">    sys.stdin.flush()  <span class="comment">#刷新</span></span><br><span class="line">    print(<span class="string">"修改后："</span>+str(os.listdir(<span class="string">r"D:\python\hahaha"</span>)))  <span class="comment">#输出修改后文件夹中包含的文件</span></span><br><span class="line">renameall()</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">修改前：[<span class="string">'ACG.GY_01.jpg'</span>, <span class="string">'ACG.GY_02.jpg'</span>, <span class="string">'ACG.GY_03.jpg'</span>, <span class="string">'ACG.GY_04.jpg'</span>, <span class="string">'ACG.GY_05.jpg'</span>, <span class="string">'ACG.GY_06.jpg'</span>, <span class="string">'ACG.GY_07.jpg'</span>, <span class="string">'ACG.GY_08.jpg'</span>, <span class="string">'ACG.GY_09.jpg'</span>, <span class="string">'ACG.GY_10.jpg'</span>, <span class="string">'ACG.GY_11.jpg'</span>, <span class="string">'ACG.GY_12.jpg'</span>, <span class="string">'ACG.GY_13.jpg'</span>, <span class="string">'ACG.GY_14.jpg'</span>, <span class="string">'ACG.GY_15.jpg'</span>, <span class="string">'ACG.GY_16.jpg'</span>, <span class="string">'ACG.GY_17.jpg'</span>, <span class="string">'ACG.GY_18.jpg'</span>, <span class="string">'ACG.GY_19.jpg'</span>, <span class="string">'ACG.GY_20.jpg'</span>, <span class="string">'ACG.GY_21.jpg'</span>, <span class="string">'ACG.GY_22.jpg'</span>, <span class="string">'ACG.GY_23.jpg'</span>, <span class="string">'ACG.GY_24.jpg'</span>]</span><br><span class="line">---------------------------------------------------</span><br><span class="line">修改后：[<span class="string">'1.jpg'</span>, <span class="string">'2.jpg'</span>, <span class="string">'3.jpg'</span>, <span class="string">'4.jpg'</span>, <span class="string">'5.jpg'</span>, <span class="string">'6.jpg'</span>, <span class="string">'7.jpg'</span>, <span class="string">'8.jpg'</span>, <span class="string">'9.jpg'</span>, <span class="string">'10.jpg'</span>, <span class="string">'11.jpg'</span>, <span class="string">'12.jpg'</span>, <span class="string">'13.jpg'</span>, <span class="string">'14.jpg'</span>, <span class="string">'15.jpg'</span>, <span class="string">'16.jpg'</span>, <span class="string">'17.jpg'</span>, <span class="string">'18.jpg'</span>, <span class="string">'19.jpg'</span>, <span class="string">'20.jpg'</span>, <span class="string">'21.jpg'</span>, <span class="string">'22.jpg'</span>, <span class="string">'23.jpg'</span>, <span class="string">'24.jpg'</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="python" scheme="https://github.com/chineselijie/categories/python/"/>
    
    
      <category term="python" scheme="https://github.com/chineselijie/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>软件管理</title>
    <link href="https://github.com/chineselijie/2019/08/29/8.linux--%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <id>https://github.com/chineselijie/2019/08/29/8.linux--%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86/</id>
    <published>2019-08-29T15:44:18.566Z</published>
    <updated>2019-08-22T13:23:45.006Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[TOC]</p><h2 id="软件包的途径"><a href="#软件包的途径" class="headerlink" title="软件包的途径"></a>软件包的途径</h2><h2 id="软件包管理的职责"><a href="#软件包管理的职责" class="headerlink" title="软件包管理的职责"></a>软件包管理的职责</h2><ul><li>将二进制程序，库文件，配置文件，帮助文件打包成一个文件；</li><li>安装软件时按需将二进制文件，库文件，配置文件，帮助文件放到相应的位置；</li><li>生成数据库，追踪所安装的每一个文件；</li><li>软件卸载时根据安装时生成的数据库将对应的文件删除</li></ul><h2 id="软件包管理的核心功能"><a href="#软件包管理的核心功能" class="headerlink" title="软件包管理的核心功能"></a>软件包管理的核心功能</h2><ul><li>制作软件包</li><li>安装软件</li><li>卸载软件</li><li>升级软件</li><li>查询软件</li><li>校验软件</li></ul><h2 id="软件包管理"><a href="#软件包管理" class="headerlink" title="软件包管理"></a>软件包管理</h2><h2 id="软件包分类"><a href="#软件包分类" class="headerlink" title="软件包分类"></a>软件包分类</h2><h2 id="软件包管理工具"><a href="#软件包管理工具" class="headerlink" title="软件包管理工具"></a>软件包管理工具</h2><h2 id="软件安装方式"><a href="#软件安装方式" class="headerlink" title="软件安装方式"></a>软件安装方式</h2><ul><li>通过前端工具安装</li><li>通过后端工具安装</li><li>编译安装</li></ul><h2 id="rpm包命名规范"><a href="#rpm包命名规范" class="headerlink" title="rpm包命名规范"></a>rpm包命名规范</h2><p><img src="https://s2.ax1x.com/2019/04/23/EErG2q.jpg" alt></p><h2 id="rpm包管理"><a href="#rpm包管理" class="headerlink" title="rpm包管理"></a>rpm包管理</h2><h2 id="什么是rpm包及其作用"><a href="#什么是rpm包及其作用" class="headerlink" title="什么是rpm包及其作用"></a>什么是rpm包及其作用</h2><p>rpm是Redhat Package Manager的简称，用于管理软件包。 rpm有一个强大的数据库/var/lib/rpm。 rpm的管理工作包括软件的安装、卸载、升级、查询、校验、重建数据库、验证软件包来源合法性等等。</p><h4 id="rpm包安装"><a href="#rpm包安装" class="headerlink" title="rpm包安装"></a>rpm包安装</h4><blockquote><p>语法: rpm -ivh /PATH/TO/PACKAGE_FILE …</p><p>常用选项：<br>    -i: 安装<br>    -v: 显示详细信息<br>    -h: 显示安装进度条<br>    –test: 测试安装，但不真正执行安装过程<br>    –nodeps: 忽略依赖关系<br>    –replacepkgs: 重新安装，替换原有安装<br>    –oldpackage: 降级<br>    –force: 强行安装，可以实现重装或降级<br>    –nodigest: 不检查包的完整性<br>    –nosignature: 不检查包的来源合法性<br>    –noscripts: 不执行程序包脚本片断<br>        %pre：安装前脚本    –nopre<br>        %post：安装后脚本    –nopost<br>        %preun：卸载前脚本    –nopreun<br>        %postun：卸载后脚本    –nopostun</p></blockquote><h6 id="安装软件包-需要指定软件包绝对路径"><a href="#安装软件包-需要指定软件包绝对路径" class="headerlink" title="安装软件包, 需要指定软件包绝对路径"></a>安装软件包, 需要指定软件包绝对路径</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># rpm -ivh /mnt/cdrom/Packages/vsftpd-3.0.2-22.el7.x86_64.rpm </span></span><br><span class="line">警告：/mnt/cdrom/Packages/vsftpd-3.0.2-22.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID fd431d51: NOKEY</span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:vsftpd-3.0.2-22.el7              <span class="comment">################################# [100%]</span></span><br></pre></td></tr></table></figure><h6 id="在软件包所在目录下可以不指定绝对路径"><a href="#在软件包所在目录下可以不指定绝对路径" class="headerlink" title="在软件包所在目录下可以不指定绝对路径"></a>在软件包所在目录下可以不指定绝对路径</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie ~]<span class="comment"># cd /mnt/cdrom/Packages/</span></span><br><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -ivh tree-1.6.0-10.el7.x86_64.rpm </span></span><br><span class="line">警告：tree-1.6.0-10.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID fd431d51: NOKEY</span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:tree-1.6.0-10.el7                <span class="comment">################################# [100%]</span></span><br></pre></td></tr></table></figure><h6 id="测试一个软件包是否能在该系统上安装"><a href="#测试一个软件包是否能在该系统上安装" class="headerlink" title="测试一个软件包是否能在该系统上安装"></a>测试一个软件包是否能在该系统上安装</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -ivh --test vsftpd-3.0.2-22.el7.x86_64.rpm</span></span><br><span class="line">警告：/mnt/cdrom/Packages/vsftpd-3.0.2-22.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID fd431d51: NOKEY</span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">软件包 vsftpd-3.0.2-22.el7.x86_64 已经安装</span><br></pre></td></tr></table></figure><h6 id="如果软件包存在-强制再次安装"><a href="#如果软件包存在-强制再次安装" class="headerlink" title="如果软件包存在, 强制再次安装"></a>如果软件包存在, 强制再次安装</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -ivh --force vsftpd-3.0.2-22.el7.x86_64.rpm </span></span><br><span class="line">警告：vsftpd-3.0.2-22.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID fd431d51: NOKEY</span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:vsftpd-3.0.2-22.el7              <span class="comment">################################# [100%]</span></span><br></pre></td></tr></table></figure><h6 id="安装samba服务需要依赖其他组件-使用–nodeps可重新强制安装"><a href="#安装samba服务需要依赖其他组件-使用–nodeps可重新强制安装" class="headerlink" title="安装samba服务需要依赖其他组件, 使用–nodeps可重新强制安装"></a>安装samba服务需要依赖其他组件, 使用–nodeps可重新强制安装</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -ivh --nodeps tree-1.6.0-10.el7.x86_64.rpm </span></span><br><span class="line">警告：tree-1.6.0-10.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID fd431d51: NOKEY</span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">软件包 tree-1.6.0-10.el7.x86_64 已经安装</span><br></pre></td></tr></table></figure><h4 id="rpm包查询"><a href="#rpm包查询" class="headerlink" title="rpm包查询"></a>rpm包查询</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">rpm -q PACKAGE_NAME                 //查询指定的包是否已安装</span><br><span class="line">rpm -qa                             //查询已经安装的所有包</span><br><span class="line">rpm -qi PACKAGE_NAME                //查询指定包的说明信息</span><br><span class="line">rpm -ql PACKAGE_NAME                //查询指定软件包安装后生成的文件列表</span><br><span class="line">rpm -qf /path/to/somefile           //查询指定的文件是由哪个rpm包安装生成的</span><br><span class="line">rpm -qc PACKAGE_NAME                //查询指定包安装的配置文件</span><br><span class="line">rpm -qd PACKAGE_NAME                //查询指定包安装的帮助文件</span><br><span class="line">rpm -q --scripts PACKAGE_NAME       //查询指定包中包含的脚本</span><br><span class="line">rpm -q --whatprovides CAPABILITY    //查询指定的CAPABILITY（能力）由哪个包所提供</span><br><span class="line">    如：rpm -q --whatprovides /bin/cat</span><br><span class="line">rpm -q --whatrequires CAPABILITY    //查询指定的CAPABILITY被哪个包所依赖</span><br><span class="line">rpm -q --changelog COMMAND          //查询COMMAND的制作日志</span><br><span class="line">rpm -q --scripts PACKAGE_NAME       //查询指定软件包包含的所有脚本文件</span><br><span class="line">rpm -qR PACKAGE_NAME                //查询指定的软件包所依赖的CAPABILITY</span><br><span class="line">rpm -q --provides PACKAGE_NAME      //列出指定软件包所提供的CAPABILITY</span><br><span class="line"></span><br><span class="line">rpm -qpi /PATH/TO/PACKAGE_FILE      //查询指定未安装包的说明信息</span><br><span class="line">rpm -qpl /PATH/TO/PACKAGE_FILE      //查询未安装的软件包会产生哪些文件</span><br></pre></td></tr></table></figure><h6 id="查询vsftpd这个rpm包是否安装"><a href="#查询vsftpd这个rpm包是否安装" class="headerlink" title="查询vsftpd这个rpm包是否安装"></a>查询vsftpd这个rpm包是否安装</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -q vsftpd</span></span><br><span class="line">vsftpd-3.0.2-22.el7.x86_64</span><br></pre></td></tr></table></figure><h6 id="模糊查找系统已安装的rpm包"><a href="#模糊查找系统已安装的rpm包" class="headerlink" title="模糊查找系统已安装的rpm包"></a>模糊查找系统已安装的rpm包</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -qa |grep vsftpd</span></span><br><span class="line">vsftpd-3.0.2-22.el7.x86_64</span><br></pre></td></tr></table></figure><h6 id="查询vsftpd软件包的相关信息"><a href="#查询vsftpd软件包的相关信息" class="headerlink" title="查询vsftpd软件包的相关信息"></a>查询vsftpd软件包的相关信息</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -qi vsftpd</span></span><br><span class="line">Name        : vsftpd</span><br><span class="line">Version     : 3.0.2</span><br><span class="line">Release     : 22.el7</span><br><span class="line">Architecture: x86_64</span><br><span class="line">Install Date: 2019年04月23日 星期二 21时46分42秒</span><br><span class="line">Group       : System Environment/Daemons</span><br><span class="line">Size        : 356220</span><br><span class="line">License     : GPLv2 with exceptions</span><br><span class="line">Signature   : RSA/SHA256, 2017年03月23日 星期四 22时25分48秒, Key ID 199e2f91fd431d51</span><br><span class="line">Source RPM  : vsftpd-3.0.2-22.el7.src.rpm</span><br><span class="line">Build Date  : 2017年03月23日 星期四 22时01分19秒</span><br><span class="line">Build Host  : x86-034.build.eng.bos.redhat.com</span><br><span class="line">Relocations : (not relocatable)</span><br><span class="line">Packager    : Red Hat, Inc. &lt;http://bugzilla.redhat.com/bugzilla&gt;</span><br><span class="line">Vendor      : Red Hat, Inc.</span><br><span class="line">URL         : https://security.appspot.com/vsftpd.html</span><br><span class="line">Summary     : Very Secure Ftp Daemon</span><br><span class="line">Description :</span><br><span class="line">vsftpd is a Very Secure FTP daemon. It was written completely from</span><br><span class="line">scratch.</span><br></pre></td></tr></table></figure><h6 id="查询rpm包所安装的文件"><a href="#查询rpm包所安装的文件" class="headerlink" title="查询rpm包所安装的文件"></a>查询rpm包所安装的文件</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -ql vsftpd</span></span><br><span class="line">/etc/logrotate.d/vsftpd</span><br><span class="line">/etc/pam.d/vsftpd</span><br><span class="line">/etc/vsftpd</span><br><span class="line">/etc/vsftpd/ftpusers</span><br><span class="line">/etc/vsftpd/user_list</span><br><span class="line">/etc/vsftpd/vsftpd.conf</span><br><span class="line">/etc/vsftpd/vsftpd_conf_migrate.sh</span><br><span class="line">。。。。。。省略以下。。。。。。。。</span><br></pre></td></tr></table></figure><h6 id="查询rpm包相关的配置文件"><a href="#查询rpm包相关的配置文件" class="headerlink" title="查询rpm包相关的配置文件"></a>查询rpm包相关的配置文件</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -qc vsftpd</span></span><br><span class="line">/etc/logrotate.d/vsftpd</span><br><span class="line">/etc/pam.d/vsftpd</span><br><span class="line">/etc/vsftpd/ftpusers</span><br><span class="line">/etc/vsftpd/user_list</span><br><span class="line">/etc/vsftpd/vsftpd.conf</span><br></pre></td></tr></table></figure><h6 id="查询配置文件或命令来自于哪个rpm包"><a href="#查询配置文件或命令来自于哪个rpm包" class="headerlink" title="查询配置文件或命令来自于哪个rpm包"></a>查询配置文件或命令来自于哪个rpm包</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -qf /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">vsftpd-3.0.2-22.el7.x86_64</span><br><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -qf /usr/sbin/vsftpd</span></span><br><span class="line">vsftpd-3.0.2-22.el7.x86_64</span><br></pre></td></tr></table></figure><h6 id="查询未安装的软件包会产生哪些文件"><a href="#查询未安装的软件包会产生哪些文件" class="headerlink" title="查询未安装的软件包会产生哪些文件"></a>查询未安装的软件包会产生哪些文件</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -qlp vsftpd-3.0.2-22.el7.x86_64.rpm </span></span><br><span class="line">警告：vsftpd-3.0.2-22.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID fd431d51: NOKEY</span><br><span class="line">/etc/logrotate.d/vsftpd</span><br><span class="line">/etc/pam.d/vsftpd</span><br><span class="line">/etc/vsftpd</span><br><span class="line">/etc/vsftpd/ftpusers</span><br><span class="line">/etc/vsftpd/user_list</span><br><span class="line">/etc/vsftpd/vsftpd.conf</span><br><span class="line">/etc/vsftpd/vsftpd_conf_migrate.sh</span><br><span class="line">/usr/lib/systemd/system-generators/vsftpd-generator</span><br><span class="line">。。。。。。省略以下。。。。。。。。</span><br></pre></td></tr></table></figure><h6 id="查询未安装的软件说明信息"><a href="#查询未安装的软件说明信息" class="headerlink" title="查询未安装的软件说明信息"></a>查询未安装的软件说明信息</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -qip vsftpd-3.0.2-22.el7.x86_64.rpm </span></span><br><span class="line">警告：vsftpd-3.0.2-22.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID fd431d51: NOKEY</span><br><span class="line">Name        : vsftpd</span><br><span class="line">Version     : 3.0.2</span><br><span class="line">Release     : 22.el7</span><br><span class="line">Architecture: x86_64</span><br><span class="line">Install Date: (not installed)</span><br><span class="line">Group       : System Environment/Daemons</span><br><span class="line">Size        : 356220</span><br><span class="line">License     : GPLv2 with exceptions</span><br><span class="line">Signature   : RSA/SHA256, 2017年03月23日 星期四 22时25分48秒, Key ID 199e2f91fd431d51</span><br><span class="line">Source RPM  : vsftpd-3.0.2-22.el7.src.rpm</span><br><span class="line">Build Date  : 2017年03月23日 星期四 22时01分19秒</span><br><span class="line">Build Host  : x86-034.build.eng.bos.redhat.com</span><br><span class="line">Relocations : (not relocatable)</span><br><span class="line">Packager    : Red Hat, Inc. &lt;http://bugzilla.redhat.com/bugzilla&gt;</span><br><span class="line">Vendor      : Red Hat, Inc.</span><br><span class="line">URL         : https://security.appspot.com/vsftpd.html</span><br><span class="line">Summary     : Very Secure Ftp Daemon</span><br><span class="line">Description :</span><br><span class="line">vsftpd is a Very Secure FTP daemon. It was written completely from</span><br><span class="line">scratch.</span><br></pre></td></tr></table></figure><h4 id="rpm包升级"><a href="#rpm包升级" class="headerlink" title="rpm包升级"></a>rpm包升级</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh /PATH/TO/NEW_PACKAGE_FILE  //如果装有老版本的，则升级；否则，则安装</span><br><span class="line">rpm -Fvh /PATH/TO/NEW_PACKAGE_FILE  //如果装有老版本的，则升级；否则，退出</span><br><span class="line">    --oldpackage：降级</span><br><span class="line">    </span><br><span class="line">[root@zhoulijie Packages]# rpm -Uvh vsftpd-3.0.2-22.el7.x86_64.rpm </span><br><span class="line">警告：vsftpd-3.0.2-22.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID fd431d51: NOKEY</span><br><span class="line">准备中...                          ################################# [100%]</span><br><span class="line">软件包 vsftpd-3.0.2-22.el7.x86_64 已经安装</span><br></pre></td></tr></table></figure><h4 id="rpm包卸载"><a href="#rpm包卸载" class="headerlink" title="rpm包卸载"></a>rpm包卸载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//语法：rpm -e PACKAGE_NAME</span><br><span class="line"></span><br><span class="line">//先查询, 然后卸载 </span><br><span class="line">[root@zhoulijie Packages]# rpm -qa | grep vsftpd</span><br><span class="line">vsftpd-3.0.2-22.el7.x86_64</span><br><span class="line">[root@zhoulijie Packages]# rpm -e vsftpd</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>如果其他包依赖于要卸载的包，这个被依赖的包是无法卸载的，除非强制卸载，强制卸载后依赖于这个包的其他程序将无法正常工作</p><h4 id="rpm包校验"><a href="#rpm包校验" class="headerlink" title="rpm包校验"></a>rpm包校验</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 如果执行以下命令无内容输出说明此包未被修改过</span><br><span class="line">[root@localhost ~]# rpm -V vsftpd</span><br><span class="line">S.5....T.  c /etc/pam.d/vsftpd</span><br><span class="line">.......T.  c /etc/vsftpd/ftpusers</span><br><span class="line">S.5....T.  c /etc/vsftpd/vsftpd.conf</span><br><span class="line">.M.......    /var/ftp/pub</span><br><span class="line"></span><br><span class="line">S   //文件的容量大小是否被改变</span><br><span class="line">M   //文件的类型或者文件的属性是否被修改</span><br><span class="line">5   //MD5这一种指纹加密的内容已经不同</span><br><span class="line">D   //装置的主/次代码已经改变</span><br><span class="line">L   //路径已经被改变</span><br><span class="line">U   //文件的所属主已被修改</span><br><span class="line">G   //文件的所属组已被修改</span><br><span class="line">T   //文件的创建时间已被改变</span><br></pre></td></tr></table></figure><h4 id="rpm重建数据库"><a href="#rpm重建数据库" class="headerlink" title="rpm重建数据库"></a>rpm重建数据库</h4><p>数据库信息在/var/lib/rpm目录中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm --rebuilddb     //重建数据库，一定会重新建立</span><br><span class="line">rpm --initdb        //初始化数据库，没有才建立，有就不用建立</span><br></pre></td></tr></table></figure><h4 id="检察软件包来源合法性和完整性"><a href="#检察软件包来源合法性和完整性" class="headerlink" title="检察软件包来源合法性和完整性"></a>检察软件包来源合法性和完整性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">加密类型：</span><br><span class="line">    对称加密    //加密解密使用同一个密钥</span><br><span class="line">    公钥加密    //一对密钥，公钥和私钥。公钥隐含于私钥中，可以提取出来并公布出去</span><br><span class="line">    单向加密    //只能加密不能解密</span><br><span class="line">    </span><br><span class="line">/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release     //红帽官方公钥</span><br><span class="line"></span><br><span class="line">rpm -K PACKAGE_FILE     //检查指定包有无密钥信息</span><br><span class="line">    dsa，gpg            //验证来源合法性，也即验证签名。可以使用--nosignatrue略过此项</span><br><span class="line">    sha1，md5           //验证软件包完整性。可以使用--nodigest略过此项</span><br><span class="line">rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release    //导入密钥文件</span><br><span class="line">    CentOS 7发行版光盘提供的密钥文件    //RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>如何查询 util-linux 软件包安装了哪些文件？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -ql util-linux</span></span><br></pre></td></tr></table></figure><p>如何查询 mkdir 命令是由哪个 RPM 软件包安装的？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -qf /usr/bin/mkdir</span></span><br></pre></td></tr></table></figure><p>升级软件包时，-F、-U选项有何区别？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh 如果装有老版本的，则升级；否则，则安装</span><br><span class="line">rpm -Fvh 如果装有老版本的，则升级；否则，退出</span><br></pre></td></tr></table></figure><p>如何检查vsftpd软件包是否安装?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -q vsftpd</span></span><br></pre></td></tr></table></figure><p>如何检查vsftpd软件包所有的文件存放目录?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -ql vsftpd</span></span><br></pre></td></tr></table></figure><p>如何检查vsftpd软件包的配置文件?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -qc vsftpd</span></span><br></pre></td></tr></table></figure><p>如何使用rpm安装vsftpd服务?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -ivh vsftpd-3.0.2-22.el7.x86_64.rpm</span></span><br></pre></td></tr></table></figure><p>如何使用rpm强制安装依赖包?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -ivh --force vsftpd-3.0.2-22.el7.x86_64.rpm</span></span><br></pre></td></tr></table></figure><p>如何使用rpm卸载vsftpd软件包?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhoulijie Packages]<span class="comment"># rpm -e vsftpd</span></span><br></pre></td></tr></table></figure><p>将本章学习到的rpm命令整理成一个列表，写明每个命令的作用</p><table><thead><tr><th align="center">安装软件的命令格式</th><th align="center">rpm -ivh RPM安装包</th></tr></thead><tbody><tr><td align="center">升级软件的命令格式</td><td align="center">rpm -Uvh  RPM安装包</td></tr><tr><td align="center">卸载软件的命令格式</td><td align="center">rpm -e  RPM安装包</td></tr><tr><td align="center">查询软件描述信息的命令格式</td><td align="center">rpm -qpi  RPM安装包</td></tr><tr><td align="center">列出软件文件信息的命令格式</td><td align="center">rpm -qpl  RPM安装包</td></tr><tr><td align="center">查询文件属于哪个RPM的命令格式</td><td align="center">rpm -qf  RPM安装包</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="linux基础" scheme="https://github.com/chineselijie/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本基础</title>
    <link href="https://github.com/chineselijie/2019/08/29/8.linux--shell%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/"/>
    <id>https://github.com/chineselijie/2019/08/29/8.linux--shell%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/</id>
    <published>2019-08-29T15:44:18.563Z</published>
    <updated>2019-08-22T12:20:22.235Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[TOC]</p><h1 id="shell脚本基础"><a href="#shell脚本基础" class="headerlink" title="shell脚本基础"></a>shell脚本基础</h1><h2 id="变量详解"><a href="#变量详解" class="headerlink" title="变量详解"></a>变量详解</h2><h3 id="什么是变量"><a href="#什么是变量" class="headerlink" title="什么是变量"></a>什么是变量</h3><p>变量即是可以变化的量</p><h3 id="变量的作用"><a href="#变量的作用" class="headerlink" title="变量的作用"></a>变量的作用</h3><ul><li>保存表达式运算的结果至内存，方便复用或更改</li><li>若无变量而无需复用表达式运算的结果只能重新运算，耗时较长</li><li>可以把变量理解为一个存储信息的容器</li></ul><h3 id="变量取名以及注意事项"><a href="#变量取名以及注意事项" class="headerlink" title="变量取名以及注意事项"></a>变量取名以及注意事项</h3><ul><li><p>变量名应该做到见名知义</p></li><li><p>变量名区分大小写</p></li><li><p>变量名中有多个单词时有两种方式表示</p><ul><li>单词间使用下划线分隔（官方推荐）</li><li>首单词小写，后面单词的首字母大写</li></ul></li><li><p>变量名只能是由下划线、数字、字母组成，不能是空格或者特殊字符（#？&lt;.,$!&amp;*^~）</p></li><li><p>不能以中文做变量名</p></li><li><p>不能是保留字</p><ul><li><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">break</span>  <span class="built_in">continue</span>  <span class="keyword">elif</span>  <span class="keyword">else</span>  <span class="keyword">for</span>  global  <span class="keyword">if</span>  <span class="keyword">in</span>  is   not  or   <span class="keyword">while</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h3><ul><li>字符型</li><li>数值型<ul><li>整数</li><li>浮点数</li></ul></li><li>布尔型</li></ul><h3 id="变量操作"><a href="#变量操作" class="headerlink" title="变量操作"></a>变量操作</h3><ul><li>设置变量</li><li>引用变量</li><li>撤销变量</li></ul><blockquote><p>简述三种引号的用法</p><p>`反引号 用于命令替换 反引号里面的命令取出来是它们的值</p><p> ‘ 单引号 取本身，不完成命令替换</p><p>“ 双引号 实现命令替换，支持变量</p></blockquote><blockquote><p>切记单引号取出来是本身，</p><p>反引号和双引号取出来是他们的值</p></blockquote><h3 id="bash变量类型"><a href="#bash变量类型" class="headerlink" title="bash变量类型"></a>bash变量类型</h3><ul><li>环境变量</li><li>本地变量（局部变量）</li><li>位置变量</li><li>特殊变量（为bash内置，主要用来保存某些特殊数据的变量，也称之为系统变量）</li></ul><blockquote><p>下面介绍两种取除变量以及不取出变量的用法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用法一：取出变量的值</span></span><br><span class="line">[root@140 ~]<span class="comment"># a=5</span></span><br><span class="line">[root@140 ~]<span class="comment"># cat &gt; abc &lt;&lt; DOF</span></span><br><span class="line">&gt; <span class="variable">$a</span></span><br><span class="line">&gt; bb</span><br><span class="line">&gt; cc</span><br><span class="line">&gt; DOF</span><br><span class="line">[root@140 ~]<span class="comment"># cat abc</span></span><br><span class="line">5</span><br><span class="line">bb</span><br><span class="line">cc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用法二：不取除变量的值 </span></span><br><span class="line">[root@140 ~]<span class="comment"># cat &gt; abc &lt;&lt; 'EOF'</span></span><br><span class="line">&gt; <span class="variable">$a</span></span><br><span class="line">&gt; bb</span><br><span class="line">&gt; cc</span><br><span class="line">&gt; EOF</span><br><span class="line">[root@140 ~]<span class="comment"># cat abc</span></span><br><span class="line"><span class="variable">$a</span></span><br><span class="line">bb</span><br><span class="line">cc</span><br></pre></td></tr></table></figure><h4 id="本地变量"><a href="#本地变量" class="headerlink" title="本地变量"></a>本地变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地变量，作为当前shell的进程，对当前shell以外的其他shell进程，包括当前shell的父shell，子shell进程均无效</span></span><br><span class="line">VAR_NAME=VALUE(值)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 局部变量，作为当前代码段，多用于函数</span></span><br><span class="line"><span class="built_in">local</span>(局部) VAR_NAME=VALUE(值)</span><br></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 作用域为当前shell进程及其子进程</span></span><br><span class="line"><span class="built_in">export</span> VAR_NAME=VALUE(值)</span><br></pre></td></tr></table></figure><h4 id="位置变量"><a href="#位置变量" class="headerlink" title="位置变量"></a>位置变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$1</span>，<span class="variable">$2</span>，<span class="variable">$3</span>，....       //用来引用脚本的参数</span><br><span class="line">    <span class="built_in">shift</span> [num]         //位置变量使用完以后退出，后面的参数向前推进</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@140 opt]<span class="comment"># cat haah.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> ------------</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$2</span></span><br><span class="line"><span class="built_in">echo</span> ------------</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$3</span></span><br><span class="line"><span class="built_in">echo</span> ------------</span><br><span class="line">[root@140 opt]<span class="comment"># bash haah.sh 1 2 3</span></span><br><span class="line">1</span><br><span class="line">------------</span><br><span class="line">2</span><br><span class="line">------------</span><br><span class="line">3</span><br><span class="line">------------</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@140 opt]# cat huhu.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">for i in $*;do</span><br><span class="line">        echo $1</span><br><span class="line">        echo -----------</span><br><span class="line">        shift 2 </span><br><span class="line">done</span><br><span class="line">[root@140 opt]# bash huhu.sh 1 2 3 4 5 6</span><br><span class="line">1</span><br><span class="line">-----------</span><br><span class="line">3</span><br><span class="line">-----------</span><br><span class="line">5</span><br><span class="line">-----------</span><br><span class="line"></span><br><span class="line">-----------</span><br><span class="line"></span><br><span class="line">-----------</span><br><span class="line"></span><br><span class="line">-----------</span><br></pre></td></tr></table></figure><h4 id="特殊变量"><a href="#特殊变量" class="headerlink" title="特殊变量"></a>特殊变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$#</span>      //是传给脚本的参数个数</span><br><span class="line"><span class="variable">$0</span>      //是脚本本身的名字</span><br><span class="line">$!      //是shell最后运行的后台Process的PID</span><br><span class="line"><span class="variable">$@</span>      //是传给脚本的所有参数的列表</span><br><span class="line">$*      //是以一个单字符串显示所有向脚本传递的参数，与位置变量不同，参数可超过9个</span><br><span class="line">$$      //是脚本运行的当前进程ID号</span><br><span class="line">$?      //是显示上条命令的退出状态，0表示没有错误，其他表示有错误</span><br></pre></td></tr></table></figure><h4 id="bash中自带环境变量"><a href="#bash中自带环境变量" class="headerlink" title="bash中自带环境变量"></a>bash中自带环境变量</h4><ul><li>PATH</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@140 ~]<span class="comment"># echo $PATH</span></span><br><span class="line">/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/root/bin</span><br></pre></td></tr></table></figure><ul><li>SHELL</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@140 ~]<span class="comment"># echo $SHELL</span></span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><ul><li>UID</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@140 ~]<span class="comment"># echo $UID</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><ul><li>HISTSIZE</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@140 ~]<span class="comment"># echo $HISTSIZE</span></span><br><span class="line">1000</span><br></pre></td></tr></table></figure><ul><li>HOME</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@140 ~]<span class="comment"># echo $HOME</span></span><br><span class="line">/root</span><br></pre></td></tr></table></figure><ul><li>PWD</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@140 ~]<span class="comment"># echo $PWD</span></span><br><span class="line">/root</span><br></pre></td></tr></table></figure><ul><li>HISTFILE</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@140 ~]<span class="comment"># echo $HISTFILE</span></span><br><span class="line">/root/.bash_history</span><br></pre></td></tr></table></figure><ul><li>PS1</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@140 ~]<span class="comment"># echo $PS1</span></span><br><span class="line">[\u@\h \W]\$</span><br></pre></td></tr></table></figure><h4 id="只读变量"><a href="#只读变量" class="headerlink" title="只读变量"></a>只读变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 不能修改值，不能销毁，只能等shell进程终止时随之消亡</span></span><br><span class="line">readonly(只读) VAR_NAME=VALUE(值)</span><br></pre></td></tr></table></figure><h2 id="脚本基础"><a href="#脚本基础" class="headerlink" title="脚本基础"></a>脚本基础</h2><h3 id="什么是脚本"><a href="#什么是脚本" class="headerlink" title="什么是脚本"></a>什么是脚本</h3><p>​    脚本(script)是使用一种特定的描述性语言，依据一定的格式编写的可执行文件，又称作宏或批处理文件。脚本通常可以由应用程序临时调用并执行。</p><p>​    脚本简单地说就是一条条的文字命令，这些文字命令是我们可以看到的(如可以用记事本打开查看、编辑)，脚本程序在执行时，是由系统的一个解释器，将其一条条的翻译成机器可识别的指令，并按程序顺序执行。因为脚本在执行时多了一道翻译的过程，所以它比二进制程序执行效率要稍低一些。</p><h3 id="程序反回值"><a href="#程序反回值" class="headerlink" title="程序反回值"></a>程序反回值</h3><p>程序执行以后有两类返回值：</p><ul><li>程序执行的结果</li><li>程序状态返回代码（0-255）<ul><li>0：正确执行</li><li>1-255：错误执行，1、2、127系统预留，有特殊意义</li></ul></li></ul><h3 id="脚本测试"><a href="#脚本测试" class="headerlink" title="脚本测试"></a>脚本测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查脚本是否有语法错误</span></span><br><span class="line">bash -n scriptname</span><br><span class="line"></span><br><span class="line"><span class="comment"># 单步执行，检查脚本错在哪里（最常用）</span></span><br><span class="line">bash -x scriptname</span><br></pre></td></tr></table></figure><blockquote><p>例如此处写个错误的脚本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@140 opt]<span class="comment"># bash -x huhu.sh </span></span><br><span class="line">huhu.sh:行3: 未预期的符号 `<span class="keyword">do</span><span class="string">' 附近有语法错误</span></span><br><span class="line"><span class="string">huhu.sh:行3: `frr i in $*;do'</span></span><br></pre></td></tr></table></figure><h3 id="写脚本注意事项"><a href="#写脚本注意事项" class="headerlink" title="写脚本注意事项"></a>写脚本注意事项</h3><ul><li>禁止将为成功执行的代码直接写入脚本</li><li>脚本中的命令一定要用绝对路径</li></ul><h3 id="shell算术运算"><a href="#shell算术运算" class="headerlink" title="shell算术运算"></a>shell算术运算</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 变量</span></span><br><span class="line">A=30</span><br><span class="line">B=20</span><br><span class="line"></span><br><span class="line"><span class="comment"># A加上B</span></span><br><span class="line"><span class="built_in">echo</span> $[<span class="variable">$A</span> + <span class="variable">$B</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># A减去B</span></span><br><span class="line"><span class="built_in">echo</span> $[<span class="variable">$A</span> - <span class="variable">$B</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># A乘以B</span></span><br><span class="line"><span class="built_in">echo</span> $[<span class="variable">$A</span> * <span class="variable">$B</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># A除以B</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"scale=2;<span class="variable">$A</span>/<span class="variable">$B</span>"</span>|bc</span><br></pre></td></tr></table></figure><h3 id="命令间的逻辑关系"><a href="#命令间的逻辑关系" class="headerlink" title="命令间的逻辑关系"></a>命令间的逻辑关系</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 逻辑与：&amp;&amp;</span></span><br><span class="line">含义：当前一个命令执行成功后，再次执行后面的命令</span><br><span class="line"><span class="comment"># 逻辑非：||</span></span><br><span class="line">含义：当前一个命令执行失败后，再次执行后面的命令</span><br></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><h4 id="1-写一个脚本，要求如下："><a href="#1-写一个脚本，要求如下：" class="headerlink" title="1.写一个脚本，要求如下："></a>1.写一个脚本，要求如下：</h4><ul><li>设定变量Fa的值为<code>/etc/passwd</code></li><li>设定变量line的为<code>$(cat $Fa | wc -l)</code></li><li>依次向<code>/etc/passwd</code>中的每个用户问好，并且说出对方的ID是什么。结果输出如下：<ul><li>Hello,root，your UID is 0.</li></ul></li><li>统计当前系统一个有多少个用户并输出</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置变量</span></span><br><span class="line">Fa=/etc/passwd</span><br><span class="line">line=$(cat <span class="variable">$Fa</span> | wc -l)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取出用户名以及UID</span></span><br><span class="line"><span class="keyword">for</span> ((i=1;i&lt;=<span class="variable">$line</span>;i++));<span class="keyword">do</span></span><br><span class="line">        username=$(awk -F <span class="string">':'</span> -vi=<span class="variable">$i</span> <span class="string">"NR==<span class="variable">$i</span> &#123;print $ 1&#125;"</span> <span class="variable">$Fa</span>)</span><br><span class="line">        user_uid=$(awk -F <span class="string">':'</span> -vi=<span class="variable">$i</span> <span class="string">"NR==<span class="variable">$i</span> &#123;print $ 1&#125;"</span> <span class="variable">$Fa</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给每个用户问好</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"hello <span class="variable">$username</span> , your uid is <span class="variable">$user_uid</span> ."</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计用户</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Cuerrent system has <span class="variable">$(cat $Fa | wc -l)</span> user."</span></span><br></pre></td></tr></table></figure><h4 id="2-写一个脚本，传递两个整数给此脚本，让脚本分别计算并显示这两个整数的和，差，积，商"><a href="#2-写一个脚本，传递两个整数给此脚本，让脚本分别计算并显示这两个整数的和，差，积，商" class="headerlink" title="2.写一个脚本，传递两个整数给此脚本，让脚本分别计算并显示这两个整数的和，差，积，商"></a>2.写一个脚本，传递两个整数给此脚本，让脚本分别计算并显示这两个整数的和，差，积，商</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@140 opt]<span class="comment"># cat suanfa.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 变量</span></span><br><span class="line">A=<span class="variable">$1</span></span><br><span class="line">B=<span class="variable">$2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A加上B</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$A</span>+<span class="variable">$B</span>=$[<span class="variable">$A</span> + <span class="variable">$B</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># A减去B</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$A</span>-<span class="variable">$B</span>=$[<span class="variable">$A</span> - <span class="variable">$B</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># A乘以B</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$A</span>*<span class="variable">$B</span>=$[<span class="variable">$A</span> * <span class="variable">$B</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置变量</span></span><br><span class="line">chuyi=$(<span class="built_in">echo</span> <span class="string">"scale=2;<span class="variable">$A</span>/<span class="variable">$B</span>"</span>|bc)</span><br><span class="line"></span><br><span class="line"><span class="comment"># A除以B</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$A</span>/<span class="variable">$B</span>=<span class="variable">$chuyi</span></span><br><span class="line"></span><br><span class="line">[root@140 opt]<span class="comment"># bash suanfa.sh 50 20</span></span><br><span class="line">50+20=70</span><br><span class="line">50-20=30</span><br><span class="line">50*20=1000</span><br><span class="line">50/20=2.50</span><br></pre></td></tr></table></figure><h4 id="3-写一个脚本，要求如下："><a href="#3-写一个脚本，要求如下：" class="headerlink" title="3.写一个脚本，要求如下："></a>3.写一个脚本，要求如下：</h4><ul><li>创建目录/tmp/scripts</li><li>切换至此目录中</li><li>复制/etc/pam.d目录至当前目录，并重命名为test</li><li>将当前目录的test及其里面的文件和子目录的属主改为redhat</li><li>将test及其子目录中的文件的其它用户的权限改为没有任何权限</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@140 opt]<span class="comment"># cat mulu.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置变量</span></span><br><span class="line">mkdir=/usr/bin/mkdir</span><br><span class="line"><span class="built_in">cd</span>=/usr/bin/<span class="built_in">cd</span></span><br><span class="line">cp=/usr/bin/cp</span><br><span class="line">chown=/usr/bin/chown</span><br><span class="line">chmod=/usr/bin/chmod</span><br><span class="line">useradd=/usr/bin/useradd</span><br><span class="line"><span class="comment"># 一条命令解决</span></span><br><span class="line">mkdir /tmp/scripts &amp;&amp; <span class="built_in">cd</span> /tmp/scripts &amp;&amp; cp -rf /etc/pam.d ./<span class="built_in">test</span> &amp;&amp; chown -Rf redhat: <span class="built_in">test</span> || useradd redhat &amp;&amp; chmod -Rf o-rwx <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">[root@140 opt]<span class="comment"># bash -x mulu.sh </span></span><br><span class="line">+ mkdir=/usr/bin/mkdir</span><br><span class="line">+ <span class="built_in">cd</span>=/usr/bin/<span class="built_in">cd</span></span><br><span class="line">+ cp=/usr/bin/cp</span><br><span class="line">+ chown=/usr/bin/chown</span><br><span class="line">+ chmod=/usr/bin/chmod</span><br><span class="line">+ useradd=/usr/bin/useradd</span><br><span class="line">+ mkdir /tmp/scripts</span><br><span class="line">+ <span class="built_in">cd</span> /tmp/scripts</span><br><span class="line">+ cp -rf /etc/pam.d ./<span class="built_in">test</span></span><br><span class="line">+ chown -Rf redhat: <span class="built_in">test</span></span><br><span class="line">+ chmod -Rf o-rwx <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>4.写一个脚本，要求如下：</p><ul><li>显示当前系统日期和时间，而后创建目录/tmp/lstest</li><li>切换工作目录至/tmp/lstest</li><li>创建目录a1d，b56e，6test</li><li>创建空文件xy，x2y，732</li><li>列出当前目录下以a，x或者6开头的文件或目录</li><li>列出当前目录下以字母开头，后跟一个任意数字，而后跟任意长度字符的文件或目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@140 opt]<span class="comment"># cat shijian.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置变量</span></span><br><span class="line">date=/usr/bin/date</span><br><span class="line">mkdir=/usr/bin/mkdir</span><br><span class="line"><span class="built_in">cd</span>=/usr/bin/<span class="built_in">cd</span></span><br><span class="line">touch=/usr/bin/touch</span><br><span class="line">ls=/usr/bin/ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">date &amp;&amp; mkdir /tmp/lstest &amp;&amp; <span class="built_in">cd</span> /tmp/lstest &amp;&amp; mkdir a1d b56e 6test &amp;&amp; touch xy x2y 732 &amp;&amp; ls a* x* 6* &amp;&amp; ls [a-z][0-9]*</span><br><span class="line">[root@140 opt]<span class="comment"># bash -x shijian.sh </span></span><br><span class="line">+ date=/usr/bin/date</span><br><span class="line">+ mkdir=/usr/bin/mkdir</span><br><span class="line">+ <span class="built_in">cd</span>=/usr/bin/<span class="built_in">cd</span></span><br><span class="line">+ touch=/usr/bin/touch</span><br><span class="line">+ ls=/usr/bin/ls</span><br><span class="line">+ date</span><br><span class="line">2019年 05月 21日 星期二 22:11:10 CST</span><br><span class="line">+ mkdir /tmp/lstest</span><br><span class="line">+ <span class="built_in">cd</span> /tmp/lstest</span><br><span class="line">+ mkdir a1d b56e 6test</span><br><span class="line">+ touch xy x2y 732</span><br><span class="line">+ ls a1d x2y xy 6test</span><br><span class="line">x2y  xy</span><br><span class="line"></span><br><span class="line">6test:</span><br><span class="line"></span><br><span class="line">a1d:</span><br><span class="line">+ ls a1d b56e x2y</span><br><span class="line">x2y</span><br><span class="line"></span><br><span class="line">a1d:</span><br><span class="line"></span><br><span class="line">b56e:</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux进阶" scheme="https://github.com/chineselijie/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux进阶" scheme="https://github.com/chineselijie/tags/linux%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>谈Python变量和数据类型</title>
    <link href="https://github.com/chineselijie/2019/08/29/7.%E8%B0%88Python%E5%8F%98%E9%87%8F%E5%92%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://github.com/chineselijie/2019/08/29/7.%E8%B0%88Python%E5%8F%98%E9%87%8F%E5%92%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2019-08-29T15:44:18.561Z</published>
    <updated>2019-08-24T17:41:18.900Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>关于作者</strong></p><p><strong>周李杰</strong>，最后一批90后，现居<strong>湖北武汉</strong></p><p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p><p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; print(&quot;👆以上是不完整的我&quot;) //请我吃大餐将会了解更多</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>[TOC]</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>Python的变量类型非常简单，主要分为：</p><ul><li>numbers：分为整数int和浮点数float</li></ul><p>整数：比如1，200，400，-1000，0，通常也有用十六进制表示的，比如0xff00等</p><p>浮点数：比如1.11，12.13，-10.02，也有比较大的浮点数，比如2.12x10^9</p><ul><li>string：单引号，双引号，三引号</li></ul><p>python的字符串以<code>&#39;&#39;</code>或者<code>”“</code>或者<code>&quot;&quot;&quot;</code>括起来的随意文本都是字符串</p><p>例如：</p><p><code>&#39;abcd&#39;</code>    <code>&quot;hello world&quot;</code>    <code>&quot;&quot;&quot;This is an apple.”&quot;&quot;</code></p><blockquote><p>有一点需要注意：若字符串里面包含特殊字符，可以用转义符<code>\</code>进行转义</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 特殊字符转义</span></span><br><span class="line"><span class="comment"># hahaha = 'xiao ming said "I'am full"'</span></span><br><span class="line">hahaha = <span class="string">'xiao ming said \"I\'am full\"'</span></span><br><span class="line">print(hahaha)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xiao ming said <span class="string">"I'am full"</span></span><br></pre></td></tr></table></figure><blockquote><p>说到字符串，这里需要讲一下python的字符串format格式，一般分为两种</p><p>1）%操作符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="comment"># %操作符</span></span><br><span class="line">&gt; name = <span class="string">"natasha"</span></span><br><span class="line">&gt; age = <span class="number">18</span></span><br><span class="line">&gt; print(<span class="string">"your name is %s,age is %d."</span>%(name,age))</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; your name <span class="keyword">is</span> natasha,age <span class="keyword">is</span> <span class="number">18.</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>2) format</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="comment"># format</span></span><br><span class="line">&gt; name = <span class="string">'harry'</span></span><br><span class="line">&gt; age = <span class="number">18</span></span><br><span class="line">&gt; print(<span class="string">"your name is &#123;0&#125;,age is &#123;1&#125;."</span>.format(name,age))</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; your name <span class="keyword">is</span> harry,age <span class="keyword">is</span> <span class="number">18.</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>布尔值</li></ul><p>python中的布尔值，只有True和False两种（切记一定要注意大小写）</p><p>布尔值的运算可以用<code>and</code>，<code>or</code>和<code>not</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a <span class="keyword">and</span> b <span class="comment"># 表示a和b都为True，最后的运算结果才是True，否则为False</span></span><br><span class="line">a <span class="keyword">or</span> b <span class="comment"># 表示a或者b其中有一个为True,最后的运算结果才是True，否则为False</span></span><br><span class="line"><span class="keyword">not</span> <span class="comment"># 是非运算，它是一个单目的运算，就是把True变成False，把False变成True</span></span><br></pre></td></tr></table></figure><ul><li>空值</li></ul><p>python的值是用None表示，None不是0，也不是空字符串，也不是False，它是一个特殊的空值，我们可以用python的内置函数type来看一下，然后分别用0，空字符，False来比较一下，看看它到底是为何物</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># type</span></span><br><span class="line">print(type(<span class="literal">None</span>))</span><br><span class="line"><span class="comment"># 0</span></span><br><span class="line">print(<span class="literal">None</span> == <span class="number">0</span>)</span><br><span class="line"><span class="comment"># 空字符</span></span><br><span class="line">print(<span class="literal">None</span> == <span class="string">''</span>)</span><br><span class="line"><span class="comment"># False</span></span><br><span class="line">print(<span class="literal">None</span> == <span class="literal">False</span>)</span><br><span class="line">print(<span class="literal">None</span> == <span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">NoneType</span>'&gt;</span></span><br><span class="line"><span class="class"><span class="title">False</span></span></span><br><span class="line"><span class="class"><span class="title">False</span></span></span><br><span class="line"><span class="class"><span class="title">False</span></span></span><br><span class="line"><span class="class"><span class="title">True</span></span></span><br></pre></td></tr></table></figure><h2 id="Python的变量命名"><a href="#Python的变量命名" class="headerlink" title="Python的变量命名"></a>Python的变量命名</h2><p>python的变量名必须是大小写的英文字母，数字和下划线<code>_</code>的组合，切记不能使用数字开头</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 变量命名</span></span><br><span class="line">a = <span class="number">10</span></span><br><span class="line">print(a)</span><br><span class="line">n_1 = <span class="number">100</span></span><br><span class="line">print(n_1)</span><br><span class="line">a = <span class="string">'sdfdsff'</span></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">100</span></span><br><span class="line">sdfdsff</span><br></pre></td></tr></table></figure><blockquote><p>python是动态语言，它不像java是强制类型语言，是静态语言，也就是说你在定义变量的时候就要指定类型，而python是动态语言，是边编译边执行，这样正如蛇的含义所在–灵活。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周李杰&lt;/strong&gt;，最后一批90后，现居&lt;strong&gt;湖北武汉&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="python" scheme="https://github.com/chineselijie/categories/python/"/>
    
    
      <category term="python" scheme="https://github.com/chineselijie/tags/python/"/>
    
  </entry>
  
</feed>
